// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: s2_dota_match_metadata.proto

package skadistats.clarity.wire.s2.proto;

public final class S2DotaMatchMetadata {
  private S2DotaMatchMetadata() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CLobbyTimedRewardDetailsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CLobbyTimedRewardDetails)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 item_def_index = 2;</code>
     */
    boolean hasItemDefIndex();
    /**
     * <code>optional uint32 item_def_index = 2;</code>
     */
    int getItemDefIndex();

    /**
     * <code>optional bool is_supply_crate = 3;</code>
     */
    boolean hasIsSupplyCrate();
    /**
     * <code>optional bool is_supply_crate = 3;</code>
     */
    boolean getIsSupplyCrate();

    /**
     * <code>optional bool is_timed_drop = 4;</code>
     */
    boolean hasIsTimedDrop();
    /**
     * <code>optional bool is_timed_drop = 4;</code>
     */
    boolean getIsTimedDrop();

    /**
     * <code>optional uint32 account_id = 5;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 5;</code>
     */
    int getAccountId();

    /**
     * <code>optional uint32 origin = 6;</code>
     */
    boolean hasOrigin();
    /**
     * <code>optional uint32 origin = 6;</code>
     */
    int getOrigin();
  }
  /**
   * Protobuf type {@code CLobbyTimedRewardDetails}
   */
  public static final class CLobbyTimedRewardDetails extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CLobbyTimedRewardDetails)
      CLobbyTimedRewardDetailsOrBuilder {
    // Use CLobbyTimedRewardDetails.newBuilder() to construct.
    private CLobbyTimedRewardDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CLobbyTimedRewardDetails(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CLobbyTimedRewardDetails defaultInstance;
    public static CLobbyTimedRewardDetails getDefaultInstance() {
      return defaultInstance;
    }

    public CLobbyTimedRewardDetails getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CLobbyTimedRewardDetails(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              itemDefIndex_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              isSupplyCrate_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              isTimedDrop_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              accountId_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              origin_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CLobbyTimedRewardDetails_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CLobbyTimedRewardDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder.class);
    }

    public static com.google.protobuf.Parser<CLobbyTimedRewardDetails> PARSER =
        new com.google.protobuf.AbstractParser<CLobbyTimedRewardDetails>() {
      public CLobbyTimedRewardDetails parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CLobbyTimedRewardDetails(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CLobbyTimedRewardDetails> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ITEM_DEF_INDEX_FIELD_NUMBER = 2;
    private int itemDefIndex_;
    /**
     * <code>optional uint32 item_def_index = 2;</code>
     */
    public boolean hasItemDefIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 item_def_index = 2;</code>
     */
    public int getItemDefIndex() {
      return itemDefIndex_;
    }

    public static final int IS_SUPPLY_CRATE_FIELD_NUMBER = 3;
    private boolean isSupplyCrate_;
    /**
     * <code>optional bool is_supply_crate = 3;</code>
     */
    public boolean hasIsSupplyCrate() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool is_supply_crate = 3;</code>
     */
    public boolean getIsSupplyCrate() {
      return isSupplyCrate_;
    }

    public static final int IS_TIMED_DROP_FIELD_NUMBER = 4;
    private boolean isTimedDrop_;
    /**
     * <code>optional bool is_timed_drop = 4;</code>
     */
    public boolean hasIsTimedDrop() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool is_timed_drop = 4;</code>
     */
    public boolean getIsTimedDrop() {
      return isTimedDrop_;
    }

    public static final int ACCOUNT_ID_FIELD_NUMBER = 5;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 5;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 account_id = 5;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    public static final int ORIGIN_FIELD_NUMBER = 6;
    private int origin_;
    /**
     * <code>optional uint32 origin = 6;</code>
     */
    public boolean hasOrigin() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 origin = 6;</code>
     */
    public int getOrigin() {
      return origin_;
    }

    private void initFields() {
      itemDefIndex_ = 0;
      isSupplyCrate_ = false;
      isTimedDrop_ = false;
      accountId_ = 0;
      origin_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(2, itemDefIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(3, isSupplyCrate_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(4, isTimedDrop_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(5, accountId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, origin_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, itemDefIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isSupplyCrate_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isTimedDrop_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, accountId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, origin_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CLobbyTimedRewardDetails}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CLobbyTimedRewardDetails)
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetailsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CLobbyTimedRewardDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CLobbyTimedRewardDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder.class);
      }

      // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        itemDefIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        isSupplyCrate_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        isTimedDrop_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        origin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CLobbyTimedRewardDetails_descriptor;
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails getDefaultInstanceForType() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.getDefaultInstance();
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails build() {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails buildPartial() {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.itemDefIndex_ = itemDefIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isSupplyCrate_ = isSupplyCrate_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isTimedDrop_ = isTimedDrop_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.origin_ = origin_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails) {
          return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails other) {
        if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.getDefaultInstance()) return this;
        if (other.hasItemDefIndex()) {
          setItemDefIndex(other.getItemDefIndex());
        }
        if (other.hasIsSupplyCrate()) {
          setIsSupplyCrate(other.getIsSupplyCrate());
        }
        if (other.hasIsTimedDrop()) {
          setIsTimedDrop(other.getIsTimedDrop());
        }
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasOrigin()) {
          setOrigin(other.getOrigin());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int itemDefIndex_ ;
      /**
       * <code>optional uint32 item_def_index = 2;</code>
       */
      public boolean hasItemDefIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 item_def_index = 2;</code>
       */
      public int getItemDefIndex() {
        return itemDefIndex_;
      }
      /**
       * <code>optional uint32 item_def_index = 2;</code>
       */
      public Builder setItemDefIndex(int value) {
        bitField0_ |= 0x00000001;
        itemDefIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 item_def_index = 2;</code>
       */
      public Builder clearItemDefIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        itemDefIndex_ = 0;
        onChanged();
        return this;
      }

      private boolean isSupplyCrate_ ;
      /**
       * <code>optional bool is_supply_crate = 3;</code>
       */
      public boolean hasIsSupplyCrate() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool is_supply_crate = 3;</code>
       */
      public boolean getIsSupplyCrate() {
        return isSupplyCrate_;
      }
      /**
       * <code>optional bool is_supply_crate = 3;</code>
       */
      public Builder setIsSupplyCrate(boolean value) {
        bitField0_ |= 0x00000002;
        isSupplyCrate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_supply_crate = 3;</code>
       */
      public Builder clearIsSupplyCrate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isSupplyCrate_ = false;
        onChanged();
        return this;
      }

      private boolean isTimedDrop_ ;
      /**
       * <code>optional bool is_timed_drop = 4;</code>
       */
      public boolean hasIsTimedDrop() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool is_timed_drop = 4;</code>
       */
      public boolean getIsTimedDrop() {
        return isTimedDrop_;
      }
      /**
       * <code>optional bool is_timed_drop = 4;</code>
       */
      public Builder setIsTimedDrop(boolean value) {
        bitField0_ |= 0x00000004;
        isTimedDrop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_timed_drop = 4;</code>
       */
      public Builder clearIsTimedDrop() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isTimedDrop_ = false;
        onChanged();
        return this;
      }

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 5;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 account_id = 5;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 5;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000008;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 5;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        accountId_ = 0;
        onChanged();
        return this;
      }

      private int origin_ ;
      /**
       * <code>optional uint32 origin = 6;</code>
       */
      public boolean hasOrigin() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 origin = 6;</code>
       */
      public int getOrigin() {
        return origin_;
      }
      /**
       * <code>optional uint32 origin = 6;</code>
       */
      public Builder setOrigin(int value) {
        bitField0_ |= 0x00000010;
        origin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 origin = 6;</code>
       */
      public Builder clearOrigin() {
        bitField0_ = (bitField0_ & ~0x00000010);
        origin_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CLobbyTimedRewardDetails)
    }

    static {
      defaultInstance = new CLobbyTimedRewardDetails(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CLobbyTimedRewardDetails)
  }

  public interface CDOTAMatchMetadataFileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAMatchMetadataFile)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 version = 1;</code>
     */
    boolean hasVersion();
    /**
     * <code>required int32 version = 1;</code>
     */
    int getVersion();

    /**
     * <code>required uint64 match_id = 2;</code>
     */
    boolean hasMatchId();
    /**
     * <code>required uint64 match_id = 2;</code>
     */
    long getMatchId();

    /**
     * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
     */
    boolean hasMetadata();
    /**
     * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
     */
    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata getMetadata();
    /**
     * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
     */
    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataOrBuilder getMetadataOrBuilder();

    /**
     * <code>optional bytes private_metadata = 5;</code>
     */
    boolean hasPrivateMetadata();
    /**
     * <code>optional bytes private_metadata = 5;</code>
     */
    com.google.protobuf.ByteString getPrivateMetadata();
  }
  /**
   * Protobuf type {@code CDOTAMatchMetadataFile}
   */
  public static final class CDOTAMatchMetadataFile extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAMatchMetadataFile)
      CDOTAMatchMetadataFileOrBuilder {
    // Use CDOTAMatchMetadataFile.newBuilder() to construct.
    private CDOTAMatchMetadataFile(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAMatchMetadataFile(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAMatchMetadataFile defaultInstance;
    public static CDOTAMatchMetadataFile getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAMatchMetadataFile getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAMatchMetadataFile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              version_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              matchId_ = input.readUInt64();
              break;
            }
            case 26: {
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = metadata_.toBuilder();
              }
              metadata_ = input.readMessage(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(metadata_);
                metadata_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 42: {
              bitField0_ |= 0x00000008;
              privateMetadata_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadataFile_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadataFile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAMatchMetadataFile> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAMatchMetadataFile>() {
      public CDOTAMatchMetadataFile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAMatchMetadataFile(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAMatchMetadataFile> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <code>required int32 version = 1;</code>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 version = 1;</code>
     */
    public int getVersion() {
      return version_;
    }

    public static final int MATCH_ID_FIELD_NUMBER = 2;
    private long matchId_;
    /**
     * <code>required uint64 match_id = 2;</code>
     */
    public boolean hasMatchId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 match_id = 2;</code>
     */
    public long getMatchId() {
      return matchId_;
    }

    public static final int METADATA_FIELD_NUMBER = 3;
    private skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata metadata_;
    /**
     * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
     */
    public boolean hasMetadata() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
     */
    public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata getMetadata() {
      return metadata_;
    }
    /**
     * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
     */
    public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataOrBuilder getMetadataOrBuilder() {
      return metadata_;
    }

    public static final int PRIVATE_METADATA_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString privateMetadata_;
    /**
     * <code>optional bytes private_metadata = 5;</code>
     */
    public boolean hasPrivateMetadata() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bytes private_metadata = 5;</code>
     */
    public com.google.protobuf.ByteString getPrivateMetadata() {
      return privateMetadata_;
    }

    private void initFields() {
      version_ = 0;
      matchId_ = 0L;
      metadata_ = skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.getDefaultInstance();
      privateMetadata_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMatchId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, matchId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, metadata_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(5, privateMetadata_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, matchId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, metadata_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, privateMetadata_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAMatchMetadataFile}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAMatchMetadataFile)
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadataFile_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadataFile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile.Builder.class);
      }

      // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMetadataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        matchId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (metadataBuilder_ == null) {
          metadata_ = skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.getDefaultInstance();
        } else {
          metadataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        privateMetadata_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadataFile_descriptor;
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile getDefaultInstanceForType() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile.getDefaultInstance();
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile build() {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile buildPartial() {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.matchId_ = matchId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (metadataBuilder_ == null) {
          result.metadata_ = metadata_;
        } else {
          result.metadata_ = metadataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.privateMetadata_ = privateMetadata_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile) {
          return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile other) {
        if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasMatchId()) {
          setMatchId(other.getMatchId());
        }
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (other.hasPrivateMetadata()) {
          setPrivateMetadata(other.getPrivateMetadata());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVersion()) {
          
          return false;
        }
        if (!hasMatchId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataFile) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int version_ ;
      /**
       * <code>required int32 version = 1;</code>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 version = 1;</code>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>required int32 version = 1;</code>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 version = 1;</code>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0;
        onChanged();
        return this;
      }

      private long matchId_ ;
      /**
       * <code>required uint64 match_id = 2;</code>
       */
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 match_id = 2;</code>
       */
      public long getMatchId() {
        return matchId_;
      }
      /**
       * <code>required uint64 match_id = 2;</code>
       */
      public Builder setMatchId(long value) {
        bitField0_ |= 0x00000002;
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 match_id = 2;</code>
       */
      public Builder clearMatchId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        matchId_ = 0L;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata metadata_ = skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataOrBuilder> metadataBuilder_;
      /**
       * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
       */
      public boolean hasMetadata() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
       */
      public Builder setMetadata(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
          onChanged();
        } else {
          metadataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
       */
      public Builder setMetadata(
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
          onChanged();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
       */
      public Builder mergeMetadata(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata value) {
        if (metadataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              metadata_ != skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.getDefaultInstance()) {
            metadata_ =
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
          } else {
            metadata_ = value;
          }
          onChanged();
        } else {
          metadataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
       */
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.getDefaultInstance();
          onChanged();
        } else {
          metadataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Builder getMetadataBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_;
        }
      }
      /**
       * <code>optional .CDOTAMatchMetadata metadata = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private com.google.protobuf.ByteString privateMetadata_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes private_metadata = 5;</code>
       */
      public boolean hasPrivateMetadata() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bytes private_metadata = 5;</code>
       */
      public com.google.protobuf.ByteString getPrivateMetadata() {
        return privateMetadata_;
      }
      /**
       * <code>optional bytes private_metadata = 5;</code>
       */
      public Builder setPrivateMetadata(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        privateMetadata_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes private_metadata = 5;</code>
       */
      public Builder clearPrivateMetadata() {
        bitField0_ = (bitField0_ & ~0x00000008);
        privateMetadata_ = getDefaultInstance().getPrivateMetadata();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAMatchMetadataFile)
    }

    static {
      defaultInstance = new CDOTAMatchMetadataFile(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAMatchMetadataFile)
  }

  public interface CDOTAMatchMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAMatchMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
     */
    java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team> 
        getTeamsList();
    /**
     * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
     */
    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team getTeams(int index);
    /**
     * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
     */
    int getTeamsCount();
    /**
     * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.TeamOrBuilder> 
        getTeamsOrBuilderList();
    /**
     * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
     */
    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.TeamOrBuilder getTeamsOrBuilder(
        int index);

    /**
     * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
     */
    java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails> 
        getItemRewardsList();
    /**
     * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
     */
    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails getItemRewards(int index);
    /**
     * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
     */
    int getItemRewardsCount();
    /**
     * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetailsOrBuilder> 
        getItemRewardsOrBuilderList();
    /**
     * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
     */
    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetailsOrBuilder getItemRewardsOrBuilder(
        int index);

    /**
     * <code>optional fixed64 lobby_id = 3;</code>
     */
    boolean hasLobbyId();
    /**
     * <code>optional fixed64 lobby_id = 3;</code>
     */
    long getLobbyId();

    /**
     * <code>optional fixed64 report_until_time = 4;</code>
     */
    boolean hasReportUntilTime();
    /**
     * <code>optional fixed64 report_until_time = 4;</code>
     */
    long getReportUntilTime();

    /**
     * <code>optional bytes event_game_custom_table = 5;</code>
     */
    boolean hasEventGameCustomTable();
    /**
     * <code>optional bytes event_game_custom_table = 5;</code>
     */
    com.google.protobuf.ByteString getEventGameCustomTable();
  }
  /**
   * Protobuf type {@code CDOTAMatchMetadata}
   */
  public static final class CDOTAMatchMetadata extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAMatchMetadata)
      CDOTAMatchMetadataOrBuilder {
    // Use CDOTAMatchMetadata.newBuilder() to construct.
    private CDOTAMatchMetadata(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAMatchMetadata(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAMatchMetadata defaultInstance;
    public static CDOTAMatchMetadata getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAMatchMetadata getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAMatchMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                teams_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team>();
                mutable_bitField0_ |= 0x00000001;
              }
              teams_.add(input.readMessage(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                itemRewards_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails>();
                mutable_bitField0_ |= 0x00000002;
              }
              itemRewards_.add(input.readMessage(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.PARSER, extensionRegistry));
              break;
            }
            case 25: {
              bitField0_ |= 0x00000001;
              lobbyId_ = input.readFixed64();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000002;
              reportUntilTime_ = input.readFixed64();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000004;
              eventGameCustomTable_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          teams_ = java.util.Collections.unmodifiableList(teams_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          itemRewards_ = java.util.Collections.unmodifiableList(itemRewards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAMatchMetadata> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAMatchMetadata>() {
      public CDOTAMatchMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAMatchMetadata(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAMatchMetadata> getParserForType() {
      return PARSER;
    }

    public interface TeamOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAMatchMetadata.Team)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 dota_team = 1;</code>
       */
      boolean hasDotaTeam();
      /**
       * <code>optional uint32 dota_team = 1;</code>
       */
      int getDotaTeam();

      /**
       * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
       */
      java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player> 
          getPlayersList();
      /**
       * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
       */
      skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player getPlayers(int index);
      /**
       * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
       */
      int getPlayersCount();
      /**
       * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
       */
      java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerOrBuilder> 
          getPlayersOrBuilderList();
      /**
       * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
       */
      skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerOrBuilder getPlayersOrBuilder(
          int index);

      /**
       * <code>repeated float graph_experience = 3;</code>
       */
      java.util.List<java.lang.Float> getGraphExperienceList();
      /**
       * <code>repeated float graph_experience = 3;</code>
       */
      int getGraphExperienceCount();
      /**
       * <code>repeated float graph_experience = 3;</code>
       */
      float getGraphExperience(int index);

      /**
       * <code>repeated float graph_gold_earned = 4;</code>
       */
      java.util.List<java.lang.Float> getGraphGoldEarnedList();
      /**
       * <code>repeated float graph_gold_earned = 4;</code>
       */
      int getGraphGoldEarnedCount();
      /**
       * <code>repeated float graph_gold_earned = 4;</code>
       */
      float getGraphGoldEarned(int index);

      /**
       * <code>repeated float graph_net_worth = 5;</code>
       */
      java.util.List<java.lang.Float> getGraphNetWorthList();
      /**
       * <code>repeated float graph_net_worth = 5;</code>
       */
      int getGraphNetWorthCount();
      /**
       * <code>repeated float graph_net_worth = 5;</code>
       */
      float getGraphNetWorth(int index);

      /**
       * <code>optional bool cm_first_pick = 6;</code>
       */
      boolean hasCmFirstPick();
      /**
       * <code>optional bool cm_first_pick = 6;</code>
       */
      boolean getCmFirstPick();

      /**
       * <code>optional uint32 cm_captain_player_id = 7;</code>
       */
      boolean hasCmCaptainPlayerId();
      /**
       * <code>optional uint32 cm_captain_player_id = 7;</code>
       */
      int getCmCaptainPlayerId();

      /**
       * <code>repeated uint32 cm_bans = 8;</code>
       */
      java.util.List<java.lang.Integer> getCmBansList();
      /**
       * <code>repeated uint32 cm_bans = 8;</code>
       */
      int getCmBansCount();
      /**
       * <code>repeated uint32 cm_bans = 8;</code>
       */
      int getCmBans(int index);

      /**
       * <code>repeated uint32 cm_picks = 9;</code>
       */
      java.util.List<java.lang.Integer> getCmPicksList();
      /**
       * <code>repeated uint32 cm_picks = 9;</code>
       */
      int getCmPicksCount();
      /**
       * <code>repeated uint32 cm_picks = 9;</code>
       */
      int getCmPicks(int index);

      /**
       * <code>optional uint32 cm_penalty = 10;</code>
       */
      boolean hasCmPenalty();
      /**
       * <code>optional uint32 cm_penalty = 10;</code>
       */
      int getCmPenalty();
    }
    /**
     * Protobuf type {@code CDOTAMatchMetadata.Team}
     */
    public static final class Team extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAMatchMetadata.Team)
        TeamOrBuilder {
      // Use Team.newBuilder() to construct.
      private Team(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Team(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Team defaultInstance;
      public static Team getDefaultInstance() {
        return defaultInstance;
      }

      public Team getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Team(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                dotaTeam_ = input.readUInt32();
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  players_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player>();
                  mutable_bitField0_ |= 0x00000002;
                }
                players_.add(input.readMessage(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.PARSER, extensionRegistry));
                break;
              }
              case 29: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  graphExperience_ = new java.util.ArrayList<java.lang.Float>();
                  mutable_bitField0_ |= 0x00000004;
                }
                graphExperience_.add(input.readFloat());
                break;
              }
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                  graphExperience_ = new java.util.ArrayList<java.lang.Float>();
                  mutable_bitField0_ |= 0x00000004;
                }
                while (input.getBytesUntilLimit() > 0) {
                  graphExperience_.add(input.readFloat());
                }
                input.popLimit(limit);
                break;
              }
              case 37: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  graphGoldEarned_ = new java.util.ArrayList<java.lang.Float>();
                  mutable_bitField0_ |= 0x00000008;
                }
                graphGoldEarned_.add(input.readFloat());
                break;
              }
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                  graphGoldEarned_ = new java.util.ArrayList<java.lang.Float>();
                  mutable_bitField0_ |= 0x00000008;
                }
                while (input.getBytesUntilLimit() > 0) {
                  graphGoldEarned_.add(input.readFloat());
                }
                input.popLimit(limit);
                break;
              }
              case 45: {
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  graphNetWorth_ = new java.util.ArrayList<java.lang.Float>();
                  mutable_bitField0_ |= 0x00000010;
                }
                graphNetWorth_.add(input.readFloat());
                break;
              }
              case 42: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                  graphNetWorth_ = new java.util.ArrayList<java.lang.Float>();
                  mutable_bitField0_ |= 0x00000010;
                }
                while (input.getBytesUntilLimit() > 0) {
                  graphNetWorth_.add(input.readFloat());
                }
                input.popLimit(limit);
                break;
              }
              case 48: {
                bitField0_ |= 0x00000002;
                cmFirstPick_ = input.readBool();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000004;
                cmCaptainPlayerId_ = input.readUInt32();
                break;
              }
              case 64: {
                if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                  cmBans_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000080;
                }
                cmBans_.add(input.readUInt32());
                break;
              }
              case 66: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                  cmBans_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000080;
                }
                while (input.getBytesUntilLimit() > 0) {
                  cmBans_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 72: {
                if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                  cmPicks_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000100;
                }
                cmPicks_.add(input.readUInt32());
                break;
              }
              case 74: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                  cmPicks_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000100;
                }
                while (input.getBytesUntilLimit() > 0) {
                  cmPicks_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 80: {
                bitField0_ |= 0x00000008;
                cmPenalty_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            players_ = java.util.Collections.unmodifiableList(players_);
          }
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            graphExperience_ = java.util.Collections.unmodifiableList(graphExperience_);
          }
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            graphGoldEarned_ = java.util.Collections.unmodifiableList(graphGoldEarned_);
          }
          if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
            graphNetWorth_ = java.util.Collections.unmodifiableList(graphNetWorth_);
          }
          if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
            cmBans_ = java.util.Collections.unmodifiableList(cmBans_);
          }
          if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
            cmPicks_ = java.util.Collections.unmodifiableList(cmPicks_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder.class);
      }

      public static com.google.protobuf.Parser<Team> PARSER =
          new com.google.protobuf.AbstractParser<Team>() {
        public Team parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Team(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Team> getParserForType() {
        return PARSER;
      }

      public interface PlayerKillOrBuilder extends
          // @@protoc_insertion_point(interface_extends:CDOTAMatchMetadata.Team.PlayerKill)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional uint32 victim_slot = 1;</code>
         */
        boolean hasVictimSlot();
        /**
         * <code>optional uint32 victim_slot = 1;</code>
         */
        int getVictimSlot();

        /**
         * <code>optional uint32 count = 2;</code>
         */
        boolean hasCount();
        /**
         * <code>optional uint32 count = 2;</code>
         */
        int getCount();
      }
      /**
       * Protobuf type {@code CDOTAMatchMetadata.Team.PlayerKill}
       */
      public static final class PlayerKill extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:CDOTAMatchMetadata.Team.PlayerKill)
          PlayerKillOrBuilder {
        // Use PlayerKill.newBuilder() to construct.
        private PlayerKill(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private PlayerKill(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final PlayerKill defaultInstance;
        public static PlayerKill getDefaultInstance() {
          return defaultInstance;
        }

        public PlayerKill getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private PlayerKill(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  victimSlot_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  count_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_PlayerKill_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_PlayerKill_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder.class);
        }

        public static com.google.protobuf.Parser<PlayerKill> PARSER =
            new com.google.protobuf.AbstractParser<PlayerKill>() {
          public PlayerKill parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new PlayerKill(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<PlayerKill> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int VICTIM_SLOT_FIELD_NUMBER = 1;
        private int victimSlot_;
        /**
         * <code>optional uint32 victim_slot = 1;</code>
         */
        public boolean hasVictimSlot() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 victim_slot = 1;</code>
         */
        public int getVictimSlot() {
          return victimSlot_;
        }

        public static final int COUNT_FIELD_NUMBER = 2;
        private int count_;
        /**
         * <code>optional uint32 count = 2;</code>
         */
        public boolean hasCount() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 count = 2;</code>
         */
        public int getCount() {
          return count_;
        }

        private void initFields() {
          victimSlot_ = 0;
          count_ = 0;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt32(1, victimSlot_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeUInt32(2, count_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, victimSlot_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(2, count_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CDOTAMatchMetadata.Team.PlayerKill}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:CDOTAMatchMetadata.Team.PlayerKill)
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKillOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_PlayerKill_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_PlayerKill_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder.class);
          }

          // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            victimSlot_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            count_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_PlayerKill_descriptor;
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill getDefaultInstanceForType() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.getDefaultInstance();
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill build() {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill buildPartial() {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.victimSlot_ = victimSlot_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.count_ = count_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill) {
              return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill other) {
            if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.getDefaultInstance()) return this;
            if (other.hasVictimSlot()) {
              setVictimSlot(other.getVictimSlot());
            }
            if (other.hasCount()) {
              setCount(other.getCount());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int victimSlot_ ;
          /**
           * <code>optional uint32 victim_slot = 1;</code>
           */
          public boolean hasVictimSlot() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional uint32 victim_slot = 1;</code>
           */
          public int getVictimSlot() {
            return victimSlot_;
          }
          /**
           * <code>optional uint32 victim_slot = 1;</code>
           */
          public Builder setVictimSlot(int value) {
            bitField0_ |= 0x00000001;
            victimSlot_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 victim_slot = 1;</code>
           */
          public Builder clearVictimSlot() {
            bitField0_ = (bitField0_ & ~0x00000001);
            victimSlot_ = 0;
            onChanged();
            return this;
          }

          private int count_ ;
          /**
           * <code>optional uint32 count = 2;</code>
           */
          public boolean hasCount() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional uint32 count = 2;</code>
           */
          public int getCount() {
            return count_;
          }
          /**
           * <code>optional uint32 count = 2;</code>
           */
          public Builder setCount(int value) {
            bitField0_ |= 0x00000002;
            count_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 count = 2;</code>
           */
          public Builder clearCount() {
            bitField0_ = (bitField0_ & ~0x00000002);
            count_ = 0;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:CDOTAMatchMetadata.Team.PlayerKill)
        }

        static {
          defaultInstance = new PlayerKill(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:CDOTAMatchMetadata.Team.PlayerKill)
      }

      public interface ItemPurchaseOrBuilder extends
          // @@protoc_insertion_point(interface_extends:CDOTAMatchMetadata.Team.ItemPurchase)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional uint32 item_id = 1;</code>
         */
        boolean hasItemId();
        /**
         * <code>optional uint32 item_id = 1;</code>
         */
        int getItemId();

        /**
         * <code>optional int32 purchase_time = 2;</code>
         */
        boolean hasPurchaseTime();
        /**
         * <code>optional int32 purchase_time = 2;</code>
         */
        int getPurchaseTime();
      }
      /**
       * Protobuf type {@code CDOTAMatchMetadata.Team.ItemPurchase}
       */
      public static final class ItemPurchase extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:CDOTAMatchMetadata.Team.ItemPurchase)
          ItemPurchaseOrBuilder {
        // Use ItemPurchase.newBuilder() to construct.
        private ItemPurchase(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private ItemPurchase(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final ItemPurchase defaultInstance;
        public static ItemPurchase getDefaultInstance() {
          return defaultInstance;
        }

        public ItemPurchase getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private ItemPurchase(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  itemId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  purchaseTime_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_ItemPurchase_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_ItemPurchase_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase.Builder.class);
        }

        public static com.google.protobuf.Parser<ItemPurchase> PARSER =
            new com.google.protobuf.AbstractParser<ItemPurchase>() {
          public ItemPurchase parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new ItemPurchase(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<ItemPurchase> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int ITEM_ID_FIELD_NUMBER = 1;
        private int itemId_;
        /**
         * <code>optional uint32 item_id = 1;</code>
         */
        public boolean hasItemId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 item_id = 1;</code>
         */
        public int getItemId() {
          return itemId_;
        }

        public static final int PURCHASE_TIME_FIELD_NUMBER = 2;
        private int purchaseTime_;
        /**
         * <code>optional int32 purchase_time = 2;</code>
         */
        public boolean hasPurchaseTime() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 purchase_time = 2;</code>
         */
        public int getPurchaseTime() {
          return purchaseTime_;
        }

        private void initFields() {
          itemId_ = 0;
          purchaseTime_ = 0;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt32(1, itemId_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeInt32(2, purchaseTime_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, itemId_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(2, purchaseTime_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CDOTAMatchMetadata.Team.ItemPurchase}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:CDOTAMatchMetadata.Team.ItemPurchase)
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchaseOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_ItemPurchase_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_ItemPurchase_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase.Builder.class);
          }

          // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            itemId_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            purchaseTime_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_ItemPurchase_descriptor;
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase getDefaultInstanceForType() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase.getDefaultInstance();
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase build() {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase buildPartial() {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.itemId_ = itemId_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.purchaseTime_ = purchaseTime_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase) {
              return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase other) {
            if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase.getDefaultInstance()) return this;
            if (other.hasItemId()) {
              setItemId(other.getItemId());
            }
            if (other.hasPurchaseTime()) {
              setPurchaseTime(other.getPurchaseTime());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int itemId_ ;
          /**
           * <code>optional uint32 item_id = 1;</code>
           */
          public boolean hasItemId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional uint32 item_id = 1;</code>
           */
          public int getItemId() {
            return itemId_;
          }
          /**
           * <code>optional uint32 item_id = 1;</code>
           */
          public Builder setItemId(int value) {
            bitField0_ |= 0x00000001;
            itemId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 item_id = 1;</code>
           */
          public Builder clearItemId() {
            bitField0_ = (bitField0_ & ~0x00000001);
            itemId_ = 0;
            onChanged();
            return this;
          }

          private int purchaseTime_ ;
          /**
           * <code>optional int32 purchase_time = 2;</code>
           */
          public boolean hasPurchaseTime() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional int32 purchase_time = 2;</code>
           */
          public int getPurchaseTime() {
            return purchaseTime_;
          }
          /**
           * <code>optional int32 purchase_time = 2;</code>
           */
          public Builder setPurchaseTime(int value) {
            bitField0_ |= 0x00000002;
            purchaseTime_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 purchase_time = 2;</code>
           */
          public Builder clearPurchaseTime() {
            bitField0_ = (bitField0_ & ~0x00000002);
            purchaseTime_ = 0;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:CDOTAMatchMetadata.Team.ItemPurchase)
        }

        static {
          defaultInstance = new ItemPurchase(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:CDOTAMatchMetadata.Team.ItemPurchase)
      }

      public interface InventorySnapshotOrBuilder extends
          // @@protoc_insertion_point(interface_extends:CDOTAMatchMetadata.Team.InventorySnapshot)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated uint32 item_id = 1;</code>
         */
        java.util.List<java.lang.Integer> getItemIdList();
        /**
         * <code>repeated uint32 item_id = 1;</code>
         */
        int getItemIdCount();
        /**
         * <code>repeated uint32 item_id = 1;</code>
         */
        int getItemId(int index);

        /**
         * <code>optional int32 game_time = 2;</code>
         */
        boolean hasGameTime();
        /**
         * <code>optional int32 game_time = 2;</code>
         */
        int getGameTime();

        /**
         * <code>optional uint32 kills = 3;</code>
         */
        boolean hasKills();
        /**
         * <code>optional uint32 kills = 3;</code>
         */
        int getKills();

        /**
         * <code>optional uint32 deaths = 4;</code>
         */
        boolean hasDeaths();
        /**
         * <code>optional uint32 deaths = 4;</code>
         */
        int getDeaths();

        /**
         * <code>optional uint32 assists = 5;</code>
         */
        boolean hasAssists();
        /**
         * <code>optional uint32 assists = 5;</code>
         */
        int getAssists();

        /**
         * <code>optional uint32 level = 6;</code>
         */
        boolean hasLevel();
        /**
         * <code>optional uint32 level = 6;</code>
         */
        int getLevel();
      }
      /**
       * Protobuf type {@code CDOTAMatchMetadata.Team.InventorySnapshot}
       */
      public static final class InventorySnapshot extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:CDOTAMatchMetadata.Team.InventorySnapshot)
          InventorySnapshotOrBuilder {
        // Use InventorySnapshot.newBuilder() to construct.
        private InventorySnapshot(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private InventorySnapshot(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final InventorySnapshot defaultInstance;
        public static InventorySnapshot getDefaultInstance() {
          return defaultInstance;
        }

        public InventorySnapshot getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private InventorySnapshot(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    itemId_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00000001;
                  }
                  itemId_.add(input.readUInt32());
                  break;
                }
                case 10: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                    itemId_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00000001;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    itemId_.add(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000001;
                  gameTime_ = input.readInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000002;
                  kills_ = input.readUInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000004;
                  deaths_ = input.readUInt32();
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000008;
                  assists_ = input.readUInt32();
                  break;
                }
                case 48: {
                  bitField0_ |= 0x00000010;
                  level_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              itemId_ = java.util.Collections.unmodifiableList(itemId_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_InventorySnapshot_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_InventorySnapshot_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot.Builder.class);
        }

        public static com.google.protobuf.Parser<InventorySnapshot> PARSER =
            new com.google.protobuf.AbstractParser<InventorySnapshot>() {
          public InventorySnapshot parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new InventorySnapshot(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<InventorySnapshot> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int ITEM_ID_FIELD_NUMBER = 1;
        private java.util.List<java.lang.Integer> itemId_;
        /**
         * <code>repeated uint32 item_id = 1;</code>
         */
        public java.util.List<java.lang.Integer>
            getItemIdList() {
          return itemId_;
        }
        /**
         * <code>repeated uint32 item_id = 1;</code>
         */
        public int getItemIdCount() {
          return itemId_.size();
        }
        /**
         * <code>repeated uint32 item_id = 1;</code>
         */
        public int getItemId(int index) {
          return itemId_.get(index);
        }

        public static final int GAME_TIME_FIELD_NUMBER = 2;
        private int gameTime_;
        /**
         * <code>optional int32 game_time = 2;</code>
         */
        public boolean hasGameTime() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 game_time = 2;</code>
         */
        public int getGameTime() {
          return gameTime_;
        }

        public static final int KILLS_FIELD_NUMBER = 3;
        private int kills_;
        /**
         * <code>optional uint32 kills = 3;</code>
         */
        public boolean hasKills() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 kills = 3;</code>
         */
        public int getKills() {
          return kills_;
        }

        public static final int DEATHS_FIELD_NUMBER = 4;
        private int deaths_;
        /**
         * <code>optional uint32 deaths = 4;</code>
         */
        public boolean hasDeaths() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 deaths = 4;</code>
         */
        public int getDeaths() {
          return deaths_;
        }

        public static final int ASSISTS_FIELD_NUMBER = 5;
        private int assists_;
        /**
         * <code>optional uint32 assists = 5;</code>
         */
        public boolean hasAssists() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 assists = 5;</code>
         */
        public int getAssists() {
          return assists_;
        }

        public static final int LEVEL_FIELD_NUMBER = 6;
        private int level_;
        /**
         * <code>optional uint32 level = 6;</code>
         */
        public boolean hasLevel() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 level = 6;</code>
         */
        public int getLevel() {
          return level_;
        }

        private void initFields() {
          itemId_ = java.util.Collections.emptyList();
          gameTime_ = 0;
          kills_ = 0;
          deaths_ = 0;
          assists_ = 0;
          level_ = 0;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          for (int i = 0; i < itemId_.size(); i++) {
            output.writeUInt32(1, itemId_.get(i));
          }
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeInt32(2, gameTime_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeUInt32(3, kills_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeUInt32(4, deaths_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            output.writeUInt32(5, assists_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            output.writeUInt32(6, level_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          {
            int dataSize = 0;
            for (int i = 0; i < itemId_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeUInt32SizeNoTag(itemId_.get(i));
            }
            size += dataSize;
            size += 1 * getItemIdList().size();
          }
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(2, gameTime_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(3, kills_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(4, deaths_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(5, assists_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(6, level_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CDOTAMatchMetadata.Team.InventorySnapshot}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:CDOTAMatchMetadata.Team.InventorySnapshot)
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshotOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_InventorySnapshot_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_InventorySnapshot_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot.Builder.class);
          }

          // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            itemId_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            gameTime_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            kills_ = 0;
            bitField0_ = (bitField0_ & ~0x00000004);
            deaths_ = 0;
            bitField0_ = (bitField0_ & ~0x00000008);
            assists_ = 0;
            bitField0_ = (bitField0_ & ~0x00000010);
            level_ = 0;
            bitField0_ = (bitField0_ & ~0x00000020);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_InventorySnapshot_descriptor;
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot getDefaultInstanceForType() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot.getDefaultInstance();
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot build() {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot buildPartial() {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              itemId_ = java.util.Collections.unmodifiableList(itemId_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.itemId_ = itemId_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000001;
            }
            result.gameTime_ = gameTime_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000002;
            }
            result.kills_ = kills_;
            if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
              to_bitField0_ |= 0x00000004;
            }
            result.deaths_ = deaths_;
            if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
              to_bitField0_ |= 0x00000008;
            }
            result.assists_ = assists_;
            if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
              to_bitField0_ |= 0x00000010;
            }
            result.level_ = level_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot) {
              return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot other) {
            if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot.getDefaultInstance()) return this;
            if (!other.itemId_.isEmpty()) {
              if (itemId_.isEmpty()) {
                itemId_ = other.itemId_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureItemIdIsMutable();
                itemId_.addAll(other.itemId_);
              }
              onChanged();
            }
            if (other.hasGameTime()) {
              setGameTime(other.getGameTime());
            }
            if (other.hasKills()) {
              setKills(other.getKills());
            }
            if (other.hasDeaths()) {
              setDeaths(other.getDeaths());
            }
            if (other.hasAssists()) {
              setAssists(other.getAssists());
            }
            if (other.hasLevel()) {
              setLevel(other.getLevel());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.util.List<java.lang.Integer> itemId_ = java.util.Collections.emptyList();
          private void ensureItemIdIsMutable() {
            if (!((bitField0_ & 0x00000001) == 0x00000001)) {
              itemId_ = new java.util.ArrayList<java.lang.Integer>(itemId_);
              bitField0_ |= 0x00000001;
             }
          }
          /**
           * <code>repeated uint32 item_id = 1;</code>
           */
          public java.util.List<java.lang.Integer>
              getItemIdList() {
            return java.util.Collections.unmodifiableList(itemId_);
          }
          /**
           * <code>repeated uint32 item_id = 1;</code>
           */
          public int getItemIdCount() {
            return itemId_.size();
          }
          /**
           * <code>repeated uint32 item_id = 1;</code>
           */
          public int getItemId(int index) {
            return itemId_.get(index);
          }
          /**
           * <code>repeated uint32 item_id = 1;</code>
           */
          public Builder setItemId(
              int index, int value) {
            ensureItemIdIsMutable();
            itemId_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated uint32 item_id = 1;</code>
           */
          public Builder addItemId(int value) {
            ensureItemIdIsMutable();
            itemId_.add(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated uint32 item_id = 1;</code>
           */
          public Builder addAllItemId(
              java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureItemIdIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, itemId_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated uint32 item_id = 1;</code>
           */
          public Builder clearItemId() {
            itemId_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
            return this;
          }

          private int gameTime_ ;
          /**
           * <code>optional int32 game_time = 2;</code>
           */
          public boolean hasGameTime() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional int32 game_time = 2;</code>
           */
          public int getGameTime() {
            return gameTime_;
          }
          /**
           * <code>optional int32 game_time = 2;</code>
           */
          public Builder setGameTime(int value) {
            bitField0_ |= 0x00000002;
            gameTime_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 game_time = 2;</code>
           */
          public Builder clearGameTime() {
            bitField0_ = (bitField0_ & ~0x00000002);
            gameTime_ = 0;
            onChanged();
            return this;
          }

          private int kills_ ;
          /**
           * <code>optional uint32 kills = 3;</code>
           */
          public boolean hasKills() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional uint32 kills = 3;</code>
           */
          public int getKills() {
            return kills_;
          }
          /**
           * <code>optional uint32 kills = 3;</code>
           */
          public Builder setKills(int value) {
            bitField0_ |= 0x00000004;
            kills_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 kills = 3;</code>
           */
          public Builder clearKills() {
            bitField0_ = (bitField0_ & ~0x00000004);
            kills_ = 0;
            onChanged();
            return this;
          }

          private int deaths_ ;
          /**
           * <code>optional uint32 deaths = 4;</code>
           */
          public boolean hasDeaths() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          /**
           * <code>optional uint32 deaths = 4;</code>
           */
          public int getDeaths() {
            return deaths_;
          }
          /**
           * <code>optional uint32 deaths = 4;</code>
           */
          public Builder setDeaths(int value) {
            bitField0_ |= 0x00000008;
            deaths_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 deaths = 4;</code>
           */
          public Builder clearDeaths() {
            bitField0_ = (bitField0_ & ~0x00000008);
            deaths_ = 0;
            onChanged();
            return this;
          }

          private int assists_ ;
          /**
           * <code>optional uint32 assists = 5;</code>
           */
          public boolean hasAssists() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
          }
          /**
           * <code>optional uint32 assists = 5;</code>
           */
          public int getAssists() {
            return assists_;
          }
          /**
           * <code>optional uint32 assists = 5;</code>
           */
          public Builder setAssists(int value) {
            bitField0_ |= 0x00000010;
            assists_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 assists = 5;</code>
           */
          public Builder clearAssists() {
            bitField0_ = (bitField0_ & ~0x00000010);
            assists_ = 0;
            onChanged();
            return this;
          }

          private int level_ ;
          /**
           * <code>optional uint32 level = 6;</code>
           */
          public boolean hasLevel() {
            return ((bitField0_ & 0x00000020) == 0x00000020);
          }
          /**
           * <code>optional uint32 level = 6;</code>
           */
          public int getLevel() {
            return level_;
          }
          /**
           * <code>optional uint32 level = 6;</code>
           */
          public Builder setLevel(int value) {
            bitField0_ |= 0x00000020;
            level_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 level = 6;</code>
           */
          public Builder clearLevel() {
            bitField0_ = (bitField0_ & ~0x00000020);
            level_ = 0;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:CDOTAMatchMetadata.Team.InventorySnapshot)
        }

        static {
          defaultInstance = new InventorySnapshot(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:CDOTAMatchMetadata.Team.InventorySnapshot)
      }

      public interface AutoStyleCriteriaOrBuilder extends
          // @@protoc_insertion_point(interface_extends:CDOTAMatchMetadata.Team.AutoStyleCriteria)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional uint32 name_token = 1;</code>
         */
        boolean hasNameToken();
        /**
         * <code>optional uint32 name_token = 1;</code>
         */
        int getNameToken();

        /**
         * <code>optional float value = 2;</code>
         */
        boolean hasValue();
        /**
         * <code>optional float value = 2;</code>
         */
        float getValue();
      }
      /**
       * Protobuf type {@code CDOTAMatchMetadata.Team.AutoStyleCriteria}
       */
      public static final class AutoStyleCriteria extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:CDOTAMatchMetadata.Team.AutoStyleCriteria)
          AutoStyleCriteriaOrBuilder {
        // Use AutoStyleCriteria.newBuilder() to construct.
        private AutoStyleCriteria(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private AutoStyleCriteria(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final AutoStyleCriteria defaultInstance;
        public static AutoStyleCriteria getDefaultInstance() {
          return defaultInstance;
        }

        public AutoStyleCriteria getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private AutoStyleCriteria(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  nameToken_ = input.readUInt32();
                  break;
                }
                case 21: {
                  bitField0_ |= 0x00000002;
                  value_ = input.readFloat();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_AutoStyleCriteria_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_AutoStyleCriteria_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria.Builder.class);
        }

        public static com.google.protobuf.Parser<AutoStyleCriteria> PARSER =
            new com.google.protobuf.AbstractParser<AutoStyleCriteria>() {
          public AutoStyleCriteria parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new AutoStyleCriteria(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<AutoStyleCriteria> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int NAME_TOKEN_FIELD_NUMBER = 1;
        private int nameToken_;
        /**
         * <code>optional uint32 name_token = 1;</code>
         */
        public boolean hasNameToken() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 name_token = 1;</code>
         */
        public int getNameToken() {
          return nameToken_;
        }

        public static final int VALUE_FIELD_NUMBER = 2;
        private float value_;
        /**
         * <code>optional float value = 2;</code>
         */
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional float value = 2;</code>
         */
        public float getValue() {
          return value_;
        }

        private void initFields() {
          nameToken_ = 0;
          value_ = 0F;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt32(1, nameToken_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeFloat(2, value_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, nameToken_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(2, value_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CDOTAMatchMetadata.Team.AutoStyleCriteria}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:CDOTAMatchMetadata.Team.AutoStyleCriteria)
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteriaOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_AutoStyleCriteria_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_AutoStyleCriteria_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria.Builder.class);
          }

          // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            nameToken_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            value_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_AutoStyleCriteria_descriptor;
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria getDefaultInstanceForType() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria.getDefaultInstance();
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria build() {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria buildPartial() {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.nameToken_ = nameToken_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.value_ = value_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria) {
              return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria other) {
            if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria.getDefaultInstance()) return this;
            if (other.hasNameToken()) {
              setNameToken(other.getNameToken());
            }
            if (other.hasValue()) {
              setValue(other.getValue());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int nameToken_ ;
          /**
           * <code>optional uint32 name_token = 1;</code>
           */
          public boolean hasNameToken() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional uint32 name_token = 1;</code>
           */
          public int getNameToken() {
            return nameToken_;
          }
          /**
           * <code>optional uint32 name_token = 1;</code>
           */
          public Builder setNameToken(int value) {
            bitField0_ |= 0x00000001;
            nameToken_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 name_token = 1;</code>
           */
          public Builder clearNameToken() {
            bitField0_ = (bitField0_ & ~0x00000001);
            nameToken_ = 0;
            onChanged();
            return this;
          }

          private float value_ ;
          /**
           * <code>optional float value = 2;</code>
           */
          public boolean hasValue() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional float value = 2;</code>
           */
          public float getValue() {
            return value_;
          }
          /**
           * <code>optional float value = 2;</code>
           */
          public Builder setValue(float value) {
            bitField0_ |= 0x00000002;
            value_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float value = 2;</code>
           */
          public Builder clearValue() {
            bitField0_ = (bitField0_ & ~0x00000002);
            value_ = 0F;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:CDOTAMatchMetadata.Team.AutoStyleCriteria)
        }

        static {
          defaultInstance = new AutoStyleCriteria(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:CDOTAMatchMetadata.Team.AutoStyleCriteria)
      }

      public interface PlayerOrBuilder extends
          // @@protoc_insertion_point(interface_extends:CDOTAMatchMetadata.Team.Player)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        boolean hasAccountId();
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        int getAccountId();

        /**
         * <code>repeated uint32 ability_upgrades = 2;</code>
         */
        java.util.List<java.lang.Integer> getAbilityUpgradesList();
        /**
         * <code>repeated uint32 ability_upgrades = 2;</code>
         */
        int getAbilityUpgradesCount();
        /**
         * <code>repeated uint32 ability_upgrades = 2;</code>
         */
        int getAbilityUpgrades(int index);

        /**
         * <code>optional uint32 player_slot = 3;</code>
         */
        boolean hasPlayerSlot();
        /**
         * <code>optional uint32 player_slot = 3;</code>
         */
        int getPlayerSlot();

        /**
         * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
         */
        java.util.List<skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem> 
            getEquippedEconItemsList();
        /**
         * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
         */
        skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem getEquippedEconItems(int index);
        /**
         * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
         */
        int getEquippedEconItemsCount();
        /**
         * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
         */
        java.util.List<? extends skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItemOrBuilder> 
            getEquippedEconItemsOrBuilderList();
        /**
         * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
         */
        skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItemOrBuilder getEquippedEconItemsOrBuilder(
            int index);

        /**
         * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
         */
        java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill> 
            getKillsList();
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
         */
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill getKills(int index);
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
         */
        int getKillsCount();
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
         */
        java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKillOrBuilder> 
            getKillsOrBuilderList();
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
         */
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKillOrBuilder getKillsOrBuilder(
            int index);

        /**
         * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
         */
        java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase> 
            getItemsList();
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
         */
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase getItems(int index);
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
         */
        int getItemsCount();
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
         */
        java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchaseOrBuilder> 
            getItemsOrBuilderList();
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
         */
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchaseOrBuilder getItemsOrBuilder(
            int index);

        /**
         * <code>optional uint32 avg_kills_x16 = 7;</code>
         */
        boolean hasAvgKillsX16();
        /**
         * <code>optional uint32 avg_kills_x16 = 7;</code>
         */
        int getAvgKillsX16();

        /**
         * <code>optional uint32 avg_deaths_x16 = 8;</code>
         */
        boolean hasAvgDeathsX16();
        /**
         * <code>optional uint32 avg_deaths_x16 = 8;</code>
         */
        int getAvgDeathsX16();

        /**
         * <code>optional uint32 avg_assists_x16 = 9;</code>
         */
        boolean hasAvgAssistsX16();
        /**
         * <code>optional uint32 avg_assists_x16 = 9;</code>
         */
        int getAvgAssistsX16();

        /**
         * <code>optional uint32 avg_gpm_x16 = 10;</code>
         */
        boolean hasAvgGpmX16();
        /**
         * <code>optional uint32 avg_gpm_x16 = 10;</code>
         */
        int getAvgGpmX16();

        /**
         * <code>optional uint32 avg_xpm_x16 = 11;</code>
         */
        boolean hasAvgXpmX16();
        /**
         * <code>optional uint32 avg_xpm_x16 = 11;</code>
         */
        int getAvgXpmX16();

        /**
         * <code>optional uint32 best_kills_x16 = 12;</code>
         */
        boolean hasBestKillsX16();
        /**
         * <code>optional uint32 best_kills_x16 = 12;</code>
         */
        int getBestKillsX16();

        /**
         * <code>optional uint32 best_assists_x16 = 13;</code>
         */
        boolean hasBestAssistsX16();
        /**
         * <code>optional uint32 best_assists_x16 = 13;</code>
         */
        int getBestAssistsX16();

        /**
         * <code>optional uint32 best_gpm_x16 = 14;</code>
         */
        boolean hasBestGpmX16();
        /**
         * <code>optional uint32 best_gpm_x16 = 14;</code>
         */
        int getBestGpmX16();

        /**
         * <code>optional uint32 best_xpm_x16 = 15;</code>
         */
        boolean hasBestXpmX16();
        /**
         * <code>optional uint32 best_xpm_x16 = 15;</code>
         */
        int getBestXpmX16();

        /**
         * <code>optional uint32 win_streak = 16;</code>
         */
        boolean hasWinStreak();
        /**
         * <code>optional uint32 win_streak = 16;</code>
         */
        int getWinStreak();

        /**
         * <code>optional uint32 best_win_streak = 17;</code>
         */
        boolean hasBestWinStreak();
        /**
         * <code>optional uint32 best_win_streak = 17;</code>
         */
        int getBestWinStreak();

        /**
         * <code>optional float fight_score = 18;</code>
         */
        boolean hasFightScore();
        /**
         * <code>optional float fight_score = 18;</code>
         */
        float getFightScore();

        /**
         * <code>optional float farm_score = 19;</code>
         */
        boolean hasFarmScore();
        /**
         * <code>optional float farm_score = 19;</code>
         */
        float getFarmScore();

        /**
         * <code>optional float support_score = 20;</code>
         */
        boolean hasSupportScore();
        /**
         * <code>optional float support_score = 20;</code>
         */
        float getSupportScore();

        /**
         * <code>optional float push_score = 21;</code>
         */
        boolean hasPushScore();
        /**
         * <code>optional float push_score = 21;</code>
         */
        float getPushScore();

        /**
         * <code>repeated uint32 level_up_times = 22;</code>
         */
        java.util.List<java.lang.Integer> getLevelUpTimesList();
        /**
         * <code>repeated uint32 level_up_times = 22;</code>
         */
        int getLevelUpTimesCount();
        /**
         * <code>repeated uint32 level_up_times = 22;</code>
         */
        int getLevelUpTimes(int index);

        /**
         * <code>repeated float graph_net_worth = 23;</code>
         */
        java.util.List<java.lang.Float> getGraphNetWorthList();
        /**
         * <code>repeated float graph_net_worth = 23;</code>
         */
        int getGraphNetWorthCount();
        /**
         * <code>repeated float graph_net_worth = 23;</code>
         */
        float getGraphNetWorth(int index);

        /**
         * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
         */
        java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot> 
            getInventorySnapshotList();
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
         */
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot getInventorySnapshot(int index);
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
         */
        int getInventorySnapshotCount();
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
         */
        java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshotOrBuilder> 
            getInventorySnapshotOrBuilderList();
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
         */
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshotOrBuilder getInventorySnapshotOrBuilder(
            int index);

        /**
         * <code>optional bool avg_stats_calibrated = 25;</code>
         */
        boolean hasAvgStatsCalibrated();
        /**
         * <code>optional bool avg_stats_calibrated = 25;</code>
         */
        boolean getAvgStatsCalibrated();

        /**
         * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
         */
        java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria> 
            getAutoStyleCriteriaList();
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
         */
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria getAutoStyleCriteria(int index);
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
         */
        int getAutoStyleCriteriaCount();
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
         */
        java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteriaOrBuilder> 
            getAutoStyleCriteriaOrBuilderList();
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
         */
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteriaOrBuilder getAutoStyleCriteriaOrBuilder(
            int index);

        /**
         * <code>optional uint32 event_id = 27;</code>
         */
        boolean hasEventId();
        /**
         * <code>optional uint32 event_id = 27;</code>
         */
        int getEventId();

        /**
         * <code>optional uint32 event_points = 28;</code>
         */
        boolean hasEventPoints();
        /**
         * <code>optional uint32 event_points = 28;</code>
         */
        int getEventPoints();

        /**
         * <code>optional uint32 camps_stacked = 32;</code>
         */
        boolean hasCampsStacked();
        /**
         * <code>optional uint32 camps_stacked = 32;</code>
         */
        int getCampsStacked();
      }
      /**
       * Protobuf type {@code CDOTAMatchMetadata.Team.Player}
       */
      public static final class Player extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:CDOTAMatchMetadata.Team.Player)
          PlayerOrBuilder {
        // Use Player.newBuilder() to construct.
        private Player(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Player(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Player defaultInstance;
        public static Player getDefaultInstance() {
          return defaultInstance;
        }

        public Player getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Player(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  accountId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    abilityUpgrades_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  abilityUpgrades_.add(input.readUInt32());
                  break;
                }
                case 18: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                    abilityUpgrades_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    abilityUpgrades_.add(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000002;
                  playerSlot_ = input.readUInt32();
                  break;
                }
                case 34: {
                  if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                    equippedEconItems_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem>();
                    mutable_bitField0_ |= 0x00000008;
                  }
                  equippedEconItems_.add(input.readMessage(skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.PARSER, extensionRegistry));
                  break;
                }
                case 42: {
                  if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                    kills_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill>();
                    mutable_bitField0_ |= 0x00000010;
                  }
                  kills_.add(input.readMessage(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.PARSER, extensionRegistry));
                  break;
                }
                case 50: {
                  if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    items_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase>();
                    mutable_bitField0_ |= 0x00000020;
                  }
                  items_.add(input.readMessage(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase.PARSER, extensionRegistry));
                  break;
                }
                case 56: {
                  bitField0_ |= 0x00000004;
                  avgKillsX16_ = input.readUInt32();
                  break;
                }
                case 64: {
                  bitField0_ |= 0x00000008;
                  avgDeathsX16_ = input.readUInt32();
                  break;
                }
                case 72: {
                  bitField0_ |= 0x00000010;
                  avgAssistsX16_ = input.readUInt32();
                  break;
                }
                case 80: {
                  bitField0_ |= 0x00000020;
                  avgGpmX16_ = input.readUInt32();
                  break;
                }
                case 88: {
                  bitField0_ |= 0x00000040;
                  avgXpmX16_ = input.readUInt32();
                  break;
                }
                case 96: {
                  bitField0_ |= 0x00000080;
                  bestKillsX16_ = input.readUInt32();
                  break;
                }
                case 104: {
                  bitField0_ |= 0x00000100;
                  bestAssistsX16_ = input.readUInt32();
                  break;
                }
                case 112: {
                  bitField0_ |= 0x00000200;
                  bestGpmX16_ = input.readUInt32();
                  break;
                }
                case 120: {
                  bitField0_ |= 0x00000400;
                  bestXpmX16_ = input.readUInt32();
                  break;
                }
                case 128: {
                  bitField0_ |= 0x00000800;
                  winStreak_ = input.readUInt32();
                  break;
                }
                case 136: {
                  bitField0_ |= 0x00001000;
                  bestWinStreak_ = input.readUInt32();
                  break;
                }
                case 149: {
                  bitField0_ |= 0x00002000;
                  fightScore_ = input.readFloat();
                  break;
                }
                case 157: {
                  bitField0_ |= 0x00004000;
                  farmScore_ = input.readFloat();
                  break;
                }
                case 165: {
                  bitField0_ |= 0x00008000;
                  supportScore_ = input.readFloat();
                  break;
                }
                case 173: {
                  bitField0_ |= 0x00010000;
                  pushScore_ = input.readFloat();
                  break;
                }
                case 176: {
                  if (!((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
                    levelUpTimes_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00200000;
                  }
                  levelUpTimes_.add(input.readUInt32());
                  break;
                }
                case 178: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00200000) == 0x00200000) && input.getBytesUntilLimit() > 0) {
                    levelUpTimes_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00200000;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    levelUpTimes_.add(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 189: {
                  if (!((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
                    graphNetWorth_ = new java.util.ArrayList<java.lang.Float>();
                    mutable_bitField0_ |= 0x00400000;
                  }
                  graphNetWorth_.add(input.readFloat());
                  break;
                }
                case 186: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00400000) == 0x00400000) && input.getBytesUntilLimit() > 0) {
                    graphNetWorth_ = new java.util.ArrayList<java.lang.Float>();
                    mutable_bitField0_ |= 0x00400000;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    graphNetWorth_.add(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 194: {
                  if (!((mutable_bitField0_ & 0x00800000) == 0x00800000)) {
                    inventorySnapshot_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot>();
                    mutable_bitField0_ |= 0x00800000;
                  }
                  inventorySnapshot_.add(input.readMessage(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot.PARSER, extensionRegistry));
                  break;
                }
                case 200: {
                  bitField0_ |= 0x00020000;
                  avgStatsCalibrated_ = input.readBool();
                  break;
                }
                case 210: {
                  if (!((mutable_bitField0_ & 0x02000000) == 0x02000000)) {
                    autoStyleCriteria_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria>();
                    mutable_bitField0_ |= 0x02000000;
                  }
                  autoStyleCriteria_.add(input.readMessage(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria.PARSER, extensionRegistry));
                  break;
                }
                case 216: {
                  bitField0_ |= 0x00040000;
                  eventId_ = input.readUInt32();
                  break;
                }
                case 224: {
                  bitField0_ |= 0x00080000;
                  eventPoints_ = input.readUInt32();
                  break;
                }
                case 256: {
                  bitField0_ |= 0x00100000;
                  campsStacked_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              abilityUpgrades_ = java.util.Collections.unmodifiableList(abilityUpgrades_);
            }
            if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              equippedEconItems_ = java.util.Collections.unmodifiableList(equippedEconItems_);
            }
            if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              kills_ = java.util.Collections.unmodifiableList(kills_);
            }
            if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              items_ = java.util.Collections.unmodifiableList(items_);
            }
            if (((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
              levelUpTimes_ = java.util.Collections.unmodifiableList(levelUpTimes_);
            }
            if (((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
              graphNetWorth_ = java.util.Collections.unmodifiableList(graphNetWorth_);
            }
            if (((mutable_bitField0_ & 0x00800000) == 0x00800000)) {
              inventorySnapshot_ = java.util.Collections.unmodifiableList(inventorySnapshot_);
            }
            if (((mutable_bitField0_ & 0x02000000) == 0x02000000)) {
              autoStyleCriteria_ = java.util.Collections.unmodifiableList(autoStyleCriteria_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_Player_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_Player_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder.class);
        }

        public static com.google.protobuf.Parser<Player> PARSER =
            new com.google.protobuf.AbstractParser<Player>() {
          public Player parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Player(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Player> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
        private int accountId_;
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public boolean hasAccountId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public int getAccountId() {
          return accountId_;
        }

        public static final int ABILITY_UPGRADES_FIELD_NUMBER = 2;
        private java.util.List<java.lang.Integer> abilityUpgrades_;
        /**
         * <code>repeated uint32 ability_upgrades = 2;</code>
         */
        public java.util.List<java.lang.Integer>
            getAbilityUpgradesList() {
          return abilityUpgrades_;
        }
        /**
         * <code>repeated uint32 ability_upgrades = 2;</code>
         */
        public int getAbilityUpgradesCount() {
          return abilityUpgrades_.size();
        }
        /**
         * <code>repeated uint32 ability_upgrades = 2;</code>
         */
        public int getAbilityUpgrades(int index) {
          return abilityUpgrades_.get(index);
        }

        public static final int PLAYER_SLOT_FIELD_NUMBER = 3;
        private int playerSlot_;
        /**
         * <code>optional uint32 player_slot = 3;</code>
         */
        public boolean hasPlayerSlot() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 player_slot = 3;</code>
         */
        public int getPlayerSlot() {
          return playerSlot_;
        }

        public static final int EQUIPPED_ECON_ITEMS_FIELD_NUMBER = 4;
        private java.util.List<skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem> equippedEconItems_;
        /**
         * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
         */
        public java.util.List<skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem> getEquippedEconItemsList() {
          return equippedEconItems_;
        }
        /**
         * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
         */
        public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItemOrBuilder> 
            getEquippedEconItemsOrBuilderList() {
          return equippedEconItems_;
        }
        /**
         * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
         */
        public int getEquippedEconItemsCount() {
          return equippedEconItems_.size();
        }
        /**
         * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem getEquippedEconItems(int index) {
          return equippedEconItems_.get(index);
        }
        /**
         * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItemOrBuilder getEquippedEconItemsOrBuilder(
            int index) {
          return equippedEconItems_.get(index);
        }

        public static final int KILLS_FIELD_NUMBER = 5;
        private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill> kills_;
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
         */
        public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill> getKillsList() {
          return kills_;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
         */
        public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKillOrBuilder> 
            getKillsOrBuilderList() {
          return kills_;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
         */
        public int getKillsCount() {
          return kills_.size();
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill getKills(int index) {
          return kills_.get(index);
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKillOrBuilder getKillsOrBuilder(
            int index) {
          return kills_.get(index);
        }

        public static final int ITEMS_FIELD_NUMBER = 6;
        private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase> items_;
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
         */
        public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase> getItemsList() {
          return items_;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
         */
        public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchaseOrBuilder> 
            getItemsOrBuilderList() {
          return items_;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
         */
        public int getItemsCount() {
          return items_.size();
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase getItems(int index) {
          return items_.get(index);
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchaseOrBuilder getItemsOrBuilder(
            int index) {
          return items_.get(index);
        }

        public static final int AVG_KILLS_X16_FIELD_NUMBER = 7;
        private int avgKillsX16_;
        /**
         * <code>optional uint32 avg_kills_x16 = 7;</code>
         */
        public boolean hasAvgKillsX16() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 avg_kills_x16 = 7;</code>
         */
        public int getAvgKillsX16() {
          return avgKillsX16_;
        }

        public static final int AVG_DEATHS_X16_FIELD_NUMBER = 8;
        private int avgDeathsX16_;
        /**
         * <code>optional uint32 avg_deaths_x16 = 8;</code>
         */
        public boolean hasAvgDeathsX16() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 avg_deaths_x16 = 8;</code>
         */
        public int getAvgDeathsX16() {
          return avgDeathsX16_;
        }

        public static final int AVG_ASSISTS_X16_FIELD_NUMBER = 9;
        private int avgAssistsX16_;
        /**
         * <code>optional uint32 avg_assists_x16 = 9;</code>
         */
        public boolean hasAvgAssistsX16() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 avg_assists_x16 = 9;</code>
         */
        public int getAvgAssistsX16() {
          return avgAssistsX16_;
        }

        public static final int AVG_GPM_X16_FIELD_NUMBER = 10;
        private int avgGpmX16_;
        /**
         * <code>optional uint32 avg_gpm_x16 = 10;</code>
         */
        public boolean hasAvgGpmX16() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 avg_gpm_x16 = 10;</code>
         */
        public int getAvgGpmX16() {
          return avgGpmX16_;
        }

        public static final int AVG_XPM_X16_FIELD_NUMBER = 11;
        private int avgXpmX16_;
        /**
         * <code>optional uint32 avg_xpm_x16 = 11;</code>
         */
        public boolean hasAvgXpmX16() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional uint32 avg_xpm_x16 = 11;</code>
         */
        public int getAvgXpmX16() {
          return avgXpmX16_;
        }

        public static final int BEST_KILLS_X16_FIELD_NUMBER = 12;
        private int bestKillsX16_;
        /**
         * <code>optional uint32 best_kills_x16 = 12;</code>
         */
        public boolean hasBestKillsX16() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional uint32 best_kills_x16 = 12;</code>
         */
        public int getBestKillsX16() {
          return bestKillsX16_;
        }

        public static final int BEST_ASSISTS_X16_FIELD_NUMBER = 13;
        private int bestAssistsX16_;
        /**
         * <code>optional uint32 best_assists_x16 = 13;</code>
         */
        public boolean hasBestAssistsX16() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional uint32 best_assists_x16 = 13;</code>
         */
        public int getBestAssistsX16() {
          return bestAssistsX16_;
        }

        public static final int BEST_GPM_X16_FIELD_NUMBER = 14;
        private int bestGpmX16_;
        /**
         * <code>optional uint32 best_gpm_x16 = 14;</code>
         */
        public boolean hasBestGpmX16() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional uint32 best_gpm_x16 = 14;</code>
         */
        public int getBestGpmX16() {
          return bestGpmX16_;
        }

        public static final int BEST_XPM_X16_FIELD_NUMBER = 15;
        private int bestXpmX16_;
        /**
         * <code>optional uint32 best_xpm_x16 = 15;</code>
         */
        public boolean hasBestXpmX16() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional uint32 best_xpm_x16 = 15;</code>
         */
        public int getBestXpmX16() {
          return bestXpmX16_;
        }

        public static final int WIN_STREAK_FIELD_NUMBER = 16;
        private int winStreak_;
        /**
         * <code>optional uint32 win_streak = 16;</code>
         */
        public boolean hasWinStreak() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional uint32 win_streak = 16;</code>
         */
        public int getWinStreak() {
          return winStreak_;
        }

        public static final int BEST_WIN_STREAK_FIELD_NUMBER = 17;
        private int bestWinStreak_;
        /**
         * <code>optional uint32 best_win_streak = 17;</code>
         */
        public boolean hasBestWinStreak() {
          return ((bitField0_ & 0x00001000) == 0x00001000);
        }
        /**
         * <code>optional uint32 best_win_streak = 17;</code>
         */
        public int getBestWinStreak() {
          return bestWinStreak_;
        }

        public static final int FIGHT_SCORE_FIELD_NUMBER = 18;
        private float fightScore_;
        /**
         * <code>optional float fight_score = 18;</code>
         */
        public boolean hasFightScore() {
          return ((bitField0_ & 0x00002000) == 0x00002000);
        }
        /**
         * <code>optional float fight_score = 18;</code>
         */
        public float getFightScore() {
          return fightScore_;
        }

        public static final int FARM_SCORE_FIELD_NUMBER = 19;
        private float farmScore_;
        /**
         * <code>optional float farm_score = 19;</code>
         */
        public boolean hasFarmScore() {
          return ((bitField0_ & 0x00004000) == 0x00004000);
        }
        /**
         * <code>optional float farm_score = 19;</code>
         */
        public float getFarmScore() {
          return farmScore_;
        }

        public static final int SUPPORT_SCORE_FIELD_NUMBER = 20;
        private float supportScore_;
        /**
         * <code>optional float support_score = 20;</code>
         */
        public boolean hasSupportScore() {
          return ((bitField0_ & 0x00008000) == 0x00008000);
        }
        /**
         * <code>optional float support_score = 20;</code>
         */
        public float getSupportScore() {
          return supportScore_;
        }

        public static final int PUSH_SCORE_FIELD_NUMBER = 21;
        private float pushScore_;
        /**
         * <code>optional float push_score = 21;</code>
         */
        public boolean hasPushScore() {
          return ((bitField0_ & 0x00010000) == 0x00010000);
        }
        /**
         * <code>optional float push_score = 21;</code>
         */
        public float getPushScore() {
          return pushScore_;
        }

        public static final int LEVEL_UP_TIMES_FIELD_NUMBER = 22;
        private java.util.List<java.lang.Integer> levelUpTimes_;
        /**
         * <code>repeated uint32 level_up_times = 22;</code>
         */
        public java.util.List<java.lang.Integer>
            getLevelUpTimesList() {
          return levelUpTimes_;
        }
        /**
         * <code>repeated uint32 level_up_times = 22;</code>
         */
        public int getLevelUpTimesCount() {
          return levelUpTimes_.size();
        }
        /**
         * <code>repeated uint32 level_up_times = 22;</code>
         */
        public int getLevelUpTimes(int index) {
          return levelUpTimes_.get(index);
        }

        public static final int GRAPH_NET_WORTH_FIELD_NUMBER = 23;
        private java.util.List<java.lang.Float> graphNetWorth_;
        /**
         * <code>repeated float graph_net_worth = 23;</code>
         */
        public java.util.List<java.lang.Float>
            getGraphNetWorthList() {
          return graphNetWorth_;
        }
        /**
         * <code>repeated float graph_net_worth = 23;</code>
         */
        public int getGraphNetWorthCount() {
          return graphNetWorth_.size();
        }
        /**
         * <code>repeated float graph_net_worth = 23;</code>
         */
        public float getGraphNetWorth(int index) {
          return graphNetWorth_.get(index);
        }

        public static final int INVENTORY_SNAPSHOT_FIELD_NUMBER = 24;
        private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot> inventorySnapshot_;
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
         */
        public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot> getInventorySnapshotList() {
          return inventorySnapshot_;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
         */
        public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshotOrBuilder> 
            getInventorySnapshotOrBuilderList() {
          return inventorySnapshot_;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
         */
        public int getInventorySnapshotCount() {
          return inventorySnapshot_.size();
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot getInventorySnapshot(int index) {
          return inventorySnapshot_.get(index);
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshotOrBuilder getInventorySnapshotOrBuilder(
            int index) {
          return inventorySnapshot_.get(index);
        }

        public static final int AVG_STATS_CALIBRATED_FIELD_NUMBER = 25;
        private boolean avgStatsCalibrated_;
        /**
         * <code>optional bool avg_stats_calibrated = 25;</code>
         */
        public boolean hasAvgStatsCalibrated() {
          return ((bitField0_ & 0x00020000) == 0x00020000);
        }
        /**
         * <code>optional bool avg_stats_calibrated = 25;</code>
         */
        public boolean getAvgStatsCalibrated() {
          return avgStatsCalibrated_;
        }

        public static final int AUTO_STYLE_CRITERIA_FIELD_NUMBER = 26;
        private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria> autoStyleCriteria_;
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
         */
        public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria> getAutoStyleCriteriaList() {
          return autoStyleCriteria_;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
         */
        public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteriaOrBuilder> 
            getAutoStyleCriteriaOrBuilderList() {
          return autoStyleCriteria_;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
         */
        public int getAutoStyleCriteriaCount() {
          return autoStyleCriteria_.size();
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria getAutoStyleCriteria(int index) {
          return autoStyleCriteria_.get(index);
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteriaOrBuilder getAutoStyleCriteriaOrBuilder(
            int index) {
          return autoStyleCriteria_.get(index);
        }

        public static final int EVENT_ID_FIELD_NUMBER = 27;
        private int eventId_;
        /**
         * <code>optional uint32 event_id = 27;</code>
         */
        public boolean hasEventId() {
          return ((bitField0_ & 0x00040000) == 0x00040000);
        }
        /**
         * <code>optional uint32 event_id = 27;</code>
         */
        public int getEventId() {
          return eventId_;
        }

        public static final int EVENT_POINTS_FIELD_NUMBER = 28;
        private int eventPoints_;
        /**
         * <code>optional uint32 event_points = 28;</code>
         */
        public boolean hasEventPoints() {
          return ((bitField0_ & 0x00080000) == 0x00080000);
        }
        /**
         * <code>optional uint32 event_points = 28;</code>
         */
        public int getEventPoints() {
          return eventPoints_;
        }

        public static final int CAMPS_STACKED_FIELD_NUMBER = 32;
        private int campsStacked_;
        /**
         * <code>optional uint32 camps_stacked = 32;</code>
         */
        public boolean hasCampsStacked() {
          return ((bitField0_ & 0x00100000) == 0x00100000);
        }
        /**
         * <code>optional uint32 camps_stacked = 32;</code>
         */
        public int getCampsStacked() {
          return campsStacked_;
        }

        private void initFields() {
          accountId_ = 0;
          abilityUpgrades_ = java.util.Collections.emptyList();
          playerSlot_ = 0;
          equippedEconItems_ = java.util.Collections.emptyList();
          kills_ = java.util.Collections.emptyList();
          items_ = java.util.Collections.emptyList();
          avgKillsX16_ = 0;
          avgDeathsX16_ = 0;
          avgAssistsX16_ = 0;
          avgGpmX16_ = 0;
          avgXpmX16_ = 0;
          bestKillsX16_ = 0;
          bestAssistsX16_ = 0;
          bestGpmX16_ = 0;
          bestXpmX16_ = 0;
          winStreak_ = 0;
          bestWinStreak_ = 0;
          fightScore_ = 0F;
          farmScore_ = 0F;
          supportScore_ = 0F;
          pushScore_ = 0F;
          levelUpTimes_ = java.util.Collections.emptyList();
          graphNetWorth_ = java.util.Collections.emptyList();
          inventorySnapshot_ = java.util.Collections.emptyList();
          avgStatsCalibrated_ = false;
          autoStyleCriteria_ = java.util.Collections.emptyList();
          eventId_ = 0;
          eventPoints_ = 0;
          campsStacked_ = 0;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt32(1, accountId_);
          }
          for (int i = 0; i < abilityUpgrades_.size(); i++) {
            output.writeUInt32(2, abilityUpgrades_.get(i));
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeUInt32(3, playerSlot_);
          }
          for (int i = 0; i < equippedEconItems_.size(); i++) {
            output.writeMessage(4, equippedEconItems_.get(i));
          }
          for (int i = 0; i < kills_.size(); i++) {
            output.writeMessage(5, kills_.get(i));
          }
          for (int i = 0; i < items_.size(); i++) {
            output.writeMessage(6, items_.get(i));
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeUInt32(7, avgKillsX16_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            output.writeUInt32(8, avgDeathsX16_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            output.writeUInt32(9, avgAssistsX16_);
          }
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            output.writeUInt32(10, avgGpmX16_);
          }
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            output.writeUInt32(11, avgXpmX16_);
          }
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            output.writeUInt32(12, bestKillsX16_);
          }
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            output.writeUInt32(13, bestAssistsX16_);
          }
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            output.writeUInt32(14, bestGpmX16_);
          }
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            output.writeUInt32(15, bestXpmX16_);
          }
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            output.writeUInt32(16, winStreak_);
          }
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            output.writeUInt32(17, bestWinStreak_);
          }
          if (((bitField0_ & 0x00002000) == 0x00002000)) {
            output.writeFloat(18, fightScore_);
          }
          if (((bitField0_ & 0x00004000) == 0x00004000)) {
            output.writeFloat(19, farmScore_);
          }
          if (((bitField0_ & 0x00008000) == 0x00008000)) {
            output.writeFloat(20, supportScore_);
          }
          if (((bitField0_ & 0x00010000) == 0x00010000)) {
            output.writeFloat(21, pushScore_);
          }
          for (int i = 0; i < levelUpTimes_.size(); i++) {
            output.writeUInt32(22, levelUpTimes_.get(i));
          }
          for (int i = 0; i < graphNetWorth_.size(); i++) {
            output.writeFloat(23, graphNetWorth_.get(i));
          }
          for (int i = 0; i < inventorySnapshot_.size(); i++) {
            output.writeMessage(24, inventorySnapshot_.get(i));
          }
          if (((bitField0_ & 0x00020000) == 0x00020000)) {
            output.writeBool(25, avgStatsCalibrated_);
          }
          for (int i = 0; i < autoStyleCriteria_.size(); i++) {
            output.writeMessage(26, autoStyleCriteria_.get(i));
          }
          if (((bitField0_ & 0x00040000) == 0x00040000)) {
            output.writeUInt32(27, eventId_);
          }
          if (((bitField0_ & 0x00080000) == 0x00080000)) {
            output.writeUInt32(28, eventPoints_);
          }
          if (((bitField0_ & 0x00100000) == 0x00100000)) {
            output.writeUInt32(32, campsStacked_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, accountId_);
          }
          {
            int dataSize = 0;
            for (int i = 0; i < abilityUpgrades_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeUInt32SizeNoTag(abilityUpgrades_.get(i));
            }
            size += dataSize;
            size += 1 * getAbilityUpgradesList().size();
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(3, playerSlot_);
          }
          for (int i = 0; i < equippedEconItems_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, equippedEconItems_.get(i));
          }
          for (int i = 0; i < kills_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(5, kills_.get(i));
          }
          for (int i = 0; i < items_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(6, items_.get(i));
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(7, avgKillsX16_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(8, avgDeathsX16_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(9, avgAssistsX16_);
          }
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(10, avgGpmX16_);
          }
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(11, avgXpmX16_);
          }
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(12, bestKillsX16_);
          }
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(13, bestAssistsX16_);
          }
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(14, bestGpmX16_);
          }
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(15, bestXpmX16_);
          }
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(16, winStreak_);
          }
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(17, bestWinStreak_);
          }
          if (((bitField0_ & 0x00002000) == 0x00002000)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(18, fightScore_);
          }
          if (((bitField0_ & 0x00004000) == 0x00004000)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(19, farmScore_);
          }
          if (((bitField0_ & 0x00008000) == 0x00008000)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(20, supportScore_);
          }
          if (((bitField0_ & 0x00010000) == 0x00010000)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(21, pushScore_);
          }
          {
            int dataSize = 0;
            for (int i = 0; i < levelUpTimes_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeUInt32SizeNoTag(levelUpTimes_.get(i));
            }
            size += dataSize;
            size += 2 * getLevelUpTimesList().size();
          }
          {
            int dataSize = 0;
            dataSize = 4 * getGraphNetWorthList().size();
            size += dataSize;
            size += 2 * getGraphNetWorthList().size();
          }
          for (int i = 0; i < inventorySnapshot_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(24, inventorySnapshot_.get(i));
          }
          if (((bitField0_ & 0x00020000) == 0x00020000)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(25, avgStatsCalibrated_);
          }
          for (int i = 0; i < autoStyleCriteria_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(26, autoStyleCriteria_.get(i));
          }
          if (((bitField0_ & 0x00040000) == 0x00040000)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(27, eventId_);
          }
          if (((bitField0_ & 0x00080000) == 0x00080000)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(28, eventPoints_);
          }
          if (((bitField0_ & 0x00100000) == 0x00100000)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(32, campsStacked_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CDOTAMatchMetadata.Team.Player}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:CDOTAMatchMetadata.Team.Player)
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_Player_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_Player_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder.class);
          }

          // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
              getEquippedEconItemsFieldBuilder();
              getKillsFieldBuilder();
              getItemsFieldBuilder();
              getInventorySnapshotFieldBuilder();
              getAutoStyleCriteriaFieldBuilder();
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            accountId_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            abilityUpgrades_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            playerSlot_ = 0;
            bitField0_ = (bitField0_ & ~0x00000004);
            if (equippedEconItemsBuilder_ == null) {
              equippedEconItems_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              equippedEconItemsBuilder_.clear();
            }
            if (killsBuilder_ == null) {
              kills_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              killsBuilder_.clear();
            }
            if (itemsBuilder_ == null) {
              items_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              itemsBuilder_.clear();
            }
            avgKillsX16_ = 0;
            bitField0_ = (bitField0_ & ~0x00000040);
            avgDeathsX16_ = 0;
            bitField0_ = (bitField0_ & ~0x00000080);
            avgAssistsX16_ = 0;
            bitField0_ = (bitField0_ & ~0x00000100);
            avgGpmX16_ = 0;
            bitField0_ = (bitField0_ & ~0x00000200);
            avgXpmX16_ = 0;
            bitField0_ = (bitField0_ & ~0x00000400);
            bestKillsX16_ = 0;
            bitField0_ = (bitField0_ & ~0x00000800);
            bestAssistsX16_ = 0;
            bitField0_ = (bitField0_ & ~0x00001000);
            bestGpmX16_ = 0;
            bitField0_ = (bitField0_ & ~0x00002000);
            bestXpmX16_ = 0;
            bitField0_ = (bitField0_ & ~0x00004000);
            winStreak_ = 0;
            bitField0_ = (bitField0_ & ~0x00008000);
            bestWinStreak_ = 0;
            bitField0_ = (bitField0_ & ~0x00010000);
            fightScore_ = 0F;
            bitField0_ = (bitField0_ & ~0x00020000);
            farmScore_ = 0F;
            bitField0_ = (bitField0_ & ~0x00040000);
            supportScore_ = 0F;
            bitField0_ = (bitField0_ & ~0x00080000);
            pushScore_ = 0F;
            bitField0_ = (bitField0_ & ~0x00100000);
            levelUpTimes_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00200000);
            graphNetWorth_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00400000);
            if (inventorySnapshotBuilder_ == null) {
              inventorySnapshot_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00800000);
            } else {
              inventorySnapshotBuilder_.clear();
            }
            avgStatsCalibrated_ = false;
            bitField0_ = (bitField0_ & ~0x01000000);
            if (autoStyleCriteriaBuilder_ == null) {
              autoStyleCriteria_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x02000000);
            } else {
              autoStyleCriteriaBuilder_.clear();
            }
            eventId_ = 0;
            bitField0_ = (bitField0_ & ~0x04000000);
            eventPoints_ = 0;
            bitField0_ = (bitField0_ & ~0x08000000);
            campsStacked_ = 0;
            bitField0_ = (bitField0_ & ~0x10000000);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_Player_descriptor;
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player getDefaultInstanceForType() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.getDefaultInstance();
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player build() {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player buildPartial() {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.accountId_ = accountId_;
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              abilityUpgrades_ = java.util.Collections.unmodifiableList(abilityUpgrades_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.abilityUpgrades_ = abilityUpgrades_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000002;
            }
            result.playerSlot_ = playerSlot_;
            if (equippedEconItemsBuilder_ == null) {
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                equippedEconItems_ = java.util.Collections.unmodifiableList(equippedEconItems_);
                bitField0_ = (bitField0_ & ~0x00000008);
              }
              result.equippedEconItems_ = equippedEconItems_;
            } else {
              result.equippedEconItems_ = equippedEconItemsBuilder_.build();
            }
            if (killsBuilder_ == null) {
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                kills_ = java.util.Collections.unmodifiableList(kills_);
                bitField0_ = (bitField0_ & ~0x00000010);
              }
              result.kills_ = kills_;
            } else {
              result.kills_ = killsBuilder_.build();
            }
            if (itemsBuilder_ == null) {
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                items_ = java.util.Collections.unmodifiableList(items_);
                bitField0_ = (bitField0_ & ~0x00000020);
              }
              result.items_ = items_;
            } else {
              result.items_ = itemsBuilder_.build();
            }
            if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
              to_bitField0_ |= 0x00000004;
            }
            result.avgKillsX16_ = avgKillsX16_;
            if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
              to_bitField0_ |= 0x00000008;
            }
            result.avgDeathsX16_ = avgDeathsX16_;
            if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
              to_bitField0_ |= 0x00000010;
            }
            result.avgAssistsX16_ = avgAssistsX16_;
            if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
              to_bitField0_ |= 0x00000020;
            }
            result.avgGpmX16_ = avgGpmX16_;
            if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
              to_bitField0_ |= 0x00000040;
            }
            result.avgXpmX16_ = avgXpmX16_;
            if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
              to_bitField0_ |= 0x00000080;
            }
            result.bestKillsX16_ = bestKillsX16_;
            if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
              to_bitField0_ |= 0x00000100;
            }
            result.bestAssistsX16_ = bestAssistsX16_;
            if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
              to_bitField0_ |= 0x00000200;
            }
            result.bestGpmX16_ = bestGpmX16_;
            if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
              to_bitField0_ |= 0x00000400;
            }
            result.bestXpmX16_ = bestXpmX16_;
            if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
              to_bitField0_ |= 0x00000800;
            }
            result.winStreak_ = winStreak_;
            if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
              to_bitField0_ |= 0x00001000;
            }
            result.bestWinStreak_ = bestWinStreak_;
            if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
              to_bitField0_ |= 0x00002000;
            }
            result.fightScore_ = fightScore_;
            if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
              to_bitField0_ |= 0x00004000;
            }
            result.farmScore_ = farmScore_;
            if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
              to_bitField0_ |= 0x00008000;
            }
            result.supportScore_ = supportScore_;
            if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
              to_bitField0_ |= 0x00010000;
            }
            result.pushScore_ = pushScore_;
            if (((bitField0_ & 0x00200000) == 0x00200000)) {
              levelUpTimes_ = java.util.Collections.unmodifiableList(levelUpTimes_);
              bitField0_ = (bitField0_ & ~0x00200000);
            }
            result.levelUpTimes_ = levelUpTimes_;
            if (((bitField0_ & 0x00400000) == 0x00400000)) {
              graphNetWorth_ = java.util.Collections.unmodifiableList(graphNetWorth_);
              bitField0_ = (bitField0_ & ~0x00400000);
            }
            result.graphNetWorth_ = graphNetWorth_;
            if (inventorySnapshotBuilder_ == null) {
              if (((bitField0_ & 0x00800000) == 0x00800000)) {
                inventorySnapshot_ = java.util.Collections.unmodifiableList(inventorySnapshot_);
                bitField0_ = (bitField0_ & ~0x00800000);
              }
              result.inventorySnapshot_ = inventorySnapshot_;
            } else {
              result.inventorySnapshot_ = inventorySnapshotBuilder_.build();
            }
            if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
              to_bitField0_ |= 0x00020000;
            }
            result.avgStatsCalibrated_ = avgStatsCalibrated_;
            if (autoStyleCriteriaBuilder_ == null) {
              if (((bitField0_ & 0x02000000) == 0x02000000)) {
                autoStyleCriteria_ = java.util.Collections.unmodifiableList(autoStyleCriteria_);
                bitField0_ = (bitField0_ & ~0x02000000);
              }
              result.autoStyleCriteria_ = autoStyleCriteria_;
            } else {
              result.autoStyleCriteria_ = autoStyleCriteriaBuilder_.build();
            }
            if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
              to_bitField0_ |= 0x00040000;
            }
            result.eventId_ = eventId_;
            if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
              to_bitField0_ |= 0x00080000;
            }
            result.eventPoints_ = eventPoints_;
            if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
              to_bitField0_ |= 0x00100000;
            }
            result.campsStacked_ = campsStacked_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player) {
              return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player other) {
            if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.getDefaultInstance()) return this;
            if (other.hasAccountId()) {
              setAccountId(other.getAccountId());
            }
            if (!other.abilityUpgrades_.isEmpty()) {
              if (abilityUpgrades_.isEmpty()) {
                abilityUpgrades_ = other.abilityUpgrades_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureAbilityUpgradesIsMutable();
                abilityUpgrades_.addAll(other.abilityUpgrades_);
              }
              onChanged();
            }
            if (other.hasPlayerSlot()) {
              setPlayerSlot(other.getPlayerSlot());
            }
            if (equippedEconItemsBuilder_ == null) {
              if (!other.equippedEconItems_.isEmpty()) {
                if (equippedEconItems_.isEmpty()) {
                  equippedEconItems_ = other.equippedEconItems_;
                  bitField0_ = (bitField0_ & ~0x00000008);
                } else {
                  ensureEquippedEconItemsIsMutable();
                  equippedEconItems_.addAll(other.equippedEconItems_);
                }
                onChanged();
              }
            } else {
              if (!other.equippedEconItems_.isEmpty()) {
                if (equippedEconItemsBuilder_.isEmpty()) {
                  equippedEconItemsBuilder_.dispose();
                  equippedEconItemsBuilder_ = null;
                  equippedEconItems_ = other.equippedEconItems_;
                  bitField0_ = (bitField0_ & ~0x00000008);
                  equippedEconItemsBuilder_ = 
                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                       getEquippedEconItemsFieldBuilder() : null;
                } else {
                  equippedEconItemsBuilder_.addAllMessages(other.equippedEconItems_);
                }
              }
            }
            if (killsBuilder_ == null) {
              if (!other.kills_.isEmpty()) {
                if (kills_.isEmpty()) {
                  kills_ = other.kills_;
                  bitField0_ = (bitField0_ & ~0x00000010);
                } else {
                  ensureKillsIsMutable();
                  kills_.addAll(other.kills_);
                }
                onChanged();
              }
            } else {
              if (!other.kills_.isEmpty()) {
                if (killsBuilder_.isEmpty()) {
                  killsBuilder_.dispose();
                  killsBuilder_ = null;
                  kills_ = other.kills_;
                  bitField0_ = (bitField0_ & ~0x00000010);
                  killsBuilder_ = 
                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                       getKillsFieldBuilder() : null;
                } else {
                  killsBuilder_.addAllMessages(other.kills_);
                }
              }
            }
            if (itemsBuilder_ == null) {
              if (!other.items_.isEmpty()) {
                if (items_.isEmpty()) {
                  items_ = other.items_;
                  bitField0_ = (bitField0_ & ~0x00000020);
                } else {
                  ensureItemsIsMutable();
                  items_.addAll(other.items_);
                }
                onChanged();
              }
            } else {
              if (!other.items_.isEmpty()) {
                if (itemsBuilder_.isEmpty()) {
                  itemsBuilder_.dispose();
                  itemsBuilder_ = null;
                  items_ = other.items_;
                  bitField0_ = (bitField0_ & ~0x00000020);
                  itemsBuilder_ = 
                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                       getItemsFieldBuilder() : null;
                } else {
                  itemsBuilder_.addAllMessages(other.items_);
                }
              }
            }
            if (other.hasAvgKillsX16()) {
              setAvgKillsX16(other.getAvgKillsX16());
            }
            if (other.hasAvgDeathsX16()) {
              setAvgDeathsX16(other.getAvgDeathsX16());
            }
            if (other.hasAvgAssistsX16()) {
              setAvgAssistsX16(other.getAvgAssistsX16());
            }
            if (other.hasAvgGpmX16()) {
              setAvgGpmX16(other.getAvgGpmX16());
            }
            if (other.hasAvgXpmX16()) {
              setAvgXpmX16(other.getAvgXpmX16());
            }
            if (other.hasBestKillsX16()) {
              setBestKillsX16(other.getBestKillsX16());
            }
            if (other.hasBestAssistsX16()) {
              setBestAssistsX16(other.getBestAssistsX16());
            }
            if (other.hasBestGpmX16()) {
              setBestGpmX16(other.getBestGpmX16());
            }
            if (other.hasBestXpmX16()) {
              setBestXpmX16(other.getBestXpmX16());
            }
            if (other.hasWinStreak()) {
              setWinStreak(other.getWinStreak());
            }
            if (other.hasBestWinStreak()) {
              setBestWinStreak(other.getBestWinStreak());
            }
            if (other.hasFightScore()) {
              setFightScore(other.getFightScore());
            }
            if (other.hasFarmScore()) {
              setFarmScore(other.getFarmScore());
            }
            if (other.hasSupportScore()) {
              setSupportScore(other.getSupportScore());
            }
            if (other.hasPushScore()) {
              setPushScore(other.getPushScore());
            }
            if (!other.levelUpTimes_.isEmpty()) {
              if (levelUpTimes_.isEmpty()) {
                levelUpTimes_ = other.levelUpTimes_;
                bitField0_ = (bitField0_ & ~0x00200000);
              } else {
                ensureLevelUpTimesIsMutable();
                levelUpTimes_.addAll(other.levelUpTimes_);
              }
              onChanged();
            }
            if (!other.graphNetWorth_.isEmpty()) {
              if (graphNetWorth_.isEmpty()) {
                graphNetWorth_ = other.graphNetWorth_;
                bitField0_ = (bitField0_ & ~0x00400000);
              } else {
                ensureGraphNetWorthIsMutable();
                graphNetWorth_.addAll(other.graphNetWorth_);
              }
              onChanged();
            }
            if (inventorySnapshotBuilder_ == null) {
              if (!other.inventorySnapshot_.isEmpty()) {
                if (inventorySnapshot_.isEmpty()) {
                  inventorySnapshot_ = other.inventorySnapshot_;
                  bitField0_ = (bitField0_ & ~0x00800000);
                } else {
                  ensureInventorySnapshotIsMutable();
                  inventorySnapshot_.addAll(other.inventorySnapshot_);
                }
                onChanged();
              }
            } else {
              if (!other.inventorySnapshot_.isEmpty()) {
                if (inventorySnapshotBuilder_.isEmpty()) {
                  inventorySnapshotBuilder_.dispose();
                  inventorySnapshotBuilder_ = null;
                  inventorySnapshot_ = other.inventorySnapshot_;
                  bitField0_ = (bitField0_ & ~0x00800000);
                  inventorySnapshotBuilder_ = 
                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                       getInventorySnapshotFieldBuilder() : null;
                } else {
                  inventorySnapshotBuilder_.addAllMessages(other.inventorySnapshot_);
                }
              }
            }
            if (other.hasAvgStatsCalibrated()) {
              setAvgStatsCalibrated(other.getAvgStatsCalibrated());
            }
            if (autoStyleCriteriaBuilder_ == null) {
              if (!other.autoStyleCriteria_.isEmpty()) {
                if (autoStyleCriteria_.isEmpty()) {
                  autoStyleCriteria_ = other.autoStyleCriteria_;
                  bitField0_ = (bitField0_ & ~0x02000000);
                } else {
                  ensureAutoStyleCriteriaIsMutable();
                  autoStyleCriteria_.addAll(other.autoStyleCriteria_);
                }
                onChanged();
              }
            } else {
              if (!other.autoStyleCriteria_.isEmpty()) {
                if (autoStyleCriteriaBuilder_.isEmpty()) {
                  autoStyleCriteriaBuilder_.dispose();
                  autoStyleCriteriaBuilder_ = null;
                  autoStyleCriteria_ = other.autoStyleCriteria_;
                  bitField0_ = (bitField0_ & ~0x02000000);
                  autoStyleCriteriaBuilder_ = 
                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                       getAutoStyleCriteriaFieldBuilder() : null;
                } else {
                  autoStyleCriteriaBuilder_.addAllMessages(other.autoStyleCriteria_);
                }
              }
            }
            if (other.hasEventId()) {
              setEventId(other.getEventId());
            }
            if (other.hasEventPoints()) {
              setEventPoints(other.getEventPoints());
            }
            if (other.hasCampsStacked()) {
              setCampsStacked(other.getCampsStacked());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int accountId_ ;
          /**
           * <code>optional uint32 account_id = 1;</code>
           */
          public boolean hasAccountId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional uint32 account_id = 1;</code>
           */
          public int getAccountId() {
            return accountId_;
          }
          /**
           * <code>optional uint32 account_id = 1;</code>
           */
          public Builder setAccountId(int value) {
            bitField0_ |= 0x00000001;
            accountId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 account_id = 1;</code>
           */
          public Builder clearAccountId() {
            bitField0_ = (bitField0_ & ~0x00000001);
            accountId_ = 0;
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Integer> abilityUpgrades_ = java.util.Collections.emptyList();
          private void ensureAbilityUpgradesIsMutable() {
            if (!((bitField0_ & 0x00000002) == 0x00000002)) {
              abilityUpgrades_ = new java.util.ArrayList<java.lang.Integer>(abilityUpgrades_);
              bitField0_ |= 0x00000002;
             }
          }
          /**
           * <code>repeated uint32 ability_upgrades = 2;</code>
           */
          public java.util.List<java.lang.Integer>
              getAbilityUpgradesList() {
            return java.util.Collections.unmodifiableList(abilityUpgrades_);
          }
          /**
           * <code>repeated uint32 ability_upgrades = 2;</code>
           */
          public int getAbilityUpgradesCount() {
            return abilityUpgrades_.size();
          }
          /**
           * <code>repeated uint32 ability_upgrades = 2;</code>
           */
          public int getAbilityUpgrades(int index) {
            return abilityUpgrades_.get(index);
          }
          /**
           * <code>repeated uint32 ability_upgrades = 2;</code>
           */
          public Builder setAbilityUpgrades(
              int index, int value) {
            ensureAbilityUpgradesIsMutable();
            abilityUpgrades_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated uint32 ability_upgrades = 2;</code>
           */
          public Builder addAbilityUpgrades(int value) {
            ensureAbilityUpgradesIsMutable();
            abilityUpgrades_.add(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated uint32 ability_upgrades = 2;</code>
           */
          public Builder addAllAbilityUpgrades(
              java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureAbilityUpgradesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, abilityUpgrades_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated uint32 ability_upgrades = 2;</code>
           */
          public Builder clearAbilityUpgrades() {
            abilityUpgrades_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
            return this;
          }

          private int playerSlot_ ;
          /**
           * <code>optional uint32 player_slot = 3;</code>
           */
          public boolean hasPlayerSlot() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional uint32 player_slot = 3;</code>
           */
          public int getPlayerSlot() {
            return playerSlot_;
          }
          /**
           * <code>optional uint32 player_slot = 3;</code>
           */
          public Builder setPlayerSlot(int value) {
            bitField0_ |= 0x00000004;
            playerSlot_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 player_slot = 3;</code>
           */
          public Builder clearPlayerSlot() {
            bitField0_ = (bitField0_ & ~0x00000004);
            playerSlot_ = 0;
            onChanged();
            return this;
          }

          private java.util.List<skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem> equippedEconItems_ =
            java.util.Collections.emptyList();
          private void ensureEquippedEconItemsIsMutable() {
            if (!((bitField0_ & 0x00000008) == 0x00000008)) {
              equippedEconItems_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem>(equippedEconItems_);
              bitField0_ |= 0x00000008;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem, skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.Builder, skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItemOrBuilder> equippedEconItemsBuilder_;

          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public java.util.List<skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem> getEquippedEconItemsList() {
            if (equippedEconItemsBuilder_ == null) {
              return java.util.Collections.unmodifiableList(equippedEconItems_);
            } else {
              return equippedEconItemsBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public int getEquippedEconItemsCount() {
            if (equippedEconItemsBuilder_ == null) {
              return equippedEconItems_.size();
            } else {
              return equippedEconItemsBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem getEquippedEconItems(int index) {
            if (equippedEconItemsBuilder_ == null) {
              return equippedEconItems_.get(index);
            } else {
              return equippedEconItemsBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public Builder setEquippedEconItems(
              int index, skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem value) {
            if (equippedEconItemsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureEquippedEconItemsIsMutable();
              equippedEconItems_.set(index, value);
              onChanged();
            } else {
              equippedEconItemsBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public Builder setEquippedEconItems(
              int index, skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.Builder builderForValue) {
            if (equippedEconItemsBuilder_ == null) {
              ensureEquippedEconItemsIsMutable();
              equippedEconItems_.set(index, builderForValue.build());
              onChanged();
            } else {
              equippedEconItemsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public Builder addEquippedEconItems(skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem value) {
            if (equippedEconItemsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureEquippedEconItemsIsMutable();
              equippedEconItems_.add(value);
              onChanged();
            } else {
              equippedEconItemsBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public Builder addEquippedEconItems(
              int index, skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem value) {
            if (equippedEconItemsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureEquippedEconItemsIsMutable();
              equippedEconItems_.add(index, value);
              onChanged();
            } else {
              equippedEconItemsBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public Builder addEquippedEconItems(
              skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.Builder builderForValue) {
            if (equippedEconItemsBuilder_ == null) {
              ensureEquippedEconItemsIsMutable();
              equippedEconItems_.add(builderForValue.build());
              onChanged();
            } else {
              equippedEconItemsBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public Builder addEquippedEconItems(
              int index, skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.Builder builderForValue) {
            if (equippedEconItemsBuilder_ == null) {
              ensureEquippedEconItemsIsMutable();
              equippedEconItems_.add(index, builderForValue.build());
              onChanged();
            } else {
              equippedEconItemsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public Builder addAllEquippedEconItems(
              java.lang.Iterable<? extends skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem> values) {
            if (equippedEconItemsBuilder_ == null) {
              ensureEquippedEconItemsIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, equippedEconItems_);
              onChanged();
            } else {
              equippedEconItemsBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public Builder clearEquippedEconItems() {
            if (equippedEconItemsBuilder_ == null) {
              equippedEconItems_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000008);
              onChanged();
            } else {
              equippedEconItemsBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public Builder removeEquippedEconItems(int index) {
            if (equippedEconItemsBuilder_ == null) {
              ensureEquippedEconItemsIsMutable();
              equippedEconItems_.remove(index);
              onChanged();
            } else {
              equippedEconItemsBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.Builder getEquippedEconItemsBuilder(
              int index) {
            return getEquippedEconItemsFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItemOrBuilder getEquippedEconItemsOrBuilder(
              int index) {
            if (equippedEconItemsBuilder_ == null) {
              return equippedEconItems_.get(index);  } else {
              return equippedEconItemsBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItemOrBuilder> 
               getEquippedEconItemsOrBuilderList() {
            if (equippedEconItemsBuilder_ != null) {
              return equippedEconItemsBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(equippedEconItems_);
            }
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.Builder addEquippedEconItemsBuilder() {
            return getEquippedEconItemsFieldBuilder().addBuilder(
                skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.getDefaultInstance());
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.Builder addEquippedEconItemsBuilder(
              int index) {
            return getEquippedEconItemsFieldBuilder().addBuilder(
                index, skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.getDefaultInstance());
          }
          /**
           * <code>repeated .CSOEconItem equipped_econ_items = 4;</code>
           */
          public java.util.List<skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.Builder> 
               getEquippedEconItemsBuilderList() {
            return getEquippedEconItemsFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem, skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.Builder, skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItemOrBuilder> 
              getEquippedEconItemsFieldBuilder() {
            if (equippedEconItemsBuilder_ == null) {
              equippedEconItemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem, skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItem.Builder, skadistats.clarity.wire.s2.proto.S2BaseGcMessages.CSOEconItemOrBuilder>(
                      equippedEconItems_,
                      ((bitField0_ & 0x00000008) == 0x00000008),
                      getParentForChildren(),
                      isClean());
              equippedEconItems_ = null;
            }
            return equippedEconItemsBuilder_;
          }

          private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill> kills_ =
            java.util.Collections.emptyList();
          private void ensureKillsIsMutable() {
            if (!((bitField0_ & 0x00000010) == 0x00000010)) {
              kills_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill>(kills_);
              bitField0_ |= 0x00000010;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKillOrBuilder> killsBuilder_;

          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill> getKillsList() {
            if (killsBuilder_ == null) {
              return java.util.Collections.unmodifiableList(kills_);
            } else {
              return killsBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public int getKillsCount() {
            if (killsBuilder_ == null) {
              return kills_.size();
            } else {
              return killsBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill getKills(int index) {
            if (killsBuilder_ == null) {
              return kills_.get(index);
            } else {
              return killsBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public Builder setKills(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill value) {
            if (killsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureKillsIsMutable();
              kills_.set(index, value);
              onChanged();
            } else {
              killsBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public Builder setKills(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder builderForValue) {
            if (killsBuilder_ == null) {
              ensureKillsIsMutable();
              kills_.set(index, builderForValue.build());
              onChanged();
            } else {
              killsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public Builder addKills(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill value) {
            if (killsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureKillsIsMutable();
              kills_.add(value);
              onChanged();
            } else {
              killsBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public Builder addKills(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill value) {
            if (killsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureKillsIsMutable();
              kills_.add(index, value);
              onChanged();
            } else {
              killsBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public Builder addKills(
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder builderForValue) {
            if (killsBuilder_ == null) {
              ensureKillsIsMutable();
              kills_.add(builderForValue.build());
              onChanged();
            } else {
              killsBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public Builder addKills(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder builderForValue) {
            if (killsBuilder_ == null) {
              ensureKillsIsMutable();
              kills_.add(index, builderForValue.build());
              onChanged();
            } else {
              killsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public Builder addAllKills(
              java.lang.Iterable<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill> values) {
            if (killsBuilder_ == null) {
              ensureKillsIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, kills_);
              onChanged();
            } else {
              killsBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public Builder clearKills() {
            if (killsBuilder_ == null) {
              kills_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000010);
              onChanged();
            } else {
              killsBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public Builder removeKills(int index) {
            if (killsBuilder_ == null) {
              ensureKillsIsMutable();
              kills_.remove(index);
              onChanged();
            } else {
              killsBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder getKillsBuilder(
              int index) {
            return getKillsFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKillOrBuilder getKillsOrBuilder(
              int index) {
            if (killsBuilder_ == null) {
              return kills_.get(index);  } else {
              return killsBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKillOrBuilder> 
               getKillsOrBuilderList() {
            if (killsBuilder_ != null) {
              return killsBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(kills_);
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder addKillsBuilder() {
            return getKillsFieldBuilder().addBuilder(
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.getDefaultInstance());
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder addKillsBuilder(
              int index) {
            return getKillsFieldBuilder().addBuilder(
                index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.getDefaultInstance());
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.PlayerKill kills = 5;</code>
           */
          public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder> 
               getKillsBuilderList() {
            return getKillsFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKillOrBuilder> 
              getKillsFieldBuilder() {
            if (killsBuilder_ == null) {
              killsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKill.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerKillOrBuilder>(
                      kills_,
                      ((bitField0_ & 0x00000010) == 0x00000010),
                      getParentForChildren(),
                      isClean());
              kills_ = null;
            }
            return killsBuilder_;
          }

          private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase> items_ =
            java.util.Collections.emptyList();
          private void ensureItemsIsMutable() {
            if (!((bitField0_ & 0x00000020) == 0x00000020)) {
              items_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase>(items_);
              bitField0_ |= 0x00000020;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchaseOrBuilder> itemsBuilder_;

          /**
           * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
           */
          public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase> getItemsList() {
            if (itemsBuilder_ == null) {
              return java.util.Collections.unmodifiableList(items_);
            } else {
              return itemsBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
           */
          public int getItemsCount() {
            if (itemsBuilder_ == null) {
              return items_.size();
            } else {
              return itemsBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase getItems(int index) {
            if (itemsBuilder_ == null) {
              return items_.get(index);
            } else {
              return itemsBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
           */
          public Builder setItems(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase value) {
            if (itemsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureItemsIsMutable();
              items_.set(index, value);
              onChanged();
            } else {
              itemsBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
           */
          public Builder setItems(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase.Builder builderForValue) {
            if (itemsBuilder_ == null) {
              ensureItemsIsMutable();
              items_.set(index, builderForValue.build());
              onChanged();
            } else {
              itemsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
           */
          public Builder addItems(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase value) {
            if (itemsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureItemsIsMutable();
              items_.add(value);
              onChanged();
            } else {
              itemsBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
           */
          public Builder addItems(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase value) {
            if (itemsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureItemsIsMutable();
              items_.add(index, value);
              onChanged();
            } else {
              itemsBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
           */
          public Builder addItems(
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase.Builder builderForValue) {
            if (itemsBuilder_ == null) {
              ensureItemsIsMutable();
              items_.add(builderForValue.build());
              onChanged();
            } else {
              itemsBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
           */
          public Builder addItems(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase.Builder builderForValue) {
            if (itemsBuilder_ == null) {
              ensureItemsIsMutable();
              items_.add(index, builderForValue.build());
              onChanged();
            } else {
              itemsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
           */
          public Builder addAllItems(
              java.lang.Iterable<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase> values) {
            if (itemsBuilder_ == null) {
              ensureItemsIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, items_);
              onChanged();
            } else {
              itemsBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
           */
          public Builder clearItems() {
            if (itemsBuilder_ == null) {
              items_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000020);
              onChanged();
            } else {
              itemsBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
           */
          public Builder removeItems(int index) {
            if (itemsBuilder_ == null) {
              ensureItemsIsMutable();
              items_.remove(index);
              onChanged();
            } else {
              itemsBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase.Builder getItemsBuilder(
              int index) {
            return getItemsFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchaseOrBuilder getItemsOrBuilder(
              int index) {
            if (itemsBuilder_ == null) {
              return items_.get(index);  } else {
              return itemsBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
           */
          public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchaseOrBuilder> 
               getItemsOrBuilderList() {
            if (itemsBuilder_ != null) {
              return itemsBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(items_);
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase.Builder addItemsBuilder() {
            return getItemsFieldBuilder().addBuilder(
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase.getDefaultInstance());
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase.Builder addItemsBuilder(
              int index) {
            return getItemsFieldBuilder().addBuilder(
                index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase.getDefaultInstance());
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.ItemPurchase items = 6;</code>
           */
          public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase.Builder> 
               getItemsBuilderList() {
            return getItemsFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchaseOrBuilder> 
              getItemsFieldBuilder() {
            if (itemsBuilder_ == null) {
              itemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchase.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.ItemPurchaseOrBuilder>(
                      items_,
                      ((bitField0_ & 0x00000020) == 0x00000020),
                      getParentForChildren(),
                      isClean());
              items_ = null;
            }
            return itemsBuilder_;
          }

          private int avgKillsX16_ ;
          /**
           * <code>optional uint32 avg_kills_x16 = 7;</code>
           */
          public boolean hasAvgKillsX16() {
            return ((bitField0_ & 0x00000040) == 0x00000040);
          }
          /**
           * <code>optional uint32 avg_kills_x16 = 7;</code>
           */
          public int getAvgKillsX16() {
            return avgKillsX16_;
          }
          /**
           * <code>optional uint32 avg_kills_x16 = 7;</code>
           */
          public Builder setAvgKillsX16(int value) {
            bitField0_ |= 0x00000040;
            avgKillsX16_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 avg_kills_x16 = 7;</code>
           */
          public Builder clearAvgKillsX16() {
            bitField0_ = (bitField0_ & ~0x00000040);
            avgKillsX16_ = 0;
            onChanged();
            return this;
          }

          private int avgDeathsX16_ ;
          /**
           * <code>optional uint32 avg_deaths_x16 = 8;</code>
           */
          public boolean hasAvgDeathsX16() {
            return ((bitField0_ & 0x00000080) == 0x00000080);
          }
          /**
           * <code>optional uint32 avg_deaths_x16 = 8;</code>
           */
          public int getAvgDeathsX16() {
            return avgDeathsX16_;
          }
          /**
           * <code>optional uint32 avg_deaths_x16 = 8;</code>
           */
          public Builder setAvgDeathsX16(int value) {
            bitField0_ |= 0x00000080;
            avgDeathsX16_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 avg_deaths_x16 = 8;</code>
           */
          public Builder clearAvgDeathsX16() {
            bitField0_ = (bitField0_ & ~0x00000080);
            avgDeathsX16_ = 0;
            onChanged();
            return this;
          }

          private int avgAssistsX16_ ;
          /**
           * <code>optional uint32 avg_assists_x16 = 9;</code>
           */
          public boolean hasAvgAssistsX16() {
            return ((bitField0_ & 0x00000100) == 0x00000100);
          }
          /**
           * <code>optional uint32 avg_assists_x16 = 9;</code>
           */
          public int getAvgAssistsX16() {
            return avgAssistsX16_;
          }
          /**
           * <code>optional uint32 avg_assists_x16 = 9;</code>
           */
          public Builder setAvgAssistsX16(int value) {
            bitField0_ |= 0x00000100;
            avgAssistsX16_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 avg_assists_x16 = 9;</code>
           */
          public Builder clearAvgAssistsX16() {
            bitField0_ = (bitField0_ & ~0x00000100);
            avgAssistsX16_ = 0;
            onChanged();
            return this;
          }

          private int avgGpmX16_ ;
          /**
           * <code>optional uint32 avg_gpm_x16 = 10;</code>
           */
          public boolean hasAvgGpmX16() {
            return ((bitField0_ & 0x00000200) == 0x00000200);
          }
          /**
           * <code>optional uint32 avg_gpm_x16 = 10;</code>
           */
          public int getAvgGpmX16() {
            return avgGpmX16_;
          }
          /**
           * <code>optional uint32 avg_gpm_x16 = 10;</code>
           */
          public Builder setAvgGpmX16(int value) {
            bitField0_ |= 0x00000200;
            avgGpmX16_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 avg_gpm_x16 = 10;</code>
           */
          public Builder clearAvgGpmX16() {
            bitField0_ = (bitField0_ & ~0x00000200);
            avgGpmX16_ = 0;
            onChanged();
            return this;
          }

          private int avgXpmX16_ ;
          /**
           * <code>optional uint32 avg_xpm_x16 = 11;</code>
           */
          public boolean hasAvgXpmX16() {
            return ((bitField0_ & 0x00000400) == 0x00000400);
          }
          /**
           * <code>optional uint32 avg_xpm_x16 = 11;</code>
           */
          public int getAvgXpmX16() {
            return avgXpmX16_;
          }
          /**
           * <code>optional uint32 avg_xpm_x16 = 11;</code>
           */
          public Builder setAvgXpmX16(int value) {
            bitField0_ |= 0x00000400;
            avgXpmX16_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 avg_xpm_x16 = 11;</code>
           */
          public Builder clearAvgXpmX16() {
            bitField0_ = (bitField0_ & ~0x00000400);
            avgXpmX16_ = 0;
            onChanged();
            return this;
          }

          private int bestKillsX16_ ;
          /**
           * <code>optional uint32 best_kills_x16 = 12;</code>
           */
          public boolean hasBestKillsX16() {
            return ((bitField0_ & 0x00000800) == 0x00000800);
          }
          /**
           * <code>optional uint32 best_kills_x16 = 12;</code>
           */
          public int getBestKillsX16() {
            return bestKillsX16_;
          }
          /**
           * <code>optional uint32 best_kills_x16 = 12;</code>
           */
          public Builder setBestKillsX16(int value) {
            bitField0_ |= 0x00000800;
            bestKillsX16_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 best_kills_x16 = 12;</code>
           */
          public Builder clearBestKillsX16() {
            bitField0_ = (bitField0_ & ~0x00000800);
            bestKillsX16_ = 0;
            onChanged();
            return this;
          }

          private int bestAssistsX16_ ;
          /**
           * <code>optional uint32 best_assists_x16 = 13;</code>
           */
          public boolean hasBestAssistsX16() {
            return ((bitField0_ & 0x00001000) == 0x00001000);
          }
          /**
           * <code>optional uint32 best_assists_x16 = 13;</code>
           */
          public int getBestAssistsX16() {
            return bestAssistsX16_;
          }
          /**
           * <code>optional uint32 best_assists_x16 = 13;</code>
           */
          public Builder setBestAssistsX16(int value) {
            bitField0_ |= 0x00001000;
            bestAssistsX16_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 best_assists_x16 = 13;</code>
           */
          public Builder clearBestAssistsX16() {
            bitField0_ = (bitField0_ & ~0x00001000);
            bestAssistsX16_ = 0;
            onChanged();
            return this;
          }

          private int bestGpmX16_ ;
          /**
           * <code>optional uint32 best_gpm_x16 = 14;</code>
           */
          public boolean hasBestGpmX16() {
            return ((bitField0_ & 0x00002000) == 0x00002000);
          }
          /**
           * <code>optional uint32 best_gpm_x16 = 14;</code>
           */
          public int getBestGpmX16() {
            return bestGpmX16_;
          }
          /**
           * <code>optional uint32 best_gpm_x16 = 14;</code>
           */
          public Builder setBestGpmX16(int value) {
            bitField0_ |= 0x00002000;
            bestGpmX16_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 best_gpm_x16 = 14;</code>
           */
          public Builder clearBestGpmX16() {
            bitField0_ = (bitField0_ & ~0x00002000);
            bestGpmX16_ = 0;
            onChanged();
            return this;
          }

          private int bestXpmX16_ ;
          /**
           * <code>optional uint32 best_xpm_x16 = 15;</code>
           */
          public boolean hasBestXpmX16() {
            return ((bitField0_ & 0x00004000) == 0x00004000);
          }
          /**
           * <code>optional uint32 best_xpm_x16 = 15;</code>
           */
          public int getBestXpmX16() {
            return bestXpmX16_;
          }
          /**
           * <code>optional uint32 best_xpm_x16 = 15;</code>
           */
          public Builder setBestXpmX16(int value) {
            bitField0_ |= 0x00004000;
            bestXpmX16_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 best_xpm_x16 = 15;</code>
           */
          public Builder clearBestXpmX16() {
            bitField0_ = (bitField0_ & ~0x00004000);
            bestXpmX16_ = 0;
            onChanged();
            return this;
          }

          private int winStreak_ ;
          /**
           * <code>optional uint32 win_streak = 16;</code>
           */
          public boolean hasWinStreak() {
            return ((bitField0_ & 0x00008000) == 0x00008000);
          }
          /**
           * <code>optional uint32 win_streak = 16;</code>
           */
          public int getWinStreak() {
            return winStreak_;
          }
          /**
           * <code>optional uint32 win_streak = 16;</code>
           */
          public Builder setWinStreak(int value) {
            bitField0_ |= 0x00008000;
            winStreak_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 win_streak = 16;</code>
           */
          public Builder clearWinStreak() {
            bitField0_ = (bitField0_ & ~0x00008000);
            winStreak_ = 0;
            onChanged();
            return this;
          }

          private int bestWinStreak_ ;
          /**
           * <code>optional uint32 best_win_streak = 17;</code>
           */
          public boolean hasBestWinStreak() {
            return ((bitField0_ & 0x00010000) == 0x00010000);
          }
          /**
           * <code>optional uint32 best_win_streak = 17;</code>
           */
          public int getBestWinStreak() {
            return bestWinStreak_;
          }
          /**
           * <code>optional uint32 best_win_streak = 17;</code>
           */
          public Builder setBestWinStreak(int value) {
            bitField0_ |= 0x00010000;
            bestWinStreak_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 best_win_streak = 17;</code>
           */
          public Builder clearBestWinStreak() {
            bitField0_ = (bitField0_ & ~0x00010000);
            bestWinStreak_ = 0;
            onChanged();
            return this;
          }

          private float fightScore_ ;
          /**
           * <code>optional float fight_score = 18;</code>
           */
          public boolean hasFightScore() {
            return ((bitField0_ & 0x00020000) == 0x00020000);
          }
          /**
           * <code>optional float fight_score = 18;</code>
           */
          public float getFightScore() {
            return fightScore_;
          }
          /**
           * <code>optional float fight_score = 18;</code>
           */
          public Builder setFightScore(float value) {
            bitField0_ |= 0x00020000;
            fightScore_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float fight_score = 18;</code>
           */
          public Builder clearFightScore() {
            bitField0_ = (bitField0_ & ~0x00020000);
            fightScore_ = 0F;
            onChanged();
            return this;
          }

          private float farmScore_ ;
          /**
           * <code>optional float farm_score = 19;</code>
           */
          public boolean hasFarmScore() {
            return ((bitField0_ & 0x00040000) == 0x00040000);
          }
          /**
           * <code>optional float farm_score = 19;</code>
           */
          public float getFarmScore() {
            return farmScore_;
          }
          /**
           * <code>optional float farm_score = 19;</code>
           */
          public Builder setFarmScore(float value) {
            bitField0_ |= 0x00040000;
            farmScore_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float farm_score = 19;</code>
           */
          public Builder clearFarmScore() {
            bitField0_ = (bitField0_ & ~0x00040000);
            farmScore_ = 0F;
            onChanged();
            return this;
          }

          private float supportScore_ ;
          /**
           * <code>optional float support_score = 20;</code>
           */
          public boolean hasSupportScore() {
            return ((bitField0_ & 0x00080000) == 0x00080000);
          }
          /**
           * <code>optional float support_score = 20;</code>
           */
          public float getSupportScore() {
            return supportScore_;
          }
          /**
           * <code>optional float support_score = 20;</code>
           */
          public Builder setSupportScore(float value) {
            bitField0_ |= 0x00080000;
            supportScore_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float support_score = 20;</code>
           */
          public Builder clearSupportScore() {
            bitField0_ = (bitField0_ & ~0x00080000);
            supportScore_ = 0F;
            onChanged();
            return this;
          }

          private float pushScore_ ;
          /**
           * <code>optional float push_score = 21;</code>
           */
          public boolean hasPushScore() {
            return ((bitField0_ & 0x00100000) == 0x00100000);
          }
          /**
           * <code>optional float push_score = 21;</code>
           */
          public float getPushScore() {
            return pushScore_;
          }
          /**
           * <code>optional float push_score = 21;</code>
           */
          public Builder setPushScore(float value) {
            bitField0_ |= 0x00100000;
            pushScore_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float push_score = 21;</code>
           */
          public Builder clearPushScore() {
            bitField0_ = (bitField0_ & ~0x00100000);
            pushScore_ = 0F;
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Integer> levelUpTimes_ = java.util.Collections.emptyList();
          private void ensureLevelUpTimesIsMutable() {
            if (!((bitField0_ & 0x00200000) == 0x00200000)) {
              levelUpTimes_ = new java.util.ArrayList<java.lang.Integer>(levelUpTimes_);
              bitField0_ |= 0x00200000;
             }
          }
          /**
           * <code>repeated uint32 level_up_times = 22;</code>
           */
          public java.util.List<java.lang.Integer>
              getLevelUpTimesList() {
            return java.util.Collections.unmodifiableList(levelUpTimes_);
          }
          /**
           * <code>repeated uint32 level_up_times = 22;</code>
           */
          public int getLevelUpTimesCount() {
            return levelUpTimes_.size();
          }
          /**
           * <code>repeated uint32 level_up_times = 22;</code>
           */
          public int getLevelUpTimes(int index) {
            return levelUpTimes_.get(index);
          }
          /**
           * <code>repeated uint32 level_up_times = 22;</code>
           */
          public Builder setLevelUpTimes(
              int index, int value) {
            ensureLevelUpTimesIsMutable();
            levelUpTimes_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated uint32 level_up_times = 22;</code>
           */
          public Builder addLevelUpTimes(int value) {
            ensureLevelUpTimesIsMutable();
            levelUpTimes_.add(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated uint32 level_up_times = 22;</code>
           */
          public Builder addAllLevelUpTimes(
              java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureLevelUpTimesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, levelUpTimes_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated uint32 level_up_times = 22;</code>
           */
          public Builder clearLevelUpTimes() {
            levelUpTimes_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00200000);
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Float> graphNetWorth_ = java.util.Collections.emptyList();
          private void ensureGraphNetWorthIsMutable() {
            if (!((bitField0_ & 0x00400000) == 0x00400000)) {
              graphNetWorth_ = new java.util.ArrayList<java.lang.Float>(graphNetWorth_);
              bitField0_ |= 0x00400000;
             }
          }
          /**
           * <code>repeated float graph_net_worth = 23;</code>
           */
          public java.util.List<java.lang.Float>
              getGraphNetWorthList() {
            return java.util.Collections.unmodifiableList(graphNetWorth_);
          }
          /**
           * <code>repeated float graph_net_worth = 23;</code>
           */
          public int getGraphNetWorthCount() {
            return graphNetWorth_.size();
          }
          /**
           * <code>repeated float graph_net_worth = 23;</code>
           */
          public float getGraphNetWorth(int index) {
            return graphNetWorth_.get(index);
          }
          /**
           * <code>repeated float graph_net_worth = 23;</code>
           */
          public Builder setGraphNetWorth(
              int index, float value) {
            ensureGraphNetWorthIsMutable();
            graphNetWorth_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float graph_net_worth = 23;</code>
           */
          public Builder addGraphNetWorth(float value) {
            ensureGraphNetWorthIsMutable();
            graphNetWorth_.add(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float graph_net_worth = 23;</code>
           */
          public Builder addAllGraphNetWorth(
              java.lang.Iterable<? extends java.lang.Float> values) {
            ensureGraphNetWorthIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, graphNetWorth_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float graph_net_worth = 23;</code>
           */
          public Builder clearGraphNetWorth() {
            graphNetWorth_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00400000);
            onChanged();
            return this;
          }

          private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot> inventorySnapshot_ =
            java.util.Collections.emptyList();
          private void ensureInventorySnapshotIsMutable() {
            if (!((bitField0_ & 0x00800000) == 0x00800000)) {
              inventorySnapshot_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot>(inventorySnapshot_);
              bitField0_ |= 0x00800000;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshotOrBuilder> inventorySnapshotBuilder_;

          /**
           * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
           */
          public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot> getInventorySnapshotList() {
            if (inventorySnapshotBuilder_ == null) {
              return java.util.Collections.unmodifiableList(inventorySnapshot_);
            } else {
              return inventorySnapshotBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
           */
          public int getInventorySnapshotCount() {
            if (inventorySnapshotBuilder_ == null) {
              return inventorySnapshot_.size();
            } else {
              return inventorySnapshotBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot getInventorySnapshot(int index) {
            if (inventorySnapshotBuilder_ == null) {
              return inventorySnapshot_.get(index);
            } else {
              return inventorySnapshotBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
           */
          public Builder setInventorySnapshot(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot value) {
            if (inventorySnapshotBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureInventorySnapshotIsMutable();
              inventorySnapshot_.set(index, value);
              onChanged();
            } else {
              inventorySnapshotBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
           */
          public Builder setInventorySnapshot(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot.Builder builderForValue) {
            if (inventorySnapshotBuilder_ == null) {
              ensureInventorySnapshotIsMutable();
              inventorySnapshot_.set(index, builderForValue.build());
              onChanged();
            } else {
              inventorySnapshotBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
           */
          public Builder addInventorySnapshot(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot value) {
            if (inventorySnapshotBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureInventorySnapshotIsMutable();
              inventorySnapshot_.add(value);
              onChanged();
            } else {
              inventorySnapshotBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
           */
          public Builder addInventorySnapshot(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot value) {
            if (inventorySnapshotBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureInventorySnapshotIsMutable();
              inventorySnapshot_.add(index, value);
              onChanged();
            } else {
              inventorySnapshotBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
           */
          public Builder addInventorySnapshot(
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot.Builder builderForValue) {
            if (inventorySnapshotBuilder_ == null) {
              ensureInventorySnapshotIsMutable();
              inventorySnapshot_.add(builderForValue.build());
              onChanged();
            } else {
              inventorySnapshotBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
           */
          public Builder addInventorySnapshot(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot.Builder builderForValue) {
            if (inventorySnapshotBuilder_ == null) {
              ensureInventorySnapshotIsMutable();
              inventorySnapshot_.add(index, builderForValue.build());
              onChanged();
            } else {
              inventorySnapshotBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
           */
          public Builder addAllInventorySnapshot(
              java.lang.Iterable<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot> values) {
            if (inventorySnapshotBuilder_ == null) {
              ensureInventorySnapshotIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, inventorySnapshot_);
              onChanged();
            } else {
              inventorySnapshotBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
           */
          public Builder clearInventorySnapshot() {
            if (inventorySnapshotBuilder_ == null) {
              inventorySnapshot_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00800000);
              onChanged();
            } else {
              inventorySnapshotBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
           */
          public Builder removeInventorySnapshot(int index) {
            if (inventorySnapshotBuilder_ == null) {
              ensureInventorySnapshotIsMutable();
              inventorySnapshot_.remove(index);
              onChanged();
            } else {
              inventorySnapshotBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot.Builder getInventorySnapshotBuilder(
              int index) {
            return getInventorySnapshotFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshotOrBuilder getInventorySnapshotOrBuilder(
              int index) {
            if (inventorySnapshotBuilder_ == null) {
              return inventorySnapshot_.get(index);  } else {
              return inventorySnapshotBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
           */
          public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshotOrBuilder> 
               getInventorySnapshotOrBuilderList() {
            if (inventorySnapshotBuilder_ != null) {
              return inventorySnapshotBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(inventorySnapshot_);
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot.Builder addInventorySnapshotBuilder() {
            return getInventorySnapshotFieldBuilder().addBuilder(
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot.getDefaultInstance());
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot.Builder addInventorySnapshotBuilder(
              int index) {
            return getInventorySnapshotFieldBuilder().addBuilder(
                index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot.getDefaultInstance());
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.InventorySnapshot inventory_snapshot = 24;</code>
           */
          public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot.Builder> 
               getInventorySnapshotBuilderList() {
            return getInventorySnapshotFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshotOrBuilder> 
              getInventorySnapshotFieldBuilder() {
            if (inventorySnapshotBuilder_ == null) {
              inventorySnapshotBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshot.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.InventorySnapshotOrBuilder>(
                      inventorySnapshot_,
                      ((bitField0_ & 0x00800000) == 0x00800000),
                      getParentForChildren(),
                      isClean());
              inventorySnapshot_ = null;
            }
            return inventorySnapshotBuilder_;
          }

          private boolean avgStatsCalibrated_ ;
          /**
           * <code>optional bool avg_stats_calibrated = 25;</code>
           */
          public boolean hasAvgStatsCalibrated() {
            return ((bitField0_ & 0x01000000) == 0x01000000);
          }
          /**
           * <code>optional bool avg_stats_calibrated = 25;</code>
           */
          public boolean getAvgStatsCalibrated() {
            return avgStatsCalibrated_;
          }
          /**
           * <code>optional bool avg_stats_calibrated = 25;</code>
           */
          public Builder setAvgStatsCalibrated(boolean value) {
            bitField0_ |= 0x01000000;
            avgStatsCalibrated_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool avg_stats_calibrated = 25;</code>
           */
          public Builder clearAvgStatsCalibrated() {
            bitField0_ = (bitField0_ & ~0x01000000);
            avgStatsCalibrated_ = false;
            onChanged();
            return this;
          }

          private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria> autoStyleCriteria_ =
            java.util.Collections.emptyList();
          private void ensureAutoStyleCriteriaIsMutable() {
            if (!((bitField0_ & 0x02000000) == 0x02000000)) {
              autoStyleCriteria_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria>(autoStyleCriteria_);
              bitField0_ |= 0x02000000;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteriaOrBuilder> autoStyleCriteriaBuilder_;

          /**
           * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
           */
          public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria> getAutoStyleCriteriaList() {
            if (autoStyleCriteriaBuilder_ == null) {
              return java.util.Collections.unmodifiableList(autoStyleCriteria_);
            } else {
              return autoStyleCriteriaBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
           */
          public int getAutoStyleCriteriaCount() {
            if (autoStyleCriteriaBuilder_ == null) {
              return autoStyleCriteria_.size();
            } else {
              return autoStyleCriteriaBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria getAutoStyleCriteria(int index) {
            if (autoStyleCriteriaBuilder_ == null) {
              return autoStyleCriteria_.get(index);
            } else {
              return autoStyleCriteriaBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
           */
          public Builder setAutoStyleCriteria(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria value) {
            if (autoStyleCriteriaBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureAutoStyleCriteriaIsMutable();
              autoStyleCriteria_.set(index, value);
              onChanged();
            } else {
              autoStyleCriteriaBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
           */
          public Builder setAutoStyleCriteria(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria.Builder builderForValue) {
            if (autoStyleCriteriaBuilder_ == null) {
              ensureAutoStyleCriteriaIsMutable();
              autoStyleCriteria_.set(index, builderForValue.build());
              onChanged();
            } else {
              autoStyleCriteriaBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
           */
          public Builder addAutoStyleCriteria(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria value) {
            if (autoStyleCriteriaBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureAutoStyleCriteriaIsMutable();
              autoStyleCriteria_.add(value);
              onChanged();
            } else {
              autoStyleCriteriaBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
           */
          public Builder addAutoStyleCriteria(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria value) {
            if (autoStyleCriteriaBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureAutoStyleCriteriaIsMutable();
              autoStyleCriteria_.add(index, value);
              onChanged();
            } else {
              autoStyleCriteriaBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
           */
          public Builder addAutoStyleCriteria(
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria.Builder builderForValue) {
            if (autoStyleCriteriaBuilder_ == null) {
              ensureAutoStyleCriteriaIsMutable();
              autoStyleCriteria_.add(builderForValue.build());
              onChanged();
            } else {
              autoStyleCriteriaBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
           */
          public Builder addAutoStyleCriteria(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria.Builder builderForValue) {
            if (autoStyleCriteriaBuilder_ == null) {
              ensureAutoStyleCriteriaIsMutable();
              autoStyleCriteria_.add(index, builderForValue.build());
              onChanged();
            } else {
              autoStyleCriteriaBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
           */
          public Builder addAllAutoStyleCriteria(
              java.lang.Iterable<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria> values) {
            if (autoStyleCriteriaBuilder_ == null) {
              ensureAutoStyleCriteriaIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, autoStyleCriteria_);
              onChanged();
            } else {
              autoStyleCriteriaBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
           */
          public Builder clearAutoStyleCriteria() {
            if (autoStyleCriteriaBuilder_ == null) {
              autoStyleCriteria_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x02000000);
              onChanged();
            } else {
              autoStyleCriteriaBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
           */
          public Builder removeAutoStyleCriteria(int index) {
            if (autoStyleCriteriaBuilder_ == null) {
              ensureAutoStyleCriteriaIsMutable();
              autoStyleCriteria_.remove(index);
              onChanged();
            } else {
              autoStyleCriteriaBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria.Builder getAutoStyleCriteriaBuilder(
              int index) {
            return getAutoStyleCriteriaFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteriaOrBuilder getAutoStyleCriteriaOrBuilder(
              int index) {
            if (autoStyleCriteriaBuilder_ == null) {
              return autoStyleCriteria_.get(index);  } else {
              return autoStyleCriteriaBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
           */
          public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteriaOrBuilder> 
               getAutoStyleCriteriaOrBuilderList() {
            if (autoStyleCriteriaBuilder_ != null) {
              return autoStyleCriteriaBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(autoStyleCriteria_);
            }
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria.Builder addAutoStyleCriteriaBuilder() {
            return getAutoStyleCriteriaFieldBuilder().addBuilder(
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria.getDefaultInstance());
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria.Builder addAutoStyleCriteriaBuilder(
              int index) {
            return getAutoStyleCriteriaFieldBuilder().addBuilder(
                index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria.getDefaultInstance());
          }
          /**
           * <code>repeated .CDOTAMatchMetadata.Team.AutoStyleCriteria auto_style_criteria = 26;</code>
           */
          public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria.Builder> 
               getAutoStyleCriteriaBuilderList() {
            return getAutoStyleCriteriaFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteriaOrBuilder> 
              getAutoStyleCriteriaFieldBuilder() {
            if (autoStyleCriteriaBuilder_ == null) {
              autoStyleCriteriaBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteria.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.AutoStyleCriteriaOrBuilder>(
                      autoStyleCriteria_,
                      ((bitField0_ & 0x02000000) == 0x02000000),
                      getParentForChildren(),
                      isClean());
              autoStyleCriteria_ = null;
            }
            return autoStyleCriteriaBuilder_;
          }

          private int eventId_ ;
          /**
           * <code>optional uint32 event_id = 27;</code>
           */
          public boolean hasEventId() {
            return ((bitField0_ & 0x04000000) == 0x04000000);
          }
          /**
           * <code>optional uint32 event_id = 27;</code>
           */
          public int getEventId() {
            return eventId_;
          }
          /**
           * <code>optional uint32 event_id = 27;</code>
           */
          public Builder setEventId(int value) {
            bitField0_ |= 0x04000000;
            eventId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 event_id = 27;</code>
           */
          public Builder clearEventId() {
            bitField0_ = (bitField0_ & ~0x04000000);
            eventId_ = 0;
            onChanged();
            return this;
          }

          private int eventPoints_ ;
          /**
           * <code>optional uint32 event_points = 28;</code>
           */
          public boolean hasEventPoints() {
            return ((bitField0_ & 0x08000000) == 0x08000000);
          }
          /**
           * <code>optional uint32 event_points = 28;</code>
           */
          public int getEventPoints() {
            return eventPoints_;
          }
          /**
           * <code>optional uint32 event_points = 28;</code>
           */
          public Builder setEventPoints(int value) {
            bitField0_ |= 0x08000000;
            eventPoints_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 event_points = 28;</code>
           */
          public Builder clearEventPoints() {
            bitField0_ = (bitField0_ & ~0x08000000);
            eventPoints_ = 0;
            onChanged();
            return this;
          }

          private int campsStacked_ ;
          /**
           * <code>optional uint32 camps_stacked = 32;</code>
           */
          public boolean hasCampsStacked() {
            return ((bitField0_ & 0x10000000) == 0x10000000);
          }
          /**
           * <code>optional uint32 camps_stacked = 32;</code>
           */
          public int getCampsStacked() {
            return campsStacked_;
          }
          /**
           * <code>optional uint32 camps_stacked = 32;</code>
           */
          public Builder setCampsStacked(int value) {
            bitField0_ |= 0x10000000;
            campsStacked_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 camps_stacked = 32;</code>
           */
          public Builder clearCampsStacked() {
            bitField0_ = (bitField0_ & ~0x10000000);
            campsStacked_ = 0;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:CDOTAMatchMetadata.Team.Player)
        }

        static {
          defaultInstance = new Player(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:CDOTAMatchMetadata.Team.Player)
      }

      private int bitField0_;
      public static final int DOTA_TEAM_FIELD_NUMBER = 1;
      private int dotaTeam_;
      /**
       * <code>optional uint32 dota_team = 1;</code>
       */
      public boolean hasDotaTeam() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 dota_team = 1;</code>
       */
      public int getDotaTeam() {
        return dotaTeam_;
      }

      public static final int PLAYERS_FIELD_NUMBER = 2;
      private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player> players_;
      /**
       * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player> getPlayersList() {
        return players_;
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerOrBuilder> 
          getPlayersOrBuilderList() {
        return players_;
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
       */
      public int getPlayersCount() {
        return players_.size();
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player getPlayers(int index) {
        return players_.get(index);
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerOrBuilder getPlayersOrBuilder(
          int index) {
        return players_.get(index);
      }

      public static final int GRAPH_EXPERIENCE_FIELD_NUMBER = 3;
      private java.util.List<java.lang.Float> graphExperience_;
      /**
       * <code>repeated float graph_experience = 3;</code>
       */
      public java.util.List<java.lang.Float>
          getGraphExperienceList() {
        return graphExperience_;
      }
      /**
       * <code>repeated float graph_experience = 3;</code>
       */
      public int getGraphExperienceCount() {
        return graphExperience_.size();
      }
      /**
       * <code>repeated float graph_experience = 3;</code>
       */
      public float getGraphExperience(int index) {
        return graphExperience_.get(index);
      }

      public static final int GRAPH_GOLD_EARNED_FIELD_NUMBER = 4;
      private java.util.List<java.lang.Float> graphGoldEarned_;
      /**
       * <code>repeated float graph_gold_earned = 4;</code>
       */
      public java.util.List<java.lang.Float>
          getGraphGoldEarnedList() {
        return graphGoldEarned_;
      }
      /**
       * <code>repeated float graph_gold_earned = 4;</code>
       */
      public int getGraphGoldEarnedCount() {
        return graphGoldEarned_.size();
      }
      /**
       * <code>repeated float graph_gold_earned = 4;</code>
       */
      public float getGraphGoldEarned(int index) {
        return graphGoldEarned_.get(index);
      }

      public static final int GRAPH_NET_WORTH_FIELD_NUMBER = 5;
      private java.util.List<java.lang.Float> graphNetWorth_;
      /**
       * <code>repeated float graph_net_worth = 5;</code>
       */
      public java.util.List<java.lang.Float>
          getGraphNetWorthList() {
        return graphNetWorth_;
      }
      /**
       * <code>repeated float graph_net_worth = 5;</code>
       */
      public int getGraphNetWorthCount() {
        return graphNetWorth_.size();
      }
      /**
       * <code>repeated float graph_net_worth = 5;</code>
       */
      public float getGraphNetWorth(int index) {
        return graphNetWorth_.get(index);
      }

      public static final int CM_FIRST_PICK_FIELD_NUMBER = 6;
      private boolean cmFirstPick_;
      /**
       * <code>optional bool cm_first_pick = 6;</code>
       */
      public boolean hasCmFirstPick() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool cm_first_pick = 6;</code>
       */
      public boolean getCmFirstPick() {
        return cmFirstPick_;
      }

      public static final int CM_CAPTAIN_PLAYER_ID_FIELD_NUMBER = 7;
      private int cmCaptainPlayerId_;
      /**
       * <code>optional uint32 cm_captain_player_id = 7;</code>
       */
      public boolean hasCmCaptainPlayerId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 cm_captain_player_id = 7;</code>
       */
      public int getCmCaptainPlayerId() {
        return cmCaptainPlayerId_;
      }

      public static final int CM_BANS_FIELD_NUMBER = 8;
      private java.util.List<java.lang.Integer> cmBans_;
      /**
       * <code>repeated uint32 cm_bans = 8;</code>
       */
      public java.util.List<java.lang.Integer>
          getCmBansList() {
        return cmBans_;
      }
      /**
       * <code>repeated uint32 cm_bans = 8;</code>
       */
      public int getCmBansCount() {
        return cmBans_.size();
      }
      /**
       * <code>repeated uint32 cm_bans = 8;</code>
       */
      public int getCmBans(int index) {
        return cmBans_.get(index);
      }

      public static final int CM_PICKS_FIELD_NUMBER = 9;
      private java.util.List<java.lang.Integer> cmPicks_;
      /**
       * <code>repeated uint32 cm_picks = 9;</code>
       */
      public java.util.List<java.lang.Integer>
          getCmPicksList() {
        return cmPicks_;
      }
      /**
       * <code>repeated uint32 cm_picks = 9;</code>
       */
      public int getCmPicksCount() {
        return cmPicks_.size();
      }
      /**
       * <code>repeated uint32 cm_picks = 9;</code>
       */
      public int getCmPicks(int index) {
        return cmPicks_.get(index);
      }

      public static final int CM_PENALTY_FIELD_NUMBER = 10;
      private int cmPenalty_;
      /**
       * <code>optional uint32 cm_penalty = 10;</code>
       */
      public boolean hasCmPenalty() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 cm_penalty = 10;</code>
       */
      public int getCmPenalty() {
        return cmPenalty_;
      }

      private void initFields() {
        dotaTeam_ = 0;
        players_ = java.util.Collections.emptyList();
        graphExperience_ = java.util.Collections.emptyList();
        graphGoldEarned_ = java.util.Collections.emptyList();
        graphNetWorth_ = java.util.Collections.emptyList();
        cmFirstPick_ = false;
        cmCaptainPlayerId_ = 0;
        cmBans_ = java.util.Collections.emptyList();
        cmPicks_ = java.util.Collections.emptyList();
        cmPenalty_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, dotaTeam_);
        }
        for (int i = 0; i < players_.size(); i++) {
          output.writeMessage(2, players_.get(i));
        }
        for (int i = 0; i < graphExperience_.size(); i++) {
          output.writeFloat(3, graphExperience_.get(i));
        }
        for (int i = 0; i < graphGoldEarned_.size(); i++) {
          output.writeFloat(4, graphGoldEarned_.get(i));
        }
        for (int i = 0; i < graphNetWorth_.size(); i++) {
          output.writeFloat(5, graphNetWorth_.get(i));
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(6, cmFirstPick_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(7, cmCaptainPlayerId_);
        }
        for (int i = 0; i < cmBans_.size(); i++) {
          output.writeUInt32(8, cmBans_.get(i));
        }
        for (int i = 0; i < cmPicks_.size(); i++) {
          output.writeUInt32(9, cmPicks_.get(i));
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(10, cmPenalty_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, dotaTeam_);
        }
        for (int i = 0; i < players_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, players_.get(i));
        }
        {
          int dataSize = 0;
          dataSize = 4 * getGraphExperienceList().size();
          size += dataSize;
          size += 1 * getGraphExperienceList().size();
        }
        {
          int dataSize = 0;
          dataSize = 4 * getGraphGoldEarnedList().size();
          size += dataSize;
          size += 1 * getGraphGoldEarnedList().size();
        }
        {
          int dataSize = 0;
          dataSize = 4 * getGraphNetWorthList().size();
          size += dataSize;
          size += 1 * getGraphNetWorthList().size();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, cmFirstPick_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, cmCaptainPlayerId_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < cmBans_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(cmBans_.get(i));
          }
          size += dataSize;
          size += 1 * getCmBansList().size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < cmPicks_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(cmPicks_.get(i));
          }
          size += dataSize;
          size += 1 * getCmPicksList().size();
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(10, cmPenalty_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAMatchMetadata.Team}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAMatchMetadata.Team)
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.TeamOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder.class);
        }

        // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPlayersFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          dotaTeam_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (playersBuilder_ == null) {
            players_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            playersBuilder_.clear();
          }
          graphExperience_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          graphGoldEarned_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          graphNetWorth_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          cmFirstPick_ = false;
          bitField0_ = (bitField0_ & ~0x00000020);
          cmCaptainPlayerId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          cmBans_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          cmPicks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          cmPenalty_ = 0;
          bitField0_ = (bitField0_ & ~0x00000200);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_Team_descriptor;
        }

        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team getDefaultInstanceForType() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.getDefaultInstance();
        }

        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team build() {
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team buildPartial() {
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.dotaTeam_ = dotaTeam_;
          if (playersBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              players_ = java.util.Collections.unmodifiableList(players_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.players_ = players_;
          } else {
            result.players_ = playersBuilder_.build();
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            graphExperience_ = java.util.Collections.unmodifiableList(graphExperience_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.graphExperience_ = graphExperience_;
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            graphGoldEarned_ = java.util.Collections.unmodifiableList(graphGoldEarned_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.graphGoldEarned_ = graphGoldEarned_;
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            graphNetWorth_ = java.util.Collections.unmodifiableList(graphNetWorth_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.graphNetWorth_ = graphNetWorth_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000002;
          }
          result.cmFirstPick_ = cmFirstPick_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000004;
          }
          result.cmCaptainPlayerId_ = cmCaptainPlayerId_;
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            cmBans_ = java.util.Collections.unmodifiableList(cmBans_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.cmBans_ = cmBans_;
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            cmPicks_ = java.util.Collections.unmodifiableList(cmPicks_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.cmPicks_ = cmPicks_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000008;
          }
          result.cmPenalty_ = cmPenalty_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team) {
            return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team other) {
          if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.getDefaultInstance()) return this;
          if (other.hasDotaTeam()) {
            setDotaTeam(other.getDotaTeam());
          }
          if (playersBuilder_ == null) {
            if (!other.players_.isEmpty()) {
              if (players_.isEmpty()) {
                players_ = other.players_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensurePlayersIsMutable();
                players_.addAll(other.players_);
              }
              onChanged();
            }
          } else {
            if (!other.players_.isEmpty()) {
              if (playersBuilder_.isEmpty()) {
                playersBuilder_.dispose();
                playersBuilder_ = null;
                players_ = other.players_;
                bitField0_ = (bitField0_ & ~0x00000002);
                playersBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getPlayersFieldBuilder() : null;
              } else {
                playersBuilder_.addAllMessages(other.players_);
              }
            }
          }
          if (!other.graphExperience_.isEmpty()) {
            if (graphExperience_.isEmpty()) {
              graphExperience_ = other.graphExperience_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureGraphExperienceIsMutable();
              graphExperience_.addAll(other.graphExperience_);
            }
            onChanged();
          }
          if (!other.graphGoldEarned_.isEmpty()) {
            if (graphGoldEarned_.isEmpty()) {
              graphGoldEarned_ = other.graphGoldEarned_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureGraphGoldEarnedIsMutable();
              graphGoldEarned_.addAll(other.graphGoldEarned_);
            }
            onChanged();
          }
          if (!other.graphNetWorth_.isEmpty()) {
            if (graphNetWorth_.isEmpty()) {
              graphNetWorth_ = other.graphNetWorth_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureGraphNetWorthIsMutable();
              graphNetWorth_.addAll(other.graphNetWorth_);
            }
            onChanged();
          }
          if (other.hasCmFirstPick()) {
            setCmFirstPick(other.getCmFirstPick());
          }
          if (other.hasCmCaptainPlayerId()) {
            setCmCaptainPlayerId(other.getCmCaptainPlayerId());
          }
          if (!other.cmBans_.isEmpty()) {
            if (cmBans_.isEmpty()) {
              cmBans_ = other.cmBans_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureCmBansIsMutable();
              cmBans_.addAll(other.cmBans_);
            }
            onChanged();
          }
          if (!other.cmPicks_.isEmpty()) {
            if (cmPicks_.isEmpty()) {
              cmPicks_ = other.cmPicks_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureCmPicksIsMutable();
              cmPicks_.addAll(other.cmPicks_);
            }
            onChanged();
          }
          if (other.hasCmPenalty()) {
            setCmPenalty(other.getCmPenalty());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int dotaTeam_ ;
        /**
         * <code>optional uint32 dota_team = 1;</code>
         */
        public boolean hasDotaTeam() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 dota_team = 1;</code>
         */
        public int getDotaTeam() {
          return dotaTeam_;
        }
        /**
         * <code>optional uint32 dota_team = 1;</code>
         */
        public Builder setDotaTeam(int value) {
          bitField0_ |= 0x00000001;
          dotaTeam_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 dota_team = 1;</code>
         */
        public Builder clearDotaTeam() {
          bitField0_ = (bitField0_ & ~0x00000001);
          dotaTeam_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player> players_ =
          java.util.Collections.emptyList();
        private void ensurePlayersIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            players_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player>(players_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerOrBuilder> playersBuilder_;

        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player> getPlayersList() {
          if (playersBuilder_ == null) {
            return java.util.Collections.unmodifiableList(players_);
          } else {
            return playersBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public int getPlayersCount() {
          if (playersBuilder_ == null) {
            return players_.size();
          } else {
            return playersBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player getPlayers(int index) {
          if (playersBuilder_ == null) {
            return players_.get(index);
          } else {
            return playersBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public Builder setPlayers(
            int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player value) {
          if (playersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePlayersIsMutable();
            players_.set(index, value);
            onChanged();
          } else {
            playersBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public Builder setPlayers(
            int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder builderForValue) {
          if (playersBuilder_ == null) {
            ensurePlayersIsMutable();
            players_.set(index, builderForValue.build());
            onChanged();
          } else {
            playersBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public Builder addPlayers(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player value) {
          if (playersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePlayersIsMutable();
            players_.add(value);
            onChanged();
          } else {
            playersBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public Builder addPlayers(
            int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player value) {
          if (playersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePlayersIsMutable();
            players_.add(index, value);
            onChanged();
          } else {
            playersBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public Builder addPlayers(
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder builderForValue) {
          if (playersBuilder_ == null) {
            ensurePlayersIsMutable();
            players_.add(builderForValue.build());
            onChanged();
          } else {
            playersBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public Builder addPlayers(
            int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder builderForValue) {
          if (playersBuilder_ == null) {
            ensurePlayersIsMutable();
            players_.add(index, builderForValue.build());
            onChanged();
          } else {
            playersBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public Builder addAllPlayers(
            java.lang.Iterable<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player> values) {
          if (playersBuilder_ == null) {
            ensurePlayersIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, players_);
            onChanged();
          } else {
            playersBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public Builder clearPlayers() {
          if (playersBuilder_ == null) {
            players_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            playersBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public Builder removePlayers(int index) {
          if (playersBuilder_ == null) {
            ensurePlayersIsMutable();
            players_.remove(index);
            onChanged();
          } else {
            playersBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder getPlayersBuilder(
            int index) {
          return getPlayersFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerOrBuilder getPlayersOrBuilder(
            int index) {
          if (playersBuilder_ == null) {
            return players_.get(index);  } else {
            return playersBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerOrBuilder> 
             getPlayersOrBuilderList() {
          if (playersBuilder_ != null) {
            return playersBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(players_);
          }
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder addPlayersBuilder() {
          return getPlayersFieldBuilder().addBuilder(
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.getDefaultInstance());
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder addPlayersBuilder(
            int index) {
          return getPlayersFieldBuilder().addBuilder(
              index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.getDefaultInstance());
        }
        /**
         * <code>repeated .CDOTAMatchMetadata.Team.Player players = 2;</code>
         */
        public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder> 
             getPlayersBuilderList() {
          return getPlayersFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerOrBuilder> 
            getPlayersFieldBuilder() {
          if (playersBuilder_ == null) {
            playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Player.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.PlayerOrBuilder>(
                    players_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            players_ = null;
          }
          return playersBuilder_;
        }

        private java.util.List<java.lang.Float> graphExperience_ = java.util.Collections.emptyList();
        private void ensureGraphExperienceIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            graphExperience_ = new java.util.ArrayList<java.lang.Float>(graphExperience_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <code>repeated float graph_experience = 3;</code>
         */
        public java.util.List<java.lang.Float>
            getGraphExperienceList() {
          return java.util.Collections.unmodifiableList(graphExperience_);
        }
        /**
         * <code>repeated float graph_experience = 3;</code>
         */
        public int getGraphExperienceCount() {
          return graphExperience_.size();
        }
        /**
         * <code>repeated float graph_experience = 3;</code>
         */
        public float getGraphExperience(int index) {
          return graphExperience_.get(index);
        }
        /**
         * <code>repeated float graph_experience = 3;</code>
         */
        public Builder setGraphExperience(
            int index, float value) {
          ensureGraphExperienceIsMutable();
          graphExperience_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float graph_experience = 3;</code>
         */
        public Builder addGraphExperience(float value) {
          ensureGraphExperienceIsMutable();
          graphExperience_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float graph_experience = 3;</code>
         */
        public Builder addAllGraphExperience(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensureGraphExperienceIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, graphExperience_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float graph_experience = 3;</code>
         */
        public Builder clearGraphExperience() {
          graphExperience_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Float> graphGoldEarned_ = java.util.Collections.emptyList();
        private void ensureGraphGoldEarnedIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            graphGoldEarned_ = new java.util.ArrayList<java.lang.Float>(graphGoldEarned_);
            bitField0_ |= 0x00000008;
           }
        }
        /**
         * <code>repeated float graph_gold_earned = 4;</code>
         */
        public java.util.List<java.lang.Float>
            getGraphGoldEarnedList() {
          return java.util.Collections.unmodifiableList(graphGoldEarned_);
        }
        /**
         * <code>repeated float graph_gold_earned = 4;</code>
         */
        public int getGraphGoldEarnedCount() {
          return graphGoldEarned_.size();
        }
        /**
         * <code>repeated float graph_gold_earned = 4;</code>
         */
        public float getGraphGoldEarned(int index) {
          return graphGoldEarned_.get(index);
        }
        /**
         * <code>repeated float graph_gold_earned = 4;</code>
         */
        public Builder setGraphGoldEarned(
            int index, float value) {
          ensureGraphGoldEarnedIsMutable();
          graphGoldEarned_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float graph_gold_earned = 4;</code>
         */
        public Builder addGraphGoldEarned(float value) {
          ensureGraphGoldEarnedIsMutable();
          graphGoldEarned_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float graph_gold_earned = 4;</code>
         */
        public Builder addAllGraphGoldEarned(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensureGraphGoldEarnedIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, graphGoldEarned_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float graph_gold_earned = 4;</code>
         */
        public Builder clearGraphGoldEarned() {
          graphGoldEarned_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Float> graphNetWorth_ = java.util.Collections.emptyList();
        private void ensureGraphNetWorthIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            graphNetWorth_ = new java.util.ArrayList<java.lang.Float>(graphNetWorth_);
            bitField0_ |= 0x00000010;
           }
        }
        /**
         * <code>repeated float graph_net_worth = 5;</code>
         */
        public java.util.List<java.lang.Float>
            getGraphNetWorthList() {
          return java.util.Collections.unmodifiableList(graphNetWorth_);
        }
        /**
         * <code>repeated float graph_net_worth = 5;</code>
         */
        public int getGraphNetWorthCount() {
          return graphNetWorth_.size();
        }
        /**
         * <code>repeated float graph_net_worth = 5;</code>
         */
        public float getGraphNetWorth(int index) {
          return graphNetWorth_.get(index);
        }
        /**
         * <code>repeated float graph_net_worth = 5;</code>
         */
        public Builder setGraphNetWorth(
            int index, float value) {
          ensureGraphNetWorthIsMutable();
          graphNetWorth_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float graph_net_worth = 5;</code>
         */
        public Builder addGraphNetWorth(float value) {
          ensureGraphNetWorthIsMutable();
          graphNetWorth_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float graph_net_worth = 5;</code>
         */
        public Builder addAllGraphNetWorth(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensureGraphNetWorthIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, graphNetWorth_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float graph_net_worth = 5;</code>
         */
        public Builder clearGraphNetWorth() {
          graphNetWorth_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }

        private boolean cmFirstPick_ ;
        /**
         * <code>optional bool cm_first_pick = 6;</code>
         */
        public boolean hasCmFirstPick() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional bool cm_first_pick = 6;</code>
         */
        public boolean getCmFirstPick() {
          return cmFirstPick_;
        }
        /**
         * <code>optional bool cm_first_pick = 6;</code>
         */
        public Builder setCmFirstPick(boolean value) {
          bitField0_ |= 0x00000020;
          cmFirstPick_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool cm_first_pick = 6;</code>
         */
        public Builder clearCmFirstPick() {
          bitField0_ = (bitField0_ & ~0x00000020);
          cmFirstPick_ = false;
          onChanged();
          return this;
        }

        private int cmCaptainPlayerId_ ;
        /**
         * <code>optional uint32 cm_captain_player_id = 7;</code>
         */
        public boolean hasCmCaptainPlayerId() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional uint32 cm_captain_player_id = 7;</code>
         */
        public int getCmCaptainPlayerId() {
          return cmCaptainPlayerId_;
        }
        /**
         * <code>optional uint32 cm_captain_player_id = 7;</code>
         */
        public Builder setCmCaptainPlayerId(int value) {
          bitField0_ |= 0x00000040;
          cmCaptainPlayerId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 cm_captain_player_id = 7;</code>
         */
        public Builder clearCmCaptainPlayerId() {
          bitField0_ = (bitField0_ & ~0x00000040);
          cmCaptainPlayerId_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> cmBans_ = java.util.Collections.emptyList();
        private void ensureCmBansIsMutable() {
          if (!((bitField0_ & 0x00000080) == 0x00000080)) {
            cmBans_ = new java.util.ArrayList<java.lang.Integer>(cmBans_);
            bitField0_ |= 0x00000080;
           }
        }
        /**
         * <code>repeated uint32 cm_bans = 8;</code>
         */
        public java.util.List<java.lang.Integer>
            getCmBansList() {
          return java.util.Collections.unmodifiableList(cmBans_);
        }
        /**
         * <code>repeated uint32 cm_bans = 8;</code>
         */
        public int getCmBansCount() {
          return cmBans_.size();
        }
        /**
         * <code>repeated uint32 cm_bans = 8;</code>
         */
        public int getCmBans(int index) {
          return cmBans_.get(index);
        }
        /**
         * <code>repeated uint32 cm_bans = 8;</code>
         */
        public Builder setCmBans(
            int index, int value) {
          ensureCmBansIsMutable();
          cmBans_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 cm_bans = 8;</code>
         */
        public Builder addCmBans(int value) {
          ensureCmBansIsMutable();
          cmBans_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 cm_bans = 8;</code>
         */
        public Builder addAllCmBans(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureCmBansIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cmBans_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 cm_bans = 8;</code>
         */
        public Builder clearCmBans() {
          cmBans_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> cmPicks_ = java.util.Collections.emptyList();
        private void ensureCmPicksIsMutable() {
          if (!((bitField0_ & 0x00000100) == 0x00000100)) {
            cmPicks_ = new java.util.ArrayList<java.lang.Integer>(cmPicks_);
            bitField0_ |= 0x00000100;
           }
        }
        /**
         * <code>repeated uint32 cm_picks = 9;</code>
         */
        public java.util.List<java.lang.Integer>
            getCmPicksList() {
          return java.util.Collections.unmodifiableList(cmPicks_);
        }
        /**
         * <code>repeated uint32 cm_picks = 9;</code>
         */
        public int getCmPicksCount() {
          return cmPicks_.size();
        }
        /**
         * <code>repeated uint32 cm_picks = 9;</code>
         */
        public int getCmPicks(int index) {
          return cmPicks_.get(index);
        }
        /**
         * <code>repeated uint32 cm_picks = 9;</code>
         */
        public Builder setCmPicks(
            int index, int value) {
          ensureCmPicksIsMutable();
          cmPicks_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 cm_picks = 9;</code>
         */
        public Builder addCmPicks(int value) {
          ensureCmPicksIsMutable();
          cmPicks_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 cm_picks = 9;</code>
         */
        public Builder addAllCmPicks(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureCmPicksIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cmPicks_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 cm_picks = 9;</code>
         */
        public Builder clearCmPicks() {
          cmPicks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
          return this;
        }

        private int cmPenalty_ ;
        /**
         * <code>optional uint32 cm_penalty = 10;</code>
         */
        public boolean hasCmPenalty() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional uint32 cm_penalty = 10;</code>
         */
        public int getCmPenalty() {
          return cmPenalty_;
        }
        /**
         * <code>optional uint32 cm_penalty = 10;</code>
         */
        public Builder setCmPenalty(int value) {
          bitField0_ |= 0x00000200;
          cmPenalty_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 cm_penalty = 10;</code>
         */
        public Builder clearCmPenalty() {
          bitField0_ = (bitField0_ & ~0x00000200);
          cmPenalty_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAMatchMetadata.Team)
      }

      static {
        defaultInstance = new Team(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAMatchMetadata.Team)
    }

    private int bitField0_;
    public static final int TEAMS_FIELD_NUMBER = 1;
    private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team> teams_;
    /**
     * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
     */
    public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team> getTeamsList() {
      return teams_;
    }
    /**
     * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.TeamOrBuilder> 
        getTeamsOrBuilderList() {
      return teams_;
    }
    /**
     * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
     */
    public int getTeamsCount() {
      return teams_.size();
    }
    /**
     * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
     */
    public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team getTeams(int index) {
      return teams_.get(index);
    }
    /**
     * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
     */
    public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.TeamOrBuilder getTeamsOrBuilder(
        int index) {
      return teams_.get(index);
    }

    public static final int ITEM_REWARDS_FIELD_NUMBER = 2;
    private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails> itemRewards_;
    /**
     * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
     */
    public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails> getItemRewardsList() {
      return itemRewards_;
    }
    /**
     * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetailsOrBuilder> 
        getItemRewardsOrBuilderList() {
      return itemRewards_;
    }
    /**
     * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
     */
    public int getItemRewardsCount() {
      return itemRewards_.size();
    }
    /**
     * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
     */
    public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails getItemRewards(int index) {
      return itemRewards_.get(index);
    }
    /**
     * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
     */
    public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetailsOrBuilder getItemRewardsOrBuilder(
        int index) {
      return itemRewards_.get(index);
    }

    public static final int LOBBY_ID_FIELD_NUMBER = 3;
    private long lobbyId_;
    /**
     * <code>optional fixed64 lobby_id = 3;</code>
     */
    public boolean hasLobbyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed64 lobby_id = 3;</code>
     */
    public long getLobbyId() {
      return lobbyId_;
    }

    public static final int REPORT_UNTIL_TIME_FIELD_NUMBER = 4;
    private long reportUntilTime_;
    /**
     * <code>optional fixed64 report_until_time = 4;</code>
     */
    public boolean hasReportUntilTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional fixed64 report_until_time = 4;</code>
     */
    public long getReportUntilTime() {
      return reportUntilTime_;
    }

    public static final int EVENT_GAME_CUSTOM_TABLE_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString eventGameCustomTable_;
    /**
     * <code>optional bytes event_game_custom_table = 5;</code>
     */
    public boolean hasEventGameCustomTable() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes event_game_custom_table = 5;</code>
     */
    public com.google.protobuf.ByteString getEventGameCustomTable() {
      return eventGameCustomTable_;
    }

    private void initFields() {
      teams_ = java.util.Collections.emptyList();
      itemRewards_ = java.util.Collections.emptyList();
      lobbyId_ = 0L;
      reportUntilTime_ = 0L;
      eventGameCustomTable_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < teams_.size(); i++) {
        output.writeMessage(1, teams_.get(i));
      }
      for (int i = 0; i < itemRewards_.size(); i++) {
        output.writeMessage(2, itemRewards_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed64(3, lobbyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed64(4, reportUntilTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(5, eventGameCustomTable_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < teams_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, teams_.get(i));
      }
      for (int i = 0; i < itemRewards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, itemRewards_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(3, lobbyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(4, reportUntilTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, eventGameCustomTable_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAMatchMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAMatchMetadata)
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Builder.class);
      }

      // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTeamsFieldBuilder();
          getItemRewardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (teamsBuilder_ == null) {
          teams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          teamsBuilder_.clear();
        }
        if (itemRewardsBuilder_ == null) {
          itemRewards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          itemRewardsBuilder_.clear();
        }
        lobbyId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        reportUntilTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        eventGameCustomTable_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchMetadata_descriptor;
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata getDefaultInstanceForType() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.getDefaultInstance();
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata build() {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata buildPartial() {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (teamsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            teams_ = java.util.Collections.unmodifiableList(teams_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.teams_ = teams_;
        } else {
          result.teams_ = teamsBuilder_.build();
        }
        if (itemRewardsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            itemRewards_ = java.util.Collections.unmodifiableList(itemRewards_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.itemRewards_ = itemRewards_;
        } else {
          result.itemRewards_ = itemRewardsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000001;
        }
        result.lobbyId_ = lobbyId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.reportUntilTime_ = reportUntilTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.eventGameCustomTable_ = eventGameCustomTable_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata) {
          return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata other) {
        if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.getDefaultInstance()) return this;
        if (teamsBuilder_ == null) {
          if (!other.teams_.isEmpty()) {
            if (teams_.isEmpty()) {
              teams_ = other.teams_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTeamsIsMutable();
              teams_.addAll(other.teams_);
            }
            onChanged();
          }
        } else {
          if (!other.teams_.isEmpty()) {
            if (teamsBuilder_.isEmpty()) {
              teamsBuilder_.dispose();
              teamsBuilder_ = null;
              teams_ = other.teams_;
              bitField0_ = (bitField0_ & ~0x00000001);
              teamsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTeamsFieldBuilder() : null;
            } else {
              teamsBuilder_.addAllMessages(other.teams_);
            }
          }
        }
        if (itemRewardsBuilder_ == null) {
          if (!other.itemRewards_.isEmpty()) {
            if (itemRewards_.isEmpty()) {
              itemRewards_ = other.itemRewards_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureItemRewardsIsMutable();
              itemRewards_.addAll(other.itemRewards_);
            }
            onChanged();
          }
        } else {
          if (!other.itemRewards_.isEmpty()) {
            if (itemRewardsBuilder_.isEmpty()) {
              itemRewardsBuilder_.dispose();
              itemRewardsBuilder_ = null;
              itemRewards_ = other.itemRewards_;
              bitField0_ = (bitField0_ & ~0x00000002);
              itemRewardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getItemRewardsFieldBuilder() : null;
            } else {
              itemRewardsBuilder_.addAllMessages(other.itemRewards_);
            }
          }
        }
        if (other.hasLobbyId()) {
          setLobbyId(other.getLobbyId());
        }
        if (other.hasReportUntilTime()) {
          setReportUntilTime(other.getReportUntilTime());
        }
        if (other.hasEventGameCustomTable()) {
          setEventGameCustomTable(other.getEventGameCustomTable());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team> teams_ =
        java.util.Collections.emptyList();
      private void ensureTeamsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          teams_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team>(teams_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.TeamOrBuilder> teamsBuilder_;

      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team> getTeamsList() {
        if (teamsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(teams_);
        } else {
          return teamsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public int getTeamsCount() {
        if (teamsBuilder_ == null) {
          return teams_.size();
        } else {
          return teamsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team getTeams(int index) {
        if (teamsBuilder_ == null) {
          return teams_.get(index);
        } else {
          return teamsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public Builder setTeams(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.set(index, value);
          onChanged();
        } else {
          teamsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public Builder setTeams(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.set(index, builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public Builder addTeams(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.add(value);
          onChanged();
        } else {
          teamsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public Builder addTeams(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.add(index, value);
          onChanged();
        } else {
          teamsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public Builder addTeams(
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.add(builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public Builder addTeams(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.add(index, builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public Builder addAllTeams(
          java.lang.Iterable<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team> values) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, teams_);
          onChanged();
        } else {
          teamsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public Builder clearTeams() {
        if (teamsBuilder_ == null) {
          teams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          teamsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public Builder removeTeams(int index) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.remove(index);
          onChanged();
        } else {
          teamsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder getTeamsBuilder(
          int index) {
        return getTeamsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.TeamOrBuilder getTeamsOrBuilder(
          int index) {
        if (teamsBuilder_ == null) {
          return teams_.get(index);  } else {
          return teamsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.TeamOrBuilder> 
           getTeamsOrBuilderList() {
        if (teamsBuilder_ != null) {
          return teamsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(teams_);
        }
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder addTeamsBuilder() {
        return getTeamsFieldBuilder().addBuilder(
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder addTeamsBuilder(
          int index) {
        return getTeamsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAMatchMetadata.Team teams = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder> 
           getTeamsBuilderList() {
        return getTeamsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.TeamOrBuilder> 
          getTeamsFieldBuilder() {
        if (teamsBuilder_ == null) {
          teamsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.Team.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchMetadata.TeamOrBuilder>(
                  teams_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          teams_ = null;
        }
        return teamsBuilder_;
      }

      private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails> itemRewards_ =
        java.util.Collections.emptyList();
      private void ensureItemRewardsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          itemRewards_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails>(itemRewards_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetailsOrBuilder> itemRewardsBuilder_;

      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails> getItemRewardsList() {
        if (itemRewardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(itemRewards_);
        } else {
          return itemRewardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public int getItemRewardsCount() {
        if (itemRewardsBuilder_ == null) {
          return itemRewards_.size();
        } else {
          return itemRewardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails getItemRewards(int index) {
        if (itemRewardsBuilder_ == null) {
          return itemRewards_.get(index);
        } else {
          return itemRewardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public Builder setItemRewards(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails value) {
        if (itemRewardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemRewardsIsMutable();
          itemRewards_.set(index, value);
          onChanged();
        } else {
          itemRewardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public Builder setItemRewards(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder builderForValue) {
        if (itemRewardsBuilder_ == null) {
          ensureItemRewardsIsMutable();
          itemRewards_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemRewardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public Builder addItemRewards(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails value) {
        if (itemRewardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemRewardsIsMutable();
          itemRewards_.add(value);
          onChanged();
        } else {
          itemRewardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public Builder addItemRewards(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails value) {
        if (itemRewardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemRewardsIsMutable();
          itemRewards_.add(index, value);
          onChanged();
        } else {
          itemRewardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public Builder addItemRewards(
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder builderForValue) {
        if (itemRewardsBuilder_ == null) {
          ensureItemRewardsIsMutable();
          itemRewards_.add(builderForValue.build());
          onChanged();
        } else {
          itemRewardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public Builder addItemRewards(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder builderForValue) {
        if (itemRewardsBuilder_ == null) {
          ensureItemRewardsIsMutable();
          itemRewards_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemRewardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public Builder addAllItemRewards(
          java.lang.Iterable<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails> values) {
        if (itemRewardsBuilder_ == null) {
          ensureItemRewardsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, itemRewards_);
          onChanged();
        } else {
          itemRewardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public Builder clearItemRewards() {
        if (itemRewardsBuilder_ == null) {
          itemRewards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          itemRewardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public Builder removeItemRewards(int index) {
        if (itemRewardsBuilder_ == null) {
          ensureItemRewardsIsMutable();
          itemRewards_.remove(index);
          onChanged();
        } else {
          itemRewardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder getItemRewardsBuilder(
          int index) {
        return getItemRewardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetailsOrBuilder getItemRewardsOrBuilder(
          int index) {
        if (itemRewardsBuilder_ == null) {
          return itemRewards_.get(index);  } else {
          return itemRewardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetailsOrBuilder> 
           getItemRewardsOrBuilderList() {
        if (itemRewardsBuilder_ != null) {
          return itemRewardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(itemRewards_);
        }
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder addItemRewardsBuilder() {
        return getItemRewardsFieldBuilder().addBuilder(
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder addItemRewardsBuilder(
          int index) {
        return getItemRewardsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails item_rewards = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder> 
           getItemRewardsBuilderList() {
        return getItemRewardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetailsOrBuilder> 
          getItemRewardsFieldBuilder() {
        if (itemRewardsBuilder_ == null) {
          itemRewardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetails.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CLobbyTimedRewardDetailsOrBuilder>(
                  itemRewards_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          itemRewards_ = null;
        }
        return itemRewardsBuilder_;
      }

      private long lobbyId_ ;
      /**
       * <code>optional fixed64 lobby_id = 3;</code>
       */
      public boolean hasLobbyId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional fixed64 lobby_id = 3;</code>
       */
      public long getLobbyId() {
        return lobbyId_;
      }
      /**
       * <code>optional fixed64 lobby_id = 3;</code>
       */
      public Builder setLobbyId(long value) {
        bitField0_ |= 0x00000004;
        lobbyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 lobby_id = 3;</code>
       */
      public Builder clearLobbyId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lobbyId_ = 0L;
        onChanged();
        return this;
      }

      private long reportUntilTime_ ;
      /**
       * <code>optional fixed64 report_until_time = 4;</code>
       */
      public boolean hasReportUntilTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional fixed64 report_until_time = 4;</code>
       */
      public long getReportUntilTime() {
        return reportUntilTime_;
      }
      /**
       * <code>optional fixed64 report_until_time = 4;</code>
       */
      public Builder setReportUntilTime(long value) {
        bitField0_ |= 0x00000008;
        reportUntilTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 report_until_time = 4;</code>
       */
      public Builder clearReportUntilTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        reportUntilTime_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString eventGameCustomTable_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes event_game_custom_table = 5;</code>
       */
      public boolean hasEventGameCustomTable() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bytes event_game_custom_table = 5;</code>
       */
      public com.google.protobuf.ByteString getEventGameCustomTable() {
        return eventGameCustomTable_;
      }
      /**
       * <code>optional bytes event_game_custom_table = 5;</code>
       */
      public Builder setEventGameCustomTable(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        eventGameCustomTable_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes event_game_custom_table = 5;</code>
       */
      public Builder clearEventGameCustomTable() {
        bitField0_ = (bitField0_ & ~0x00000010);
        eventGameCustomTable_ = getDefaultInstance().getEventGameCustomTable();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAMatchMetadata)
    }

    static {
      defaultInstance = new CDOTAMatchMetadata(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAMatchMetadata)
  }

  public interface CDOTAMatchPrivateMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDOTAMatchPrivateMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
     */
    java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team> 
        getTeamsList();
    /**
     * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
     */
    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team getTeams(int index);
    /**
     * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
     */
    int getTeamsCount();
    /**
     * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.TeamOrBuilder> 
        getTeamsOrBuilderList();
    /**
     * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
     */
    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.TeamOrBuilder getTeamsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CDOTAMatchPrivateMetadata}
   */
  public static final class CDOTAMatchPrivateMetadata extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDOTAMatchPrivateMetadata)
      CDOTAMatchPrivateMetadataOrBuilder {
    // Use CDOTAMatchPrivateMetadata.newBuilder() to construct.
    private CDOTAMatchPrivateMetadata(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTAMatchPrivateMetadata(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTAMatchPrivateMetadata defaultInstance;
    public static CDOTAMatchPrivateMetadata getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTAMatchPrivateMetadata getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTAMatchPrivateMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                teams_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team>();
                mutable_bitField0_ |= 0x00000001;
              }
              teams_.add(input.readMessage(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          teams_ = java.util.Collections.unmodifiableList(teams_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTAMatchPrivateMetadata> PARSER =
        new com.google.protobuf.AbstractParser<CDOTAMatchPrivateMetadata>() {
      public CDOTAMatchPrivateMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTAMatchPrivateMetadata(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAMatchPrivateMetadata> getParserForType() {
      return PARSER;
    }

    public interface TeamOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDOTAMatchPrivateMetadata.Team)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 dota_team = 1;</code>
       */
      boolean hasDotaTeam();
      /**
       * <code>optional uint32 dota_team = 1;</code>
       */
      int getDotaTeam();

      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
       */
      java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player> 
          getPlayersList();
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
       */
      skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player getPlayers(int index);
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
       */
      int getPlayersCount();
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
       */
      java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.PlayerOrBuilder> 
          getPlayersOrBuilderList();
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
       */
      skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.PlayerOrBuilder getPlayersOrBuilder(
          int index);

      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
       */
      java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building> 
          getBuildingsList();
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
       */
      skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building getBuildings(int index);
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
       */
      int getBuildingsCount();
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
       */
      java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.BuildingOrBuilder> 
          getBuildingsOrBuilderList();
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
       */
      skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.BuildingOrBuilder getBuildingsOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code CDOTAMatchPrivateMetadata.Team}
     */
    public static final class Team extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDOTAMatchPrivateMetadata.Team)
        TeamOrBuilder {
      // Use Team.newBuilder() to construct.
      private Team(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Team(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Team defaultInstance;
      public static Team getDefaultInstance() {
        return defaultInstance;
      }

      public Team getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Team(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                dotaTeam_ = input.readUInt32();
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  players_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player>();
                  mutable_bitField0_ |= 0x00000002;
                }
                players_.add(input.readMessage(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.PARSER, extensionRegistry));
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  buildings_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building>();
                  mutable_bitField0_ |= 0x00000004;
                }
                buildings_.add(input.readMessage(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            players_ = java.util.Collections.unmodifiableList(players_);
          }
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            buildings_ = java.util.Collections.unmodifiableList(buildings_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Builder.class);
      }

      public static com.google.protobuf.Parser<Team> PARSER =
          new com.google.protobuf.AbstractParser<Team>() {
        public Team parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Team(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Team> getParserForType() {
        return PARSER;
      }

      public interface PlayerOrBuilder extends
          // @@protoc_insertion_point(interface_extends:CDOTAMatchPrivateMetadata.Team.Player)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        boolean hasAccountId();
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        int getAccountId();

        /**
         * <code>optional uint32 player_slot = 2;</code>
         */
        boolean hasPlayerSlot();
        /**
         * <code>optional uint32 player_slot = 2;</code>
         */
        int getPlayerSlot();

        /**
         * <code>optional bytes position_stream = 3;</code>
         */
        boolean hasPositionStream();
        /**
         * <code>optional bytes position_stream = 3;</code>
         */
        com.google.protobuf.ByteString getPositionStream();

        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
         */
        java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment> 
            getCombatSegmentsList();
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
         */
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment getCombatSegments(int index);
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
         */
        int getCombatSegmentsCount();
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
         */
        java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegmentOrBuilder> 
            getCombatSegmentsOrBuilderList();
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
         */
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegmentOrBuilder getCombatSegmentsOrBuilder(
            int index);

        /**
         * <code>repeated string damage_unit_names = 5;</code>
         */
        com.google.protobuf.ProtocolStringList
            getDamageUnitNamesList();
        /**
         * <code>repeated string damage_unit_names = 5;</code>
         */
        int getDamageUnitNamesCount();
        /**
         * <code>repeated string damage_unit_names = 5;</code>
         */
        java.lang.String getDamageUnitNames(int index);
        /**
         * <code>repeated string damage_unit_names = 5;</code>
         */
        com.google.protobuf.ByteString
            getDamageUnitNamesBytes(int index);

        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
         */
        java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord> 
            getBuffRecordsList();
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
         */
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord getBuffRecords(int index);
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
         */
        int getBuffRecordsCount();
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
         */
        java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecordOrBuilder> 
            getBuffRecordsOrBuilderList();
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
         */
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecordOrBuilder getBuffRecordsOrBuilder(
            int index);
      }
      /**
       * Protobuf type {@code CDOTAMatchPrivateMetadata.Team.Player}
       */
      public static final class Player extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:CDOTAMatchPrivateMetadata.Team.Player)
          PlayerOrBuilder {
        // Use Player.newBuilder() to construct.
        private Player(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Player(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Player defaultInstance;
        public static Player getDefaultInstance() {
          return defaultInstance;
        }

        public Player getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Player(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  accountId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  playerSlot_ = input.readUInt32();
                  break;
                }
                case 26: {
                  bitField0_ |= 0x00000004;
                  positionStream_ = input.readBytes();
                  break;
                }
                case 34: {
                  if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                    combatSegments_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment>();
                    mutable_bitField0_ |= 0x00000008;
                  }
                  combatSegments_.add(input.readMessage(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.PARSER, extensionRegistry));
                  break;
                }
                case 42: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                    damageUnitNames_ = new com.google.protobuf.LazyStringArrayList();
                    mutable_bitField0_ |= 0x00000010;
                  }
                  damageUnitNames_.add(bs);
                  break;
                }
                case 50: {
                  if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    buffRecords_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord>();
                    mutable_bitField0_ |= 0x00000020;
                  }
                  buffRecords_.add(input.readMessage(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.PARSER, extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              combatSegments_ = java.util.Collections.unmodifiableList(combatSegments_);
            }
            if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              damageUnitNames_ = damageUnitNames_.getUnmodifiableView();
            }
            if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              buffRecords_ = java.util.Collections.unmodifiableList(buffRecords_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.Builder.class);
        }

        public static com.google.protobuf.Parser<Player> PARSER =
            new com.google.protobuf.AbstractParser<Player>() {
          public Player parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Player(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Player> getParserForType() {
          return PARSER;
        }

        public interface CombatSegmentOrBuilder extends
            // @@protoc_insertion_point(interface_extends:CDOTAMatchPrivateMetadata.Team.Player.CombatSegment)
            com.google.protobuf.MessageOrBuilder {

          /**
           * <code>optional int32 game_time = 1;</code>
           */
          boolean hasGameTime();
          /**
           * <code>optional int32 game_time = 1;</code>
           */
          int getGameTime();

          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
           */
          java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility> 
              getDamageByAbilityList();
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
           */
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility getDamageByAbility(int index);
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
           */
          int getDamageByAbilityCount();
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
           */
          java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbilityOrBuilder> 
              getDamageByAbilityOrBuilderList();
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
           */
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbilityOrBuilder getDamageByAbilityOrBuilder(
              int index);
        }
        /**
         * Protobuf type {@code CDOTAMatchPrivateMetadata.Team.Player.CombatSegment}
         */
        public static final class CombatSegment extends
            com.google.protobuf.GeneratedMessage implements
            // @@protoc_insertion_point(message_implements:CDOTAMatchPrivateMetadata.Team.Player.CombatSegment)
            CombatSegmentOrBuilder {
          // Use CombatSegment.newBuilder() to construct.
          private CombatSegment(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
          }
          private CombatSegment(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

          private static final CombatSegment defaultInstance;
          public static CombatSegment getDefaultInstance() {
            return defaultInstance;
          }

          public CombatSegment getDefaultInstanceForType() {
            return defaultInstance;
          }

          private final com.google.protobuf.UnknownFieldSet unknownFields;
          @java.lang.Override
          public final com.google.protobuf.UnknownFieldSet
              getUnknownFields() {
            return this.unknownFields;
          }
          private CombatSegment(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(input, unknownFields,
                                           extensionRegistry, tag)) {
                      done = true;
                    }
                    break;
                  }
                  case 8: {
                    bitField0_ |= 0x00000001;
                    gameTime_ = input.readInt32();
                    break;
                  }
                  case 18: {
                    if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                      damageByAbility_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility>();
                      mutable_bitField0_ |= 0x00000002;
                    }
                    damageByAbility_.add(input.readMessage(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.PARSER, extensionRegistry));
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this);
            } finally {
              if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                damageByAbility_ = java.util.Collections.unmodifiableList(damageByAbility_);
              }
              this.unknownFields = unknownFields.build();
              makeExtensionsImmutable();
            }
          }
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.Builder.class);
          }

          public static com.google.protobuf.Parser<CombatSegment> PARSER =
              new com.google.protobuf.AbstractParser<CombatSegment>() {
            public CombatSegment parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return new CombatSegment(input, extensionRegistry);
            }
          };

          @java.lang.Override
          public com.google.protobuf.Parser<CombatSegment> getParserForType() {
            return PARSER;
          }

          public interface DamageByAbilityOrBuilder extends
              // @@protoc_insertion_point(interface_extends:CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility)
              com.google.protobuf.MessageOrBuilder {

            /**
             * <code>optional uint32 source_unit_index = 3;</code>
             */
            boolean hasSourceUnitIndex();
            /**
             * <code>optional uint32 source_unit_index = 3;</code>
             */
            int getSourceUnitIndex();

            /**
             * <code>optional uint32 ability_id = 1;</code>
             */
            boolean hasAbilityId();
            /**
             * <code>optional uint32 ability_id = 1;</code>
             */
            int getAbilityId();

            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
             */
            java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget> 
                getByHeroTargetsList();
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
             */
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget getByHeroTargets(int index);
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
             */
            int getByHeroTargetsCount();
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
             */
            java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTargetOrBuilder> 
                getByHeroTargetsOrBuilderList();
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
             */
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTargetOrBuilder getByHeroTargetsOrBuilder(
                int index);
          }
          /**
           * Protobuf type {@code CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility}
           */
          public static final class DamageByAbility extends
              com.google.protobuf.GeneratedMessage implements
              // @@protoc_insertion_point(message_implements:CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility)
              DamageByAbilityOrBuilder {
            // Use DamageByAbility.newBuilder() to construct.
            private DamageByAbility(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
              super(builder);
              this.unknownFields = builder.getUnknownFields();
            }
            private DamageByAbility(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

            private static final DamageByAbility defaultInstance;
            public static DamageByAbility getDefaultInstance() {
              return defaultInstance;
            }

            public DamageByAbility getDefaultInstanceForType() {
              return defaultInstance;
            }

            private final com.google.protobuf.UnknownFieldSet unknownFields;
            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet
                getUnknownFields() {
              return this.unknownFields;
            }
            private DamageByAbility(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              initFields();
              int mutable_bitField0_ = 0;
              com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                  com.google.protobuf.UnknownFieldSet.newBuilder();
              try {
                boolean done = false;
                while (!done) {
                  int tag = input.readTag();
                  switch (tag) {
                    case 0:
                      done = true;
                      break;
                    default: {
                      if (!parseUnknownField(input, unknownFields,
                                             extensionRegistry, tag)) {
                        done = true;
                      }
                      break;
                    }
                    case 8: {
                      bitField0_ |= 0x00000002;
                      abilityId_ = input.readUInt32();
                      break;
                    }
                    case 18: {
                      if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                        byHeroTargets_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget>();
                        mutable_bitField0_ |= 0x00000004;
                      }
                      byHeroTargets_.add(input.readMessage(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget.PARSER, extensionRegistry));
                      break;
                    }
                    case 24: {
                      bitField0_ |= 0x00000001;
                      sourceUnitIndex_ = input.readUInt32();
                      break;
                    }
                  }
                }
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
              } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this);
              } finally {
                if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  byHeroTargets_ = java.util.Collections.unmodifiableList(byHeroTargets_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
              }
            }
            public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
              return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_DamageByAbility_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
                internalGetFieldAccessorTable() {
              return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_DamageByAbility_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                      skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.Builder.class);
            }

            public static com.google.protobuf.Parser<DamageByAbility> PARSER =
                new com.google.protobuf.AbstractParser<DamageByAbility>() {
              public DamageByAbility parsePartialFrom(
                  com.google.protobuf.CodedInputStream input,
                  com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                  throws com.google.protobuf.InvalidProtocolBufferException {
                return new DamageByAbility(input, extensionRegistry);
              }
            };

            @java.lang.Override
            public com.google.protobuf.Parser<DamageByAbility> getParserForType() {
              return PARSER;
            }

            public interface ByHeroTargetOrBuilder extends
                // @@protoc_insertion_point(interface_extends:CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget)
                com.google.protobuf.MessageOrBuilder {

              /**
               * <code>optional uint32 hero_id = 1;</code>
               */
              boolean hasHeroId();
              /**
               * <code>optional uint32 hero_id = 1;</code>
               */
              int getHeroId();

              /**
               * <code>optional uint32 damage = 2;</code>
               */
              boolean hasDamage();
              /**
               * <code>optional uint32 damage = 2;</code>
               */
              int getDamage();
            }
            /**
             * Protobuf type {@code CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget}
             */
            public static final class ByHeroTarget extends
                com.google.protobuf.GeneratedMessage implements
                // @@protoc_insertion_point(message_implements:CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget)
                ByHeroTargetOrBuilder {
              // Use ByHeroTarget.newBuilder() to construct.
              private ByHeroTarget(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
                super(builder);
                this.unknownFields = builder.getUnknownFields();
              }
              private ByHeroTarget(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

              private static final ByHeroTarget defaultInstance;
              public static ByHeroTarget getDefaultInstance() {
                return defaultInstance;
              }

              public ByHeroTarget getDefaultInstanceForType() {
                return defaultInstance;
              }

              private final com.google.protobuf.UnknownFieldSet unknownFields;
              @java.lang.Override
              public final com.google.protobuf.UnknownFieldSet
                  getUnknownFields() {
                return this.unknownFields;
              }
              private ByHeroTarget(
                  com.google.protobuf.CodedInputStream input,
                  com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                  throws com.google.protobuf.InvalidProtocolBufferException {
                initFields();
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                  boolean done = false;
                  while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                      case 0:
                        done = true;
                        break;
                      default: {
                        if (!parseUnknownField(input, unknownFields,
                                               extensionRegistry, tag)) {
                          done = true;
                        }
                        break;
                      }
                      case 8: {
                        bitField0_ |= 0x00000001;
                        heroId_ = input.readUInt32();
                        break;
                      }
                      case 16: {
                        bitField0_ |= 0x00000002;
                        damage_ = input.readUInt32();
                        break;
                      }
                    }
                  }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                  throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                  throw new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this);
                } finally {
                  this.unknownFields = unknownFields.build();
                  makeExtensionsImmutable();
                }
              }
              public static final com.google.protobuf.Descriptors.Descriptor
                  getDescriptor() {
                return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_DamageByAbility_ByHeroTarget_descriptor;
              }

              protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
                  internalGetFieldAccessorTable() {
                return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_DamageByAbility_ByHeroTarget_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget.Builder.class);
              }

              public static com.google.protobuf.Parser<ByHeroTarget> PARSER =
                  new com.google.protobuf.AbstractParser<ByHeroTarget>() {
                public ByHeroTarget parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                  return new ByHeroTarget(input, extensionRegistry);
                }
              };

              @java.lang.Override
              public com.google.protobuf.Parser<ByHeroTarget> getParserForType() {
                return PARSER;
              }

              private int bitField0_;
              public static final int HERO_ID_FIELD_NUMBER = 1;
              private int heroId_;
              /**
               * <code>optional uint32 hero_id = 1;</code>
               */
              public boolean hasHeroId() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
              }
              /**
               * <code>optional uint32 hero_id = 1;</code>
               */
              public int getHeroId() {
                return heroId_;
              }

              public static final int DAMAGE_FIELD_NUMBER = 2;
              private int damage_;
              /**
               * <code>optional uint32 damage = 2;</code>
               */
              public boolean hasDamage() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
              }
              /**
               * <code>optional uint32 damage = 2;</code>
               */
              public int getDamage() {
                return damage_;
              }

              private void initFields() {
                heroId_ = 0;
                damage_ = 0;
              }
              private byte memoizedIsInitialized = -1;
              public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
              }

              public void writeTo(com.google.protobuf.CodedOutputStream output)
                                  throws java.io.IOException {
                getSerializedSize();
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  output.writeUInt32(1, heroId_);
                }
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  output.writeUInt32(2, damage_);
                }
                getUnknownFields().writeTo(output);
              }

              private int memoizedSerializedSize = -1;
              public int getSerializedSize() {
                int size = memoizedSerializedSize;
                if (size != -1) return size;

                size = 0;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  size += com.google.protobuf.CodedOutputStream
                    .computeUInt32Size(1, heroId_);
                }
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  size += com.google.protobuf.CodedOutputStream
                    .computeUInt32Size(2, damage_);
                }
                size += getUnknownFields().getSerializedSize();
                memoizedSerializedSize = size;
                return size;
              }

              private static final long serialVersionUID = 0L;
              @java.lang.Override
              protected java.lang.Object writeReplace()
                  throws java.io.ObjectStreamException {
                return super.writeReplace();
              }

              public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget parseFrom(
                  com.google.protobuf.ByteString data)
                  throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
              }
              public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget parseFrom(
                  com.google.protobuf.ByteString data,
                  com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                  throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
              }
              public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget parseFrom(byte[] data)
                  throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
              }
              public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget parseFrom(
                  byte[] data,
                  com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                  throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
              }
              public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget parseFrom(java.io.InputStream input)
                  throws java.io.IOException {
                return PARSER.parseFrom(input);
              }
              public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget parseFrom(
                  java.io.InputStream input,
                  com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                  throws java.io.IOException {
                return PARSER.parseFrom(input, extensionRegistry);
              }
              public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget parseDelimitedFrom(java.io.InputStream input)
                  throws java.io.IOException {
                return PARSER.parseDelimitedFrom(input);
              }
              public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget parseDelimitedFrom(
                  java.io.InputStream input,
                  com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                  throws java.io.IOException {
                return PARSER.parseDelimitedFrom(input, extensionRegistry);
              }
              public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget parseFrom(
                  com.google.protobuf.CodedInputStream input)
                  throws java.io.IOException {
                return PARSER.parseFrom(input);
              }
              public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget parseFrom(
                  com.google.protobuf.CodedInputStream input,
                  com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                  throws java.io.IOException {
                return PARSER.parseFrom(input, extensionRegistry);
              }

              public static Builder newBuilder() { return Builder.create(); }
              public Builder newBuilderForType() { return newBuilder(); }
              public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget prototype) {
                return newBuilder().mergeFrom(prototype);
              }
              public Builder toBuilder() { return newBuilder(this); }

              @java.lang.Override
              protected Builder newBuilderForType(
                  com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
              }
              /**
               * Protobuf type {@code CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget}
               */
              public static final class Builder extends
                  com.google.protobuf.GeneratedMessage.Builder<Builder> implements
                  // @@protoc_insertion_point(builder_implements:CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget)
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTargetOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor
                    getDescriptor() {
                  return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_DamageByAbility_ByHeroTarget_descriptor;
                }

                protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
                    internalGetFieldAccessorTable() {
                  return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_DamageByAbility_ByHeroTarget_fieldAccessorTable
                      .ensureFieldAccessorsInitialized(
                          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget.Builder.class);
                }

                // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget.newBuilder()
                private Builder() {
                  maybeForceBuilderInitialization();
                }

                private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                  super(parent);
                  maybeForceBuilderInitialization();
                }
                private void maybeForceBuilderInitialization() {
                  if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                  }
                }
                private static Builder create() {
                  return new Builder();
                }

                public Builder clear() {
                  super.clear();
                  heroId_ = 0;
                  bitField0_ = (bitField0_ & ~0x00000001);
                  damage_ = 0;
                  bitField0_ = (bitField0_ & ~0x00000002);
                  return this;
                }

                public Builder clone() {
                  return create().mergeFrom(buildPartial());
                }

                public com.google.protobuf.Descriptors.Descriptor
                    getDescriptorForType() {
                  return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_DamageByAbility_ByHeroTarget_descriptor;
                }

                public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget getDefaultInstanceForType() {
                  return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget.getDefaultInstance();
                }

                public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget build() {
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget result = buildPartial();
                  if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                  }
                  return result;
                }

                public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget buildPartial() {
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget(this);
                  int from_bitField0_ = bitField0_;
                  int to_bitField0_ = 0;
                  if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                  }
                  result.heroId_ = heroId_;
                  if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                  }
                  result.damage_ = damage_;
                  result.bitField0_ = to_bitField0_;
                  onBuilt();
                  return result;
                }

                public Builder mergeFrom(com.google.protobuf.Message other) {
                  if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget) {
                    return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget)other);
                  } else {
                    super.mergeFrom(other);
                    return this;
                  }
                }

                public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget other) {
                  if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget.getDefaultInstance()) return this;
                  if (other.hasHeroId()) {
                    setHeroId(other.getHeroId());
                  }
                  if (other.hasDamage()) {
                    setDamage(other.getDamage());
                  }
                  this.mergeUnknownFields(other.getUnknownFields());
                  return this;
                }

                public final boolean isInitialized() {
                  return true;
                }

                public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget parsedMessage = null;
                  try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                  } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget) e.getUnfinishedMessage();
                    throw e;
                  } finally {
                    if (parsedMessage != null) {
                      mergeFrom(parsedMessage);
                    }
                  }
                  return this;
                }
                private int bitField0_;

                private int heroId_ ;
                /**
                 * <code>optional uint32 hero_id = 1;</code>
                 */
                public boolean hasHeroId() {
                  return ((bitField0_ & 0x00000001) == 0x00000001);
                }
                /**
                 * <code>optional uint32 hero_id = 1;</code>
                 */
                public int getHeroId() {
                  return heroId_;
                }
                /**
                 * <code>optional uint32 hero_id = 1;</code>
                 */
                public Builder setHeroId(int value) {
                  bitField0_ |= 0x00000001;
                  heroId_ = value;
                  onChanged();
                  return this;
                }
                /**
                 * <code>optional uint32 hero_id = 1;</code>
                 */
                public Builder clearHeroId() {
                  bitField0_ = (bitField0_ & ~0x00000001);
                  heroId_ = 0;
                  onChanged();
                  return this;
                }

                private int damage_ ;
                /**
                 * <code>optional uint32 damage = 2;</code>
                 */
                public boolean hasDamage() {
                  return ((bitField0_ & 0x00000002) == 0x00000002);
                }
                /**
                 * <code>optional uint32 damage = 2;</code>
                 */
                public int getDamage() {
                  return damage_;
                }
                /**
                 * <code>optional uint32 damage = 2;</code>
                 */
                public Builder setDamage(int value) {
                  bitField0_ |= 0x00000002;
                  damage_ = value;
                  onChanged();
                  return this;
                }
                /**
                 * <code>optional uint32 damage = 2;</code>
                 */
                public Builder clearDamage() {
                  bitField0_ = (bitField0_ & ~0x00000002);
                  damage_ = 0;
                  onChanged();
                  return this;
                }

                // @@protoc_insertion_point(builder_scope:CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget)
              }

              static {
                defaultInstance = new ByHeroTarget(true);
                defaultInstance.initFields();
              }

              // @@protoc_insertion_point(class_scope:CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget)
            }

            private int bitField0_;
            public static final int SOURCE_UNIT_INDEX_FIELD_NUMBER = 3;
            private int sourceUnitIndex_;
            /**
             * <code>optional uint32 source_unit_index = 3;</code>
             */
            public boolean hasSourceUnitIndex() {
              return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>optional uint32 source_unit_index = 3;</code>
             */
            public int getSourceUnitIndex() {
              return sourceUnitIndex_;
            }

            public static final int ABILITY_ID_FIELD_NUMBER = 1;
            private int abilityId_;
            /**
             * <code>optional uint32 ability_id = 1;</code>
             */
            public boolean hasAbilityId() {
              return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>optional uint32 ability_id = 1;</code>
             */
            public int getAbilityId() {
              return abilityId_;
            }

            public static final int BY_HERO_TARGETS_FIELD_NUMBER = 2;
            private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget> byHeroTargets_;
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
             */
            public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget> getByHeroTargetsList() {
              return byHeroTargets_;
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
             */
            public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTargetOrBuilder> 
                getByHeroTargetsOrBuilderList() {
              return byHeroTargets_;
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
             */
            public int getByHeroTargetsCount() {
              return byHeroTargets_.size();
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
             */
            public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget getByHeroTargets(int index) {
              return byHeroTargets_.get(index);
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
             */
            public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTargetOrBuilder getByHeroTargetsOrBuilder(
                int index) {
              return byHeroTargets_.get(index);
            }

            private void initFields() {
              sourceUnitIndex_ = 0;
              abilityId_ = 0;
              byHeroTargets_ = java.util.Collections.emptyList();
            }
            private byte memoizedIsInitialized = -1;
            public final boolean isInitialized() {
              byte isInitialized = memoizedIsInitialized;
              if (isInitialized == 1) return true;
              if (isInitialized == 0) return false;

              memoizedIsInitialized = 1;
              return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                                throws java.io.IOException {
              getSerializedSize();
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeUInt32(1, abilityId_);
              }
              for (int i = 0; i < byHeroTargets_.size(); i++) {
                output.writeMessage(2, byHeroTargets_.get(i));
              }
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeUInt32(3, sourceUnitIndex_);
              }
              getUnknownFields().writeTo(output);
            }

            private int memoizedSerializedSize = -1;
            public int getSerializedSize() {
              int size = memoizedSerializedSize;
              if (size != -1) return size;

              size = 0;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                  .computeUInt32Size(1, abilityId_);
              }
              for (int i = 0; i < byHeroTargets_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                  .computeMessageSize(2, byHeroTargets_.get(i));
              }
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                  .computeUInt32Size(3, sourceUnitIndex_);
              }
              size += getUnknownFields().getSerializedSize();
              memoizedSerializedSize = size;
              return size;
            }

            private static final long serialVersionUID = 0L;
            @java.lang.Override
            protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
              return super.writeReplace();
            }

            public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return PARSER.parseFrom(data);
            }
            public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return PARSER.parseFrom(data, extensionRegistry);
            }
            public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return PARSER.parseFrom(data);
            }
            public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return PARSER.parseFrom(data, extensionRegistry);
            }
            public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility parseFrom(java.io.InputStream input)
                throws java.io.IOException {
              return PARSER.parseFrom(input);
            }
            public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              return PARSER.parseFrom(input, extensionRegistry);
            }
            public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
              return PARSER.parseDelimitedFrom(input);
            }
            public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              return PARSER.parseDelimitedFrom(input, extensionRegistry);
            }
            public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
              return PARSER.parseFrom(input);
            }
            public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              return PARSER.parseFrom(input, extensionRegistry);
            }

            public static Builder newBuilder() { return Builder.create(); }
            public Builder newBuilderForType() { return newBuilder(); }
            public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility prototype) {
              return newBuilder().mergeFrom(prototype);
            }
            public Builder toBuilder() { return newBuilder(this); }

            @java.lang.Override
            protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
              Builder builder = new Builder(parent);
              return builder;
            }
            /**
             * Protobuf type {@code CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility}
             */
            public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility)
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbilityOrBuilder {
              public static final com.google.protobuf.Descriptors.Descriptor
                  getDescriptor() {
                return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_DamageByAbility_descriptor;
              }

              protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
                  internalGetFieldAccessorTable() {
                return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_DamageByAbility_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.Builder.class);
              }

              // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.newBuilder()
              private Builder() {
                maybeForceBuilderInitialization();
              }

              private Builder(
                  com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
              }
              private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                  getByHeroTargetsFieldBuilder();
                }
              }
              private static Builder create() {
                return new Builder();
              }

              public Builder clear() {
                super.clear();
                sourceUnitIndex_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                abilityId_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                if (byHeroTargetsBuilder_ == null) {
                  byHeroTargets_ = java.util.Collections.emptyList();
                  bitField0_ = (bitField0_ & ~0x00000004);
                } else {
                  byHeroTargetsBuilder_.clear();
                }
                return this;
              }

              public Builder clone() {
                return create().mergeFrom(buildPartial());
              }

              public com.google.protobuf.Descriptors.Descriptor
                  getDescriptorForType() {
                return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_DamageByAbility_descriptor;
              }

              public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility getDefaultInstanceForType() {
                return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.getDefaultInstance();
              }

              public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility build() {
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility result = buildPartial();
                if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
                }
                return result;
              }

              public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility buildPartial() {
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                  to_bitField0_ |= 0x00000001;
                }
                result.sourceUnitIndex_ = sourceUnitIndex_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                  to_bitField0_ |= 0x00000002;
                }
                result.abilityId_ = abilityId_;
                if (byHeroTargetsBuilder_ == null) {
                  if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    byHeroTargets_ = java.util.Collections.unmodifiableList(byHeroTargets_);
                    bitField0_ = (bitField0_ & ~0x00000004);
                  }
                  result.byHeroTargets_ = byHeroTargets_;
                } else {
                  result.byHeroTargets_ = byHeroTargetsBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
              }

              public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility) {
                  return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility)other);
                } else {
                  super.mergeFrom(other);
                  return this;
                }
              }

              public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility other) {
                if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.getDefaultInstance()) return this;
                if (other.hasSourceUnitIndex()) {
                  setSourceUnitIndex(other.getSourceUnitIndex());
                }
                if (other.hasAbilityId()) {
                  setAbilityId(other.getAbilityId());
                }
                if (byHeroTargetsBuilder_ == null) {
                  if (!other.byHeroTargets_.isEmpty()) {
                    if (byHeroTargets_.isEmpty()) {
                      byHeroTargets_ = other.byHeroTargets_;
                      bitField0_ = (bitField0_ & ~0x00000004);
                    } else {
                      ensureByHeroTargetsIsMutable();
                      byHeroTargets_.addAll(other.byHeroTargets_);
                    }
                    onChanged();
                  }
                } else {
                  if (!other.byHeroTargets_.isEmpty()) {
                    if (byHeroTargetsBuilder_.isEmpty()) {
                      byHeroTargetsBuilder_.dispose();
                      byHeroTargetsBuilder_ = null;
                      byHeroTargets_ = other.byHeroTargets_;
                      bitField0_ = (bitField0_ & ~0x00000004);
                      byHeroTargetsBuilder_ = 
                        com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                           getByHeroTargetsFieldBuilder() : null;
                    } else {
                      byHeroTargetsBuilder_.addAllMessages(other.byHeroTargets_);
                    }
                  }
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
              }

              public final boolean isInitialized() {
                return true;
              }

              public Builder mergeFrom(
                  com.google.protobuf.CodedInputStream input,
                  com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                  throws java.io.IOException {
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility parsedMessage = null;
                try {
                  parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                  parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility) e.getUnfinishedMessage();
                  throw e;
                } finally {
                  if (parsedMessage != null) {
                    mergeFrom(parsedMessage);
                  }
                }
                return this;
              }
              private int bitField0_;

              private int sourceUnitIndex_ ;
              /**
               * <code>optional uint32 source_unit_index = 3;</code>
               */
              public boolean hasSourceUnitIndex() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
              }
              /**
               * <code>optional uint32 source_unit_index = 3;</code>
               */
              public int getSourceUnitIndex() {
                return sourceUnitIndex_;
              }
              /**
               * <code>optional uint32 source_unit_index = 3;</code>
               */
              public Builder setSourceUnitIndex(int value) {
                bitField0_ |= 0x00000001;
                sourceUnitIndex_ = value;
                onChanged();
                return this;
              }
              /**
               * <code>optional uint32 source_unit_index = 3;</code>
               */
              public Builder clearSourceUnitIndex() {
                bitField0_ = (bitField0_ & ~0x00000001);
                sourceUnitIndex_ = 0;
                onChanged();
                return this;
              }

              private int abilityId_ ;
              /**
               * <code>optional uint32 ability_id = 1;</code>
               */
              public boolean hasAbilityId() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
              }
              /**
               * <code>optional uint32 ability_id = 1;</code>
               */
              public int getAbilityId() {
                return abilityId_;
              }
              /**
               * <code>optional uint32 ability_id = 1;</code>
               */
              public Builder setAbilityId(int value) {
                bitField0_ |= 0x00000002;
                abilityId_ = value;
                onChanged();
                return this;
              }
              /**
               * <code>optional uint32 ability_id = 1;</code>
               */
              public Builder clearAbilityId() {
                bitField0_ = (bitField0_ & ~0x00000002);
                abilityId_ = 0;
                onChanged();
                return this;
              }

              private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget> byHeroTargets_ =
                java.util.Collections.emptyList();
              private void ensureByHeroTargetsIsMutable() {
                if (!((bitField0_ & 0x00000004) == 0x00000004)) {
                  byHeroTargets_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget>(byHeroTargets_);
                  bitField0_ |= 0x00000004;
                 }
              }

              private com.google.protobuf.RepeatedFieldBuilder<
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTargetOrBuilder> byHeroTargetsBuilder_;

              /**
               * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
               */
              public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget> getByHeroTargetsList() {
                if (byHeroTargetsBuilder_ == null) {
                  return java.util.Collections.unmodifiableList(byHeroTargets_);
                } else {
                  return byHeroTargetsBuilder_.getMessageList();
                }
              }
              /**
               * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
               */
              public int getByHeroTargetsCount() {
                if (byHeroTargetsBuilder_ == null) {
                  return byHeroTargets_.size();
                } else {
                  return byHeroTargetsBuilder_.getCount();
                }
              }
              /**
               * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
               */
              public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget getByHeroTargets(int index) {
                if (byHeroTargetsBuilder_ == null) {
                  return byHeroTargets_.get(index);
                } else {
                  return byHeroTargetsBuilder_.getMessage(index);
                }
              }
              /**
               * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
               */
              public Builder setByHeroTargets(
                  int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget value) {
                if (byHeroTargetsBuilder_ == null) {
                  if (value == null) {
                    throw new NullPointerException();
                  }
                  ensureByHeroTargetsIsMutable();
                  byHeroTargets_.set(index, value);
                  onChanged();
                } else {
                  byHeroTargetsBuilder_.setMessage(index, value);
                }
                return this;
              }
              /**
               * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
               */
              public Builder setByHeroTargets(
                  int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget.Builder builderForValue) {
                if (byHeroTargetsBuilder_ == null) {
                  ensureByHeroTargetsIsMutable();
                  byHeroTargets_.set(index, builderForValue.build());
                  onChanged();
                } else {
                  byHeroTargetsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
              }
              /**
               * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
               */
              public Builder addByHeroTargets(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget value) {
                if (byHeroTargetsBuilder_ == null) {
                  if (value == null) {
                    throw new NullPointerException();
                  }
                  ensureByHeroTargetsIsMutable();
                  byHeroTargets_.add(value);
                  onChanged();
                } else {
                  byHeroTargetsBuilder_.addMessage(value);
                }
                return this;
              }
              /**
               * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
               */
              public Builder addByHeroTargets(
                  int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget value) {
                if (byHeroTargetsBuilder_ == null) {
                  if (value == null) {
                    throw new NullPointerException();
                  }
                  ensureByHeroTargetsIsMutable();
                  byHeroTargets_.add(index, value);
                  onChanged();
                } else {
                  byHeroTargetsBuilder_.addMessage(index, value);
                }
                return this;
              }
              /**
               * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
               */
              public Builder addByHeroTargets(
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget.Builder builderForValue) {
                if (byHeroTargetsBuilder_ == null) {
                  ensureByHeroTargetsIsMutable();
                  byHeroTargets_.add(builderForValue.build());
                  onChanged();
                } else {
                  byHeroTargetsBuilder_.addMessage(builderForValue.build());
                }
                return this;
              }
              /**
               * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
               */
              public Builder addByHeroTargets(
                  int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget.Builder builderForValue) {
                if (byHeroTargetsBuilder_ == null) {
                  ensureByHeroTargetsIsMutable();
                  byHeroTargets_.add(index, builderForValue.build());
                  onChanged();
                } else {
                  byHeroTargetsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
              }
              /**
               * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
               */
              public Builder addAllByHeroTargets(
                  java.lang.Iterable<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget> values) {
                if (byHeroTargetsBuilder_ == null) {
                  ensureByHeroTargetsIsMutable();
                  com.google.protobuf.AbstractMessageLite.Builder.addAll(
                      values, byHeroTargets_);
                  onChanged();
                } else {
                  byHeroTargetsBuilder_.addAllMessages(values);
                }
                return this;
              }
              /**
               * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
               */
              public Builder clearByHeroTargets() {
                if (byHeroTargetsBuilder_ == null) {
                  byHeroTargets_ = java.util.Collections.emptyList();
                  bitField0_ = (bitField0_ & ~0x00000004);
                  onChanged();
                } else {
                  byHeroTargetsBuilder_.clear();
                }
                return this;
              }
              /**
               * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
               */
              public Builder removeByHeroTargets(int index) {
                if (byHeroTargetsBuilder_ == null) {
                  ensureByHeroTargetsIsMutable();
                  byHeroTargets_.remove(index);
                  onChanged();
                } else {
                  byHeroTargetsBuilder_.remove(index);
                }
                return this;
              }
              /**
               * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
               */
              public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget.Builder getByHeroTargetsBuilder(
                  int index) {
                return getByHeroTargetsFieldBuilder().getBuilder(index);
              }
              /**
               * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
               */
              public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTargetOrBuilder getByHeroTargetsOrBuilder(
                  int index) {
                if (byHeroTargetsBuilder_ == null) {
                  return byHeroTargets_.get(index);  } else {
                  return byHeroTargetsBuilder_.getMessageOrBuilder(index);
                }
              }
              /**
               * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
               */
              public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTargetOrBuilder> 
                   getByHeroTargetsOrBuilderList() {
                if (byHeroTargetsBuilder_ != null) {
                  return byHeroTargetsBuilder_.getMessageOrBuilderList();
                } else {
                  return java.util.Collections.unmodifiableList(byHeroTargets_);
                }
              }
              /**
               * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
               */
              public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget.Builder addByHeroTargetsBuilder() {
                return getByHeroTargetsFieldBuilder().addBuilder(
                    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget.getDefaultInstance());
              }
              /**
               * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
               */
              public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget.Builder addByHeroTargetsBuilder(
                  int index) {
                return getByHeroTargetsFieldBuilder().addBuilder(
                    index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget.getDefaultInstance());
              }
              /**
               * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget by_hero_targets = 2;</code>
               */
              public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget.Builder> 
                   getByHeroTargetsBuilderList() {
                return getByHeroTargetsFieldBuilder().getBuilderList();
              }
              private com.google.protobuf.RepeatedFieldBuilder<
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTargetOrBuilder> 
                  getByHeroTargetsFieldBuilder() {
                if (byHeroTargetsBuilder_ == null) {
                  byHeroTargetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                      skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTarget.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.ByHeroTargetOrBuilder>(
                          byHeroTargets_,
                          ((bitField0_ & 0x00000004) == 0x00000004),
                          getParentForChildren(),
                          isClean());
                  byHeroTargets_ = null;
                }
                return byHeroTargetsBuilder_;
              }

              // @@protoc_insertion_point(builder_scope:CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility)
            }

            static {
              defaultInstance = new DamageByAbility(true);
              defaultInstance.initFields();
            }

            // @@protoc_insertion_point(class_scope:CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility)
          }

          private int bitField0_;
          public static final int GAME_TIME_FIELD_NUMBER = 1;
          private int gameTime_;
          /**
           * <code>optional int32 game_time = 1;</code>
           */
          public boolean hasGameTime() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional int32 game_time = 1;</code>
           */
          public int getGameTime() {
            return gameTime_;
          }

          public static final int DAMAGE_BY_ABILITY_FIELD_NUMBER = 2;
          private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility> damageByAbility_;
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
           */
          public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility> getDamageByAbilityList() {
            return damageByAbility_;
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
           */
          public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbilityOrBuilder> 
              getDamageByAbilityOrBuilderList() {
            return damageByAbility_;
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
           */
          public int getDamageByAbilityCount() {
            return damageByAbility_.size();
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility getDamageByAbility(int index) {
            return damageByAbility_.get(index);
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbilityOrBuilder getDamageByAbilityOrBuilder(
              int index) {
            return damageByAbility_.get(index);
          }

          private void initFields() {
            gameTime_ = 0;
            damageByAbility_ = java.util.Collections.emptyList();
          }
          private byte memoizedIsInitialized = -1;
          public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
          }

          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              output.writeInt32(1, gameTime_);
            }
            for (int i = 0; i < damageByAbility_.size(); i++) {
              output.writeMessage(2, damageByAbility_.get(i));
            }
            getUnknownFields().writeTo(output);
          }

          private int memoizedSerializedSize = -1;
          public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(1, gameTime_);
            }
            for (int i = 0; i < damageByAbility_.size(); i++) {
              size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(2, damageByAbility_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
          }

          private static final long serialVersionUID = 0L;
          @java.lang.Override
          protected java.lang.Object writeReplace()
              throws java.io.ObjectStreamException {
            return super.writeReplace();
          }

          public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return PARSER.parseFrom(input);
          }
          public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
          }
          public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
          }
          public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
          }
          public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return PARSER.parseFrom(input);
          }
          public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
          }

          public static Builder newBuilder() { return Builder.create(); }
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment prototype) {
            return newBuilder().mergeFrom(prototype);
          }
          public Builder toBuilder() { return newBuilder(this); }

          @java.lang.Override
          protected Builder newBuilderForType(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
          }
          /**
           * Protobuf type {@code CDOTAMatchPrivateMetadata.Team.Player.CombatSegment}
           */
          public static final class Builder extends
              com.google.protobuf.GeneratedMessage.Builder<Builder> implements
              // @@protoc_insertion_point(builder_implements:CDOTAMatchPrivateMetadata.Team.Player.CombatSegment)
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegmentOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
              return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
                internalGetFieldAccessorTable() {
              return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                      skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.Builder.class);
            }

            // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.newBuilder()
            private Builder() {
              maybeForceBuilderInitialization();
            }

            private Builder(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
              super(parent);
              maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
              if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                getDamageByAbilityFieldBuilder();
              }
            }
            private static Builder create() {
              return new Builder();
            }

            public Builder clear() {
              super.clear();
              gameTime_ = 0;
              bitField0_ = (bitField0_ & ~0x00000001);
              if (damageByAbilityBuilder_ == null) {
                damageByAbility_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                damageByAbilityBuilder_.clear();
              }
              return this;
            }

            public Builder clone() {
              return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
              return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_descriptor;
            }

            public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment getDefaultInstanceForType() {
              return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.getDefaultInstance();
            }

            public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment build() {
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment result = buildPartial();
              if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return result;
            }

            public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment buildPartial() {
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment(this);
              int from_bitField0_ = bitField0_;
              int to_bitField0_ = 0;
              if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                to_bitField0_ |= 0x00000001;
              }
              result.gameTime_ = gameTime_;
              if (damageByAbilityBuilder_ == null) {
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  damageByAbility_ = java.util.Collections.unmodifiableList(damageByAbility_);
                  bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.damageByAbility_ = damageByAbility_;
              } else {
                result.damageByAbility_ = damageByAbilityBuilder_.build();
              }
              result.bitField0_ = to_bitField0_;
              onBuilt();
              return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
              if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment) {
                return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment)other);
              } else {
                super.mergeFrom(other);
                return this;
              }
            }

            public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment other) {
              if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.getDefaultInstance()) return this;
              if (other.hasGameTime()) {
                setGameTime(other.getGameTime());
              }
              if (damageByAbilityBuilder_ == null) {
                if (!other.damageByAbility_.isEmpty()) {
                  if (damageByAbility_.isEmpty()) {
                    damageByAbility_ = other.damageByAbility_;
                    bitField0_ = (bitField0_ & ~0x00000002);
                  } else {
                    ensureDamageByAbilityIsMutable();
                    damageByAbility_.addAll(other.damageByAbility_);
                  }
                  onChanged();
                }
              } else {
                if (!other.damageByAbility_.isEmpty()) {
                  if (damageByAbilityBuilder_.isEmpty()) {
                    damageByAbilityBuilder_.dispose();
                    damageByAbilityBuilder_ = null;
                    damageByAbility_ = other.damageByAbility_;
                    bitField0_ = (bitField0_ & ~0x00000002);
                    damageByAbilityBuilder_ = 
                      com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                         getDamageByAbilityFieldBuilder() : null;
                  } else {
                    damageByAbilityBuilder_.addAllMessages(other.damageByAbility_);
                  }
                }
              }
              this.mergeUnknownFields(other.getUnknownFields());
              return this;
            }

            public final boolean isInitialized() {
              return true;
            }

            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment parsedMessage = null;
              try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment) e.getUnfinishedMessage();
                throw e;
              } finally {
                if (parsedMessage != null) {
                  mergeFrom(parsedMessage);
                }
              }
              return this;
            }
            private int bitField0_;

            private int gameTime_ ;
            /**
             * <code>optional int32 game_time = 1;</code>
             */
            public boolean hasGameTime() {
              return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>optional int32 game_time = 1;</code>
             */
            public int getGameTime() {
              return gameTime_;
            }
            /**
             * <code>optional int32 game_time = 1;</code>
             */
            public Builder setGameTime(int value) {
              bitField0_ |= 0x00000001;
              gameTime_ = value;
              onChanged();
              return this;
            }
            /**
             * <code>optional int32 game_time = 1;</code>
             */
            public Builder clearGameTime() {
              bitField0_ = (bitField0_ & ~0x00000001);
              gameTime_ = 0;
              onChanged();
              return this;
            }

            private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility> damageByAbility_ =
              java.util.Collections.emptyList();
            private void ensureDamageByAbilityIsMutable() {
              if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                damageByAbility_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility>(damageByAbility_);
                bitField0_ |= 0x00000002;
               }
            }

            private com.google.protobuf.RepeatedFieldBuilder<
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbilityOrBuilder> damageByAbilityBuilder_;

            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
             */
            public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility> getDamageByAbilityList() {
              if (damageByAbilityBuilder_ == null) {
                return java.util.Collections.unmodifiableList(damageByAbility_);
              } else {
                return damageByAbilityBuilder_.getMessageList();
              }
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
             */
            public int getDamageByAbilityCount() {
              if (damageByAbilityBuilder_ == null) {
                return damageByAbility_.size();
              } else {
                return damageByAbilityBuilder_.getCount();
              }
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
             */
            public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility getDamageByAbility(int index) {
              if (damageByAbilityBuilder_ == null) {
                return damageByAbility_.get(index);
              } else {
                return damageByAbilityBuilder_.getMessage(index);
              }
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
             */
            public Builder setDamageByAbility(
                int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility value) {
              if (damageByAbilityBuilder_ == null) {
                if (value == null) {
                  throw new NullPointerException();
                }
                ensureDamageByAbilityIsMutable();
                damageByAbility_.set(index, value);
                onChanged();
              } else {
                damageByAbilityBuilder_.setMessage(index, value);
              }
              return this;
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
             */
            public Builder setDamageByAbility(
                int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.Builder builderForValue) {
              if (damageByAbilityBuilder_ == null) {
                ensureDamageByAbilityIsMutable();
                damageByAbility_.set(index, builderForValue.build());
                onChanged();
              } else {
                damageByAbilityBuilder_.setMessage(index, builderForValue.build());
              }
              return this;
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
             */
            public Builder addDamageByAbility(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility value) {
              if (damageByAbilityBuilder_ == null) {
                if (value == null) {
                  throw new NullPointerException();
                }
                ensureDamageByAbilityIsMutable();
                damageByAbility_.add(value);
                onChanged();
              } else {
                damageByAbilityBuilder_.addMessage(value);
              }
              return this;
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
             */
            public Builder addDamageByAbility(
                int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility value) {
              if (damageByAbilityBuilder_ == null) {
                if (value == null) {
                  throw new NullPointerException();
                }
                ensureDamageByAbilityIsMutable();
                damageByAbility_.add(index, value);
                onChanged();
              } else {
                damageByAbilityBuilder_.addMessage(index, value);
              }
              return this;
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
             */
            public Builder addDamageByAbility(
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.Builder builderForValue) {
              if (damageByAbilityBuilder_ == null) {
                ensureDamageByAbilityIsMutable();
                damageByAbility_.add(builderForValue.build());
                onChanged();
              } else {
                damageByAbilityBuilder_.addMessage(builderForValue.build());
              }
              return this;
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
             */
            public Builder addDamageByAbility(
                int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.Builder builderForValue) {
              if (damageByAbilityBuilder_ == null) {
                ensureDamageByAbilityIsMutable();
                damageByAbility_.add(index, builderForValue.build());
                onChanged();
              } else {
                damageByAbilityBuilder_.addMessage(index, builderForValue.build());
              }
              return this;
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
             */
            public Builder addAllDamageByAbility(
                java.lang.Iterable<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility> values) {
              if (damageByAbilityBuilder_ == null) {
                ensureDamageByAbilityIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                    values, damageByAbility_);
                onChanged();
              } else {
                damageByAbilityBuilder_.addAllMessages(values);
              }
              return this;
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
             */
            public Builder clearDamageByAbility() {
              if (damageByAbilityBuilder_ == null) {
                damageByAbility_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
              } else {
                damageByAbilityBuilder_.clear();
              }
              return this;
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
             */
            public Builder removeDamageByAbility(int index) {
              if (damageByAbilityBuilder_ == null) {
                ensureDamageByAbilityIsMutable();
                damageByAbility_.remove(index);
                onChanged();
              } else {
                damageByAbilityBuilder_.remove(index);
              }
              return this;
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
             */
            public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.Builder getDamageByAbilityBuilder(
                int index) {
              return getDamageByAbilityFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
             */
            public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbilityOrBuilder getDamageByAbilityOrBuilder(
                int index) {
              if (damageByAbilityBuilder_ == null) {
                return damageByAbility_.get(index);  } else {
                return damageByAbilityBuilder_.getMessageOrBuilder(index);
              }
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
             */
            public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbilityOrBuilder> 
                 getDamageByAbilityOrBuilderList() {
              if (damageByAbilityBuilder_ != null) {
                return damageByAbilityBuilder_.getMessageOrBuilderList();
              } else {
                return java.util.Collections.unmodifiableList(damageByAbility_);
              }
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
             */
            public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.Builder addDamageByAbilityBuilder() {
              return getDamageByAbilityFieldBuilder().addBuilder(
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.getDefaultInstance());
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
             */
            public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.Builder addDamageByAbilityBuilder(
                int index) {
              return getDamageByAbilityFieldBuilder().addBuilder(
                  index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.getDefaultInstance());
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility damage_by_ability = 2;</code>
             */
            public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.Builder> 
                 getDamageByAbilityBuilderList() {
              return getDamageByAbilityFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilder<
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbilityOrBuilder> 
                getDamageByAbilityFieldBuilder() {
              if (damageByAbilityBuilder_ == null) {
                damageByAbilityBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbility.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.DamageByAbilityOrBuilder>(
                        damageByAbility_,
                        ((bitField0_ & 0x00000002) == 0x00000002),
                        getParentForChildren(),
                        isClean());
                damageByAbility_ = null;
              }
              return damageByAbilityBuilder_;
            }

            // @@protoc_insertion_point(builder_scope:CDOTAMatchPrivateMetadata.Team.Player.CombatSegment)
          }

          static {
            defaultInstance = new CombatSegment(true);
            defaultInstance.initFields();
          }

          // @@protoc_insertion_point(class_scope:CDOTAMatchPrivateMetadata.Team.Player.CombatSegment)
        }

        public interface BuffRecordOrBuilder extends
            // @@protoc_insertion_point(interface_extends:CDOTAMatchPrivateMetadata.Team.Player.BuffRecord)
            com.google.protobuf.MessageOrBuilder {

          /**
           * <code>optional uint32 buff_ability_id = 1;</code>
           */
          boolean hasBuffAbilityId();
          /**
           * <code>optional uint32 buff_ability_id = 1;</code>
           */
          int getBuffAbilityId();

          /**
           * <code>optional string buff_modifier_name = 3;</code>
           */
          boolean hasBuffModifierName();
          /**
           * <code>optional string buff_modifier_name = 3;</code>
           */
          java.lang.String getBuffModifierName();
          /**
           * <code>optional string buff_modifier_name = 3;</code>
           */
          com.google.protobuf.ByteString
              getBuffModifierNameBytes();

          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
           */
          java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget> 
              getByHeroTargetsList();
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
           */
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget getByHeroTargets(int index);
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
           */
          int getByHeroTargetsCount();
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
           */
          java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTargetOrBuilder> 
              getByHeroTargetsOrBuilderList();
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
           */
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTargetOrBuilder getByHeroTargetsOrBuilder(
              int index);
        }
        /**
         * Protobuf type {@code CDOTAMatchPrivateMetadata.Team.Player.BuffRecord}
         */
        public static final class BuffRecord extends
            com.google.protobuf.GeneratedMessage implements
            // @@protoc_insertion_point(message_implements:CDOTAMatchPrivateMetadata.Team.Player.BuffRecord)
            BuffRecordOrBuilder {
          // Use BuffRecord.newBuilder() to construct.
          private BuffRecord(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
          }
          private BuffRecord(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

          private static final BuffRecord defaultInstance;
          public static BuffRecord getDefaultInstance() {
            return defaultInstance;
          }

          public BuffRecord getDefaultInstanceForType() {
            return defaultInstance;
          }

          private final com.google.protobuf.UnknownFieldSet unknownFields;
          @java.lang.Override
          public final com.google.protobuf.UnknownFieldSet
              getUnknownFields() {
            return this.unknownFields;
          }
          private BuffRecord(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(input, unknownFields,
                                           extensionRegistry, tag)) {
                      done = true;
                    }
                    break;
                  }
                  case 8: {
                    bitField0_ |= 0x00000001;
                    buffAbilityId_ = input.readUInt32();
                    break;
                  }
                  case 18: {
                    if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                      byHeroTargets_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget>();
                      mutable_bitField0_ |= 0x00000004;
                    }
                    byHeroTargets_.add(input.readMessage(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget.PARSER, extensionRegistry));
                    break;
                  }
                  case 26: {
                    com.google.protobuf.ByteString bs = input.readBytes();
                    bitField0_ |= 0x00000002;
                    buffModifierName_ = bs;
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this);
            } finally {
              if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                byHeroTargets_ = java.util.Collections.unmodifiableList(byHeroTargets_);
              }
              this.unknownFields = unknownFields.build();
              makeExtensionsImmutable();
            }
          }
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_BuffRecord_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_BuffRecord_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.Builder.class);
          }

          public static com.google.protobuf.Parser<BuffRecord> PARSER =
              new com.google.protobuf.AbstractParser<BuffRecord>() {
            public BuffRecord parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return new BuffRecord(input, extensionRegistry);
            }
          };

          @java.lang.Override
          public com.google.protobuf.Parser<BuffRecord> getParserForType() {
            return PARSER;
          }

          public interface ByHeroTargetOrBuilder extends
              // @@protoc_insertion_point(interface_extends:CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget)
              com.google.protobuf.MessageOrBuilder {

            /**
             * <code>optional uint32 hero_id = 1;</code>
             */
            boolean hasHeroId();
            /**
             * <code>optional uint32 hero_id = 1;</code>
             */
            int getHeroId();

            /**
             * <code>optional float elapsed_duration = 2;</code>
             */
            boolean hasElapsedDuration();
            /**
             * <code>optional float elapsed_duration = 2;</code>
             */
            float getElapsedDuration();

            /**
             * <code>optional bool is_hidden = 3;</code>
             */
            boolean hasIsHidden();
            /**
             * <code>optional bool is_hidden = 3;</code>
             */
            boolean getIsHidden();
          }
          /**
           * Protobuf type {@code CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget}
           */
          public static final class ByHeroTarget extends
              com.google.protobuf.GeneratedMessage implements
              // @@protoc_insertion_point(message_implements:CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget)
              ByHeroTargetOrBuilder {
            // Use ByHeroTarget.newBuilder() to construct.
            private ByHeroTarget(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
              super(builder);
              this.unknownFields = builder.getUnknownFields();
            }
            private ByHeroTarget(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

            private static final ByHeroTarget defaultInstance;
            public static ByHeroTarget getDefaultInstance() {
              return defaultInstance;
            }

            public ByHeroTarget getDefaultInstanceForType() {
              return defaultInstance;
            }

            private final com.google.protobuf.UnknownFieldSet unknownFields;
            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet
                getUnknownFields() {
              return this.unknownFields;
            }
            private ByHeroTarget(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              initFields();
              int mutable_bitField0_ = 0;
              com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                  com.google.protobuf.UnknownFieldSet.newBuilder();
              try {
                boolean done = false;
                while (!done) {
                  int tag = input.readTag();
                  switch (tag) {
                    case 0:
                      done = true;
                      break;
                    default: {
                      if (!parseUnknownField(input, unknownFields,
                                             extensionRegistry, tag)) {
                        done = true;
                      }
                      break;
                    }
                    case 8: {
                      bitField0_ |= 0x00000001;
                      heroId_ = input.readUInt32();
                      break;
                    }
                    case 21: {
                      bitField0_ |= 0x00000002;
                      elapsedDuration_ = input.readFloat();
                      break;
                    }
                    case 24: {
                      bitField0_ |= 0x00000004;
                      isHidden_ = input.readBool();
                      break;
                    }
                  }
                }
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
              } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this);
              } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
              }
            }
            public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
              return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_BuffRecord_ByHeroTarget_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
                internalGetFieldAccessorTable() {
              return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_BuffRecord_ByHeroTarget_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                      skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget.Builder.class);
            }

            public static com.google.protobuf.Parser<ByHeroTarget> PARSER =
                new com.google.protobuf.AbstractParser<ByHeroTarget>() {
              public ByHeroTarget parsePartialFrom(
                  com.google.protobuf.CodedInputStream input,
                  com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                  throws com.google.protobuf.InvalidProtocolBufferException {
                return new ByHeroTarget(input, extensionRegistry);
              }
            };

            @java.lang.Override
            public com.google.protobuf.Parser<ByHeroTarget> getParserForType() {
              return PARSER;
            }

            private int bitField0_;
            public static final int HERO_ID_FIELD_NUMBER = 1;
            private int heroId_;
            /**
             * <code>optional uint32 hero_id = 1;</code>
             */
            public boolean hasHeroId() {
              return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>optional uint32 hero_id = 1;</code>
             */
            public int getHeroId() {
              return heroId_;
            }

            public static final int ELAPSED_DURATION_FIELD_NUMBER = 2;
            private float elapsedDuration_;
            /**
             * <code>optional float elapsed_duration = 2;</code>
             */
            public boolean hasElapsedDuration() {
              return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>optional float elapsed_duration = 2;</code>
             */
            public float getElapsedDuration() {
              return elapsedDuration_;
            }

            public static final int IS_HIDDEN_FIELD_NUMBER = 3;
            private boolean isHidden_;
            /**
             * <code>optional bool is_hidden = 3;</code>
             */
            public boolean hasIsHidden() {
              return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <code>optional bool is_hidden = 3;</code>
             */
            public boolean getIsHidden() {
              return isHidden_;
            }

            private void initFields() {
              heroId_ = 0;
              elapsedDuration_ = 0F;
              isHidden_ = false;
            }
            private byte memoizedIsInitialized = -1;
            public final boolean isInitialized() {
              byte isInitialized = memoizedIsInitialized;
              if (isInitialized == 1) return true;
              if (isInitialized == 0) return false;

              memoizedIsInitialized = 1;
              return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                                throws java.io.IOException {
              getSerializedSize();
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeUInt32(1, heroId_);
              }
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeFloat(2, elapsedDuration_);
              }
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeBool(3, isHidden_);
              }
              getUnknownFields().writeTo(output);
            }

            private int memoizedSerializedSize = -1;
            public int getSerializedSize() {
              int size = memoizedSerializedSize;
              if (size != -1) return size;

              size = 0;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                  .computeUInt32Size(1, heroId_);
              }
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                  .computeFloatSize(2, elapsedDuration_);
              }
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                  .computeBoolSize(3, isHidden_);
              }
              size += getUnknownFields().getSerializedSize();
              memoizedSerializedSize = size;
              return size;
            }

            private static final long serialVersionUID = 0L;
            @java.lang.Override
            protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
              return super.writeReplace();
            }

            public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return PARSER.parseFrom(data);
            }
            public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return PARSER.parseFrom(data, extensionRegistry);
            }
            public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return PARSER.parseFrom(data);
            }
            public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return PARSER.parseFrom(data, extensionRegistry);
            }
            public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget parseFrom(java.io.InputStream input)
                throws java.io.IOException {
              return PARSER.parseFrom(input);
            }
            public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              return PARSER.parseFrom(input, extensionRegistry);
            }
            public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
              return PARSER.parseDelimitedFrom(input);
            }
            public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              return PARSER.parseDelimitedFrom(input, extensionRegistry);
            }
            public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
              return PARSER.parseFrom(input);
            }
            public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              return PARSER.parseFrom(input, extensionRegistry);
            }

            public static Builder newBuilder() { return Builder.create(); }
            public Builder newBuilderForType() { return newBuilder(); }
            public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget prototype) {
              return newBuilder().mergeFrom(prototype);
            }
            public Builder toBuilder() { return newBuilder(this); }

            @java.lang.Override
            protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
              Builder builder = new Builder(parent);
              return builder;
            }
            /**
             * Protobuf type {@code CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget}
             */
            public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget)
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTargetOrBuilder {
              public static final com.google.protobuf.Descriptors.Descriptor
                  getDescriptor() {
                return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_BuffRecord_ByHeroTarget_descriptor;
              }

              protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
                  internalGetFieldAccessorTable() {
                return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_BuffRecord_ByHeroTarget_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget.Builder.class);
              }

              // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget.newBuilder()
              private Builder() {
                maybeForceBuilderInitialization();
              }

              private Builder(
                  com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
              }
              private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
              }
              private static Builder create() {
                return new Builder();
              }

              public Builder clear() {
                super.clear();
                heroId_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                elapsedDuration_ = 0F;
                bitField0_ = (bitField0_ & ~0x00000002);
                isHidden_ = false;
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
              }

              public Builder clone() {
                return create().mergeFrom(buildPartial());
              }

              public com.google.protobuf.Descriptors.Descriptor
                  getDescriptorForType() {
                return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_BuffRecord_ByHeroTarget_descriptor;
              }

              public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget getDefaultInstanceForType() {
                return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget.getDefaultInstance();
              }

              public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget build() {
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget result = buildPartial();
                if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
                }
                return result;
              }

              public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget buildPartial() {
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                  to_bitField0_ |= 0x00000001;
                }
                result.heroId_ = heroId_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                  to_bitField0_ |= 0x00000002;
                }
                result.elapsedDuration_ = elapsedDuration_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                  to_bitField0_ |= 0x00000004;
                }
                result.isHidden_ = isHidden_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
              }

              public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget) {
                  return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget)other);
                } else {
                  super.mergeFrom(other);
                  return this;
                }
              }

              public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget other) {
                if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget.getDefaultInstance()) return this;
                if (other.hasHeroId()) {
                  setHeroId(other.getHeroId());
                }
                if (other.hasElapsedDuration()) {
                  setElapsedDuration(other.getElapsedDuration());
                }
                if (other.hasIsHidden()) {
                  setIsHidden(other.getIsHidden());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
              }

              public final boolean isInitialized() {
                return true;
              }

              public Builder mergeFrom(
                  com.google.protobuf.CodedInputStream input,
                  com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                  throws java.io.IOException {
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget parsedMessage = null;
                try {
                  parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                  parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget) e.getUnfinishedMessage();
                  throw e;
                } finally {
                  if (parsedMessage != null) {
                    mergeFrom(parsedMessage);
                  }
                }
                return this;
              }
              private int bitField0_;

              private int heroId_ ;
              /**
               * <code>optional uint32 hero_id = 1;</code>
               */
              public boolean hasHeroId() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
              }
              /**
               * <code>optional uint32 hero_id = 1;</code>
               */
              public int getHeroId() {
                return heroId_;
              }
              /**
               * <code>optional uint32 hero_id = 1;</code>
               */
              public Builder setHeroId(int value) {
                bitField0_ |= 0x00000001;
                heroId_ = value;
                onChanged();
                return this;
              }
              /**
               * <code>optional uint32 hero_id = 1;</code>
               */
              public Builder clearHeroId() {
                bitField0_ = (bitField0_ & ~0x00000001);
                heroId_ = 0;
                onChanged();
                return this;
              }

              private float elapsedDuration_ ;
              /**
               * <code>optional float elapsed_duration = 2;</code>
               */
              public boolean hasElapsedDuration() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
              }
              /**
               * <code>optional float elapsed_duration = 2;</code>
               */
              public float getElapsedDuration() {
                return elapsedDuration_;
              }
              /**
               * <code>optional float elapsed_duration = 2;</code>
               */
              public Builder setElapsedDuration(float value) {
                bitField0_ |= 0x00000002;
                elapsedDuration_ = value;
                onChanged();
                return this;
              }
              /**
               * <code>optional float elapsed_duration = 2;</code>
               */
              public Builder clearElapsedDuration() {
                bitField0_ = (bitField0_ & ~0x00000002);
                elapsedDuration_ = 0F;
                onChanged();
                return this;
              }

              private boolean isHidden_ ;
              /**
               * <code>optional bool is_hidden = 3;</code>
               */
              public boolean hasIsHidden() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
              }
              /**
               * <code>optional bool is_hidden = 3;</code>
               */
              public boolean getIsHidden() {
                return isHidden_;
              }
              /**
               * <code>optional bool is_hidden = 3;</code>
               */
              public Builder setIsHidden(boolean value) {
                bitField0_ |= 0x00000004;
                isHidden_ = value;
                onChanged();
                return this;
              }
              /**
               * <code>optional bool is_hidden = 3;</code>
               */
              public Builder clearIsHidden() {
                bitField0_ = (bitField0_ & ~0x00000004);
                isHidden_ = false;
                onChanged();
                return this;
              }

              // @@protoc_insertion_point(builder_scope:CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget)
            }

            static {
              defaultInstance = new ByHeroTarget(true);
              defaultInstance.initFields();
            }

            // @@protoc_insertion_point(class_scope:CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget)
          }

          private int bitField0_;
          public static final int BUFF_ABILITY_ID_FIELD_NUMBER = 1;
          private int buffAbilityId_;
          /**
           * <code>optional uint32 buff_ability_id = 1;</code>
           */
          public boolean hasBuffAbilityId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional uint32 buff_ability_id = 1;</code>
           */
          public int getBuffAbilityId() {
            return buffAbilityId_;
          }

          public static final int BUFF_MODIFIER_NAME_FIELD_NUMBER = 3;
          private java.lang.Object buffModifierName_;
          /**
           * <code>optional string buff_modifier_name = 3;</code>
           */
          public boolean hasBuffModifierName() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional string buff_modifier_name = 3;</code>
           */
          public java.lang.String getBuffModifierName() {
            java.lang.Object ref = buffModifierName_;
            if (ref instanceof java.lang.String) {
              return (java.lang.String) ref;
            } else {
              com.google.protobuf.ByteString bs = 
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                buffModifierName_ = s;
              }
              return s;
            }
          }
          /**
           * <code>optional string buff_modifier_name = 3;</code>
           */
          public com.google.protobuf.ByteString
              getBuffModifierNameBytes() {
            java.lang.Object ref = buffModifierName_;
            if (ref instanceof java.lang.String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              buffModifierName_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }

          public static final int BY_HERO_TARGETS_FIELD_NUMBER = 2;
          private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget> byHeroTargets_;
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
           */
          public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget> getByHeroTargetsList() {
            return byHeroTargets_;
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
           */
          public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTargetOrBuilder> 
              getByHeroTargetsOrBuilderList() {
            return byHeroTargets_;
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
           */
          public int getByHeroTargetsCount() {
            return byHeroTargets_.size();
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget getByHeroTargets(int index) {
            return byHeroTargets_.get(index);
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTargetOrBuilder getByHeroTargetsOrBuilder(
              int index) {
            return byHeroTargets_.get(index);
          }

          private void initFields() {
            buffAbilityId_ = 0;
            buffModifierName_ = "";
            byHeroTargets_ = java.util.Collections.emptyList();
          }
          private byte memoizedIsInitialized = -1;
          public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
          }

          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              output.writeUInt32(1, buffAbilityId_);
            }
            for (int i = 0; i < byHeroTargets_.size(); i++) {
              output.writeMessage(2, byHeroTargets_.get(i));
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              output.writeBytes(3, getBuffModifierNameBytes());
            }
            getUnknownFields().writeTo(output);
          }

          private int memoizedSerializedSize = -1;
          public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(1, buffAbilityId_);
            }
            for (int i = 0; i < byHeroTargets_.size(); i++) {
              size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(2, byHeroTargets_.get(i));
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(3, getBuffModifierNameBytes());
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
          }

          private static final long serialVersionUID = 0L;
          @java.lang.Override
          protected java.lang.Object writeReplace()
              throws java.io.ObjectStreamException {
            return super.writeReplace();
          }

          public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return PARSER.parseFrom(input);
          }
          public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
          }
          public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
          }
          public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
          }
          public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return PARSER.parseFrom(input);
          }
          public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
          }

          public static Builder newBuilder() { return Builder.create(); }
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord prototype) {
            return newBuilder().mergeFrom(prototype);
          }
          public Builder toBuilder() { return newBuilder(this); }

          @java.lang.Override
          protected Builder newBuilderForType(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
          }
          /**
           * Protobuf type {@code CDOTAMatchPrivateMetadata.Team.Player.BuffRecord}
           */
          public static final class Builder extends
              com.google.protobuf.GeneratedMessage.Builder<Builder> implements
              // @@protoc_insertion_point(builder_implements:CDOTAMatchPrivateMetadata.Team.Player.BuffRecord)
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecordOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
              return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_BuffRecord_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
                internalGetFieldAccessorTable() {
              return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_BuffRecord_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                      skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.Builder.class);
            }

            // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.newBuilder()
            private Builder() {
              maybeForceBuilderInitialization();
            }

            private Builder(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
              super(parent);
              maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
              if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                getByHeroTargetsFieldBuilder();
              }
            }
            private static Builder create() {
              return new Builder();
            }

            public Builder clear() {
              super.clear();
              buffAbilityId_ = 0;
              bitField0_ = (bitField0_ & ~0x00000001);
              buffModifierName_ = "";
              bitField0_ = (bitField0_ & ~0x00000002);
              if (byHeroTargetsBuilder_ == null) {
                byHeroTargets_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                byHeroTargetsBuilder_.clear();
              }
              return this;
            }

            public Builder clone() {
              return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
              return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_BuffRecord_descriptor;
            }

            public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord getDefaultInstanceForType() {
              return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.getDefaultInstance();
            }

            public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord build() {
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord result = buildPartial();
              if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return result;
            }

            public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buildPartial() {
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord(this);
              int from_bitField0_ = bitField0_;
              int to_bitField0_ = 0;
              if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                to_bitField0_ |= 0x00000001;
              }
              result.buffAbilityId_ = buffAbilityId_;
              if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                to_bitField0_ |= 0x00000002;
              }
              result.buffModifierName_ = buffModifierName_;
              if (byHeroTargetsBuilder_ == null) {
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  byHeroTargets_ = java.util.Collections.unmodifiableList(byHeroTargets_);
                  bitField0_ = (bitField0_ & ~0x00000004);
                }
                result.byHeroTargets_ = byHeroTargets_;
              } else {
                result.byHeroTargets_ = byHeroTargetsBuilder_.build();
              }
              result.bitField0_ = to_bitField0_;
              onBuilt();
              return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
              if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord) {
                return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord)other);
              } else {
                super.mergeFrom(other);
                return this;
              }
            }

            public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord other) {
              if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.getDefaultInstance()) return this;
              if (other.hasBuffAbilityId()) {
                setBuffAbilityId(other.getBuffAbilityId());
              }
              if (other.hasBuffModifierName()) {
                bitField0_ |= 0x00000002;
                buffModifierName_ = other.buffModifierName_;
                onChanged();
              }
              if (byHeroTargetsBuilder_ == null) {
                if (!other.byHeroTargets_.isEmpty()) {
                  if (byHeroTargets_.isEmpty()) {
                    byHeroTargets_ = other.byHeroTargets_;
                    bitField0_ = (bitField0_ & ~0x00000004);
                  } else {
                    ensureByHeroTargetsIsMutable();
                    byHeroTargets_.addAll(other.byHeroTargets_);
                  }
                  onChanged();
                }
              } else {
                if (!other.byHeroTargets_.isEmpty()) {
                  if (byHeroTargetsBuilder_.isEmpty()) {
                    byHeroTargetsBuilder_.dispose();
                    byHeroTargetsBuilder_ = null;
                    byHeroTargets_ = other.byHeroTargets_;
                    bitField0_ = (bitField0_ & ~0x00000004);
                    byHeroTargetsBuilder_ = 
                      com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                         getByHeroTargetsFieldBuilder() : null;
                  } else {
                    byHeroTargetsBuilder_.addAllMessages(other.byHeroTargets_);
                  }
                }
              }
              this.mergeUnknownFields(other.getUnknownFields());
              return this;
            }

            public final boolean isInitialized() {
              return true;
            }

            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord parsedMessage = null;
              try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord) e.getUnfinishedMessage();
                throw e;
              } finally {
                if (parsedMessage != null) {
                  mergeFrom(parsedMessage);
                }
              }
              return this;
            }
            private int bitField0_;

            private int buffAbilityId_ ;
            /**
             * <code>optional uint32 buff_ability_id = 1;</code>
             */
            public boolean hasBuffAbilityId() {
              return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>optional uint32 buff_ability_id = 1;</code>
             */
            public int getBuffAbilityId() {
              return buffAbilityId_;
            }
            /**
             * <code>optional uint32 buff_ability_id = 1;</code>
             */
            public Builder setBuffAbilityId(int value) {
              bitField0_ |= 0x00000001;
              buffAbilityId_ = value;
              onChanged();
              return this;
            }
            /**
             * <code>optional uint32 buff_ability_id = 1;</code>
             */
            public Builder clearBuffAbilityId() {
              bitField0_ = (bitField0_ & ~0x00000001);
              buffAbilityId_ = 0;
              onChanged();
              return this;
            }

            private java.lang.Object buffModifierName_ = "";
            /**
             * <code>optional string buff_modifier_name = 3;</code>
             */
            public boolean hasBuffModifierName() {
              return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>optional string buff_modifier_name = 3;</code>
             */
            public java.lang.String getBuffModifierName() {
              java.lang.Object ref = buffModifierName_;
              if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs =
                    (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                  buffModifierName_ = s;
                }
                return s;
              } else {
                return (java.lang.String) ref;
              }
            }
            /**
             * <code>optional string buff_modifier_name = 3;</code>
             */
            public com.google.protobuf.ByteString
                getBuffModifierNameBytes() {
              java.lang.Object ref = buffModifierName_;
              if (ref instanceof String) {
                com.google.protobuf.ByteString b = 
                    com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
                buffModifierName_ = b;
                return b;
              } else {
                return (com.google.protobuf.ByteString) ref;
              }
            }
            /**
             * <code>optional string buff_modifier_name = 3;</code>
             */
            public Builder setBuffModifierName(
                java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
              buffModifierName_ = value;
              onChanged();
              return this;
            }
            /**
             * <code>optional string buff_modifier_name = 3;</code>
             */
            public Builder clearBuffModifierName() {
              bitField0_ = (bitField0_ & ~0x00000002);
              buffModifierName_ = getDefaultInstance().getBuffModifierName();
              onChanged();
              return this;
            }
            /**
             * <code>optional string buff_modifier_name = 3;</code>
             */
            public Builder setBuffModifierNameBytes(
                com.google.protobuf.ByteString value) {
              if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
              buffModifierName_ = value;
              onChanged();
              return this;
            }

            private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget> byHeroTargets_ =
              java.util.Collections.emptyList();
            private void ensureByHeroTargetsIsMutable() {
              if (!((bitField0_ & 0x00000004) == 0x00000004)) {
                byHeroTargets_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget>(byHeroTargets_);
                bitField0_ |= 0x00000004;
               }
            }

            private com.google.protobuf.RepeatedFieldBuilder<
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTargetOrBuilder> byHeroTargetsBuilder_;

            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
             */
            public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget> getByHeroTargetsList() {
              if (byHeroTargetsBuilder_ == null) {
                return java.util.Collections.unmodifiableList(byHeroTargets_);
              } else {
                return byHeroTargetsBuilder_.getMessageList();
              }
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
             */
            public int getByHeroTargetsCount() {
              if (byHeroTargetsBuilder_ == null) {
                return byHeroTargets_.size();
              } else {
                return byHeroTargetsBuilder_.getCount();
              }
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
             */
            public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget getByHeroTargets(int index) {
              if (byHeroTargetsBuilder_ == null) {
                return byHeroTargets_.get(index);
              } else {
                return byHeroTargetsBuilder_.getMessage(index);
              }
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
             */
            public Builder setByHeroTargets(
                int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget value) {
              if (byHeroTargetsBuilder_ == null) {
                if (value == null) {
                  throw new NullPointerException();
                }
                ensureByHeroTargetsIsMutable();
                byHeroTargets_.set(index, value);
                onChanged();
              } else {
                byHeroTargetsBuilder_.setMessage(index, value);
              }
              return this;
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
             */
            public Builder setByHeroTargets(
                int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget.Builder builderForValue) {
              if (byHeroTargetsBuilder_ == null) {
                ensureByHeroTargetsIsMutable();
                byHeroTargets_.set(index, builderForValue.build());
                onChanged();
              } else {
                byHeroTargetsBuilder_.setMessage(index, builderForValue.build());
              }
              return this;
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
             */
            public Builder addByHeroTargets(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget value) {
              if (byHeroTargetsBuilder_ == null) {
                if (value == null) {
                  throw new NullPointerException();
                }
                ensureByHeroTargetsIsMutable();
                byHeroTargets_.add(value);
                onChanged();
              } else {
                byHeroTargetsBuilder_.addMessage(value);
              }
              return this;
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
             */
            public Builder addByHeroTargets(
                int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget value) {
              if (byHeroTargetsBuilder_ == null) {
                if (value == null) {
                  throw new NullPointerException();
                }
                ensureByHeroTargetsIsMutable();
                byHeroTargets_.add(index, value);
                onChanged();
              } else {
                byHeroTargetsBuilder_.addMessage(index, value);
              }
              return this;
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
             */
            public Builder addByHeroTargets(
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget.Builder builderForValue) {
              if (byHeroTargetsBuilder_ == null) {
                ensureByHeroTargetsIsMutable();
                byHeroTargets_.add(builderForValue.build());
                onChanged();
              } else {
                byHeroTargetsBuilder_.addMessage(builderForValue.build());
              }
              return this;
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
             */
            public Builder addByHeroTargets(
                int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget.Builder builderForValue) {
              if (byHeroTargetsBuilder_ == null) {
                ensureByHeroTargetsIsMutable();
                byHeroTargets_.add(index, builderForValue.build());
                onChanged();
              } else {
                byHeroTargetsBuilder_.addMessage(index, builderForValue.build());
              }
              return this;
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
             */
            public Builder addAllByHeroTargets(
                java.lang.Iterable<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget> values) {
              if (byHeroTargetsBuilder_ == null) {
                ensureByHeroTargetsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                    values, byHeroTargets_);
                onChanged();
              } else {
                byHeroTargetsBuilder_.addAllMessages(values);
              }
              return this;
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
             */
            public Builder clearByHeroTargets() {
              if (byHeroTargetsBuilder_ == null) {
                byHeroTargets_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000004);
                onChanged();
              } else {
                byHeroTargetsBuilder_.clear();
              }
              return this;
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
             */
            public Builder removeByHeroTargets(int index) {
              if (byHeroTargetsBuilder_ == null) {
                ensureByHeroTargetsIsMutable();
                byHeroTargets_.remove(index);
                onChanged();
              } else {
                byHeroTargetsBuilder_.remove(index);
              }
              return this;
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
             */
            public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget.Builder getByHeroTargetsBuilder(
                int index) {
              return getByHeroTargetsFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
             */
            public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTargetOrBuilder getByHeroTargetsOrBuilder(
                int index) {
              if (byHeroTargetsBuilder_ == null) {
                return byHeroTargets_.get(index);  } else {
                return byHeroTargetsBuilder_.getMessageOrBuilder(index);
              }
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
             */
            public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTargetOrBuilder> 
                 getByHeroTargetsOrBuilderList() {
              if (byHeroTargetsBuilder_ != null) {
                return byHeroTargetsBuilder_.getMessageOrBuilderList();
              } else {
                return java.util.Collections.unmodifiableList(byHeroTargets_);
              }
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
             */
            public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget.Builder addByHeroTargetsBuilder() {
              return getByHeroTargetsFieldBuilder().addBuilder(
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget.getDefaultInstance());
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
             */
            public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget.Builder addByHeroTargetsBuilder(
                int index) {
              return getByHeroTargetsFieldBuilder().addBuilder(
                  index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget.getDefaultInstance());
            }
            /**
             * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget by_hero_targets = 2;</code>
             */
            public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget.Builder> 
                 getByHeroTargetsBuilderList() {
              return getByHeroTargetsFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilder<
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTargetOrBuilder> 
                getByHeroTargetsFieldBuilder() {
              if (byHeroTargetsBuilder_ == null) {
                byHeroTargetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTarget.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.ByHeroTargetOrBuilder>(
                        byHeroTargets_,
                        ((bitField0_ & 0x00000004) == 0x00000004),
                        getParentForChildren(),
                        isClean());
                byHeroTargets_ = null;
              }
              return byHeroTargetsBuilder_;
            }

            // @@protoc_insertion_point(builder_scope:CDOTAMatchPrivateMetadata.Team.Player.BuffRecord)
          }

          static {
            defaultInstance = new BuffRecord(true);
            defaultInstance.initFields();
          }

          // @@protoc_insertion_point(class_scope:CDOTAMatchPrivateMetadata.Team.Player.BuffRecord)
        }

        private int bitField0_;
        public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
        private int accountId_;
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public boolean hasAccountId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public int getAccountId() {
          return accountId_;
        }

        public static final int PLAYER_SLOT_FIELD_NUMBER = 2;
        private int playerSlot_;
        /**
         * <code>optional uint32 player_slot = 2;</code>
         */
        public boolean hasPlayerSlot() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 player_slot = 2;</code>
         */
        public int getPlayerSlot() {
          return playerSlot_;
        }

        public static final int POSITION_STREAM_FIELD_NUMBER = 3;
        private com.google.protobuf.ByteString positionStream_;
        /**
         * <code>optional bytes position_stream = 3;</code>
         */
        public boolean hasPositionStream() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional bytes position_stream = 3;</code>
         */
        public com.google.protobuf.ByteString getPositionStream() {
          return positionStream_;
        }

        public static final int COMBAT_SEGMENTS_FIELD_NUMBER = 4;
        private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment> combatSegments_;
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
         */
        public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment> getCombatSegmentsList() {
          return combatSegments_;
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
         */
        public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegmentOrBuilder> 
            getCombatSegmentsOrBuilderList() {
          return combatSegments_;
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
         */
        public int getCombatSegmentsCount() {
          return combatSegments_.size();
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment getCombatSegments(int index) {
          return combatSegments_.get(index);
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegmentOrBuilder getCombatSegmentsOrBuilder(
            int index) {
          return combatSegments_.get(index);
        }

        public static final int DAMAGE_UNIT_NAMES_FIELD_NUMBER = 5;
        private com.google.protobuf.LazyStringList damageUnitNames_;
        /**
         * <code>repeated string damage_unit_names = 5;</code>
         */
        public com.google.protobuf.ProtocolStringList
            getDamageUnitNamesList() {
          return damageUnitNames_;
        }
        /**
         * <code>repeated string damage_unit_names = 5;</code>
         */
        public int getDamageUnitNamesCount() {
          return damageUnitNames_.size();
        }
        /**
         * <code>repeated string damage_unit_names = 5;</code>
         */
        public java.lang.String getDamageUnitNames(int index) {
          return damageUnitNames_.get(index);
        }
        /**
         * <code>repeated string damage_unit_names = 5;</code>
         */
        public com.google.protobuf.ByteString
            getDamageUnitNamesBytes(int index) {
          return damageUnitNames_.getByteString(index);
        }

        public static final int BUFF_RECORDS_FIELD_NUMBER = 6;
        private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord> buffRecords_;
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
         */
        public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord> getBuffRecordsList() {
          return buffRecords_;
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
         */
        public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecordOrBuilder> 
            getBuffRecordsOrBuilderList() {
          return buffRecords_;
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
         */
        public int getBuffRecordsCount() {
          return buffRecords_.size();
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord getBuffRecords(int index) {
          return buffRecords_.get(index);
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecordOrBuilder getBuffRecordsOrBuilder(
            int index) {
          return buffRecords_.get(index);
        }

        private void initFields() {
          accountId_ = 0;
          playerSlot_ = 0;
          positionStream_ = com.google.protobuf.ByteString.EMPTY;
          combatSegments_ = java.util.Collections.emptyList();
          damageUnitNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          buffRecords_ = java.util.Collections.emptyList();
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt32(1, accountId_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeUInt32(2, playerSlot_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeBytes(3, positionStream_);
          }
          for (int i = 0; i < combatSegments_.size(); i++) {
            output.writeMessage(4, combatSegments_.get(i));
          }
          for (int i = 0; i < damageUnitNames_.size(); i++) {
            output.writeBytes(5, damageUnitNames_.getByteString(i));
          }
          for (int i = 0; i < buffRecords_.size(); i++) {
            output.writeMessage(6, buffRecords_.get(i));
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, accountId_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(2, playerSlot_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(3, positionStream_);
          }
          for (int i = 0; i < combatSegments_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, combatSegments_.get(i));
          }
          {
            int dataSize = 0;
            for (int i = 0; i < damageUnitNames_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeBytesSizeNoTag(damageUnitNames_.getByteString(i));
            }
            size += dataSize;
            size += 1 * getDamageUnitNamesList().size();
          }
          for (int i = 0; i < buffRecords_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(6, buffRecords_.get(i));
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CDOTAMatchPrivateMetadata.Team.Player}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:CDOTAMatchPrivateMetadata.Team.Player)
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.PlayerOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.Builder.class);
          }

          // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
              getCombatSegmentsFieldBuilder();
              getBuffRecordsFieldBuilder();
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            accountId_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            playerSlot_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            positionStream_ = com.google.protobuf.ByteString.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000004);
            if (combatSegmentsBuilder_ == null) {
              combatSegments_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              combatSegmentsBuilder_.clear();
            }
            damageUnitNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000010);
            if (buffRecordsBuilder_ == null) {
              buffRecords_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              buffRecordsBuilder_.clear();
            }
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Player_descriptor;
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player getDefaultInstanceForType() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.getDefaultInstance();
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player build() {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player buildPartial() {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.accountId_ = accountId_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.playerSlot_ = playerSlot_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            result.positionStream_ = positionStream_;
            if (combatSegmentsBuilder_ == null) {
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                combatSegments_ = java.util.Collections.unmodifiableList(combatSegments_);
                bitField0_ = (bitField0_ & ~0x00000008);
              }
              result.combatSegments_ = combatSegments_;
            } else {
              result.combatSegments_ = combatSegmentsBuilder_.build();
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              damageUnitNames_ = damageUnitNames_.getUnmodifiableView();
              bitField0_ = (bitField0_ & ~0x00000010);
            }
            result.damageUnitNames_ = damageUnitNames_;
            if (buffRecordsBuilder_ == null) {
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                buffRecords_ = java.util.Collections.unmodifiableList(buffRecords_);
                bitField0_ = (bitField0_ & ~0x00000020);
              }
              result.buffRecords_ = buffRecords_;
            } else {
              result.buffRecords_ = buffRecordsBuilder_.build();
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player) {
              return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player other) {
            if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.getDefaultInstance()) return this;
            if (other.hasAccountId()) {
              setAccountId(other.getAccountId());
            }
            if (other.hasPlayerSlot()) {
              setPlayerSlot(other.getPlayerSlot());
            }
            if (other.hasPositionStream()) {
              setPositionStream(other.getPositionStream());
            }
            if (combatSegmentsBuilder_ == null) {
              if (!other.combatSegments_.isEmpty()) {
                if (combatSegments_.isEmpty()) {
                  combatSegments_ = other.combatSegments_;
                  bitField0_ = (bitField0_ & ~0x00000008);
                } else {
                  ensureCombatSegmentsIsMutable();
                  combatSegments_.addAll(other.combatSegments_);
                }
                onChanged();
              }
            } else {
              if (!other.combatSegments_.isEmpty()) {
                if (combatSegmentsBuilder_.isEmpty()) {
                  combatSegmentsBuilder_.dispose();
                  combatSegmentsBuilder_ = null;
                  combatSegments_ = other.combatSegments_;
                  bitField0_ = (bitField0_ & ~0x00000008);
                  combatSegmentsBuilder_ = 
                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                       getCombatSegmentsFieldBuilder() : null;
                } else {
                  combatSegmentsBuilder_.addAllMessages(other.combatSegments_);
                }
              }
            }
            if (!other.damageUnitNames_.isEmpty()) {
              if (damageUnitNames_.isEmpty()) {
                damageUnitNames_ = other.damageUnitNames_;
                bitField0_ = (bitField0_ & ~0x00000010);
              } else {
                ensureDamageUnitNamesIsMutable();
                damageUnitNames_.addAll(other.damageUnitNames_);
              }
              onChanged();
            }
            if (buffRecordsBuilder_ == null) {
              if (!other.buffRecords_.isEmpty()) {
                if (buffRecords_.isEmpty()) {
                  buffRecords_ = other.buffRecords_;
                  bitField0_ = (bitField0_ & ~0x00000020);
                } else {
                  ensureBuffRecordsIsMutable();
                  buffRecords_.addAll(other.buffRecords_);
                }
                onChanged();
              }
            } else {
              if (!other.buffRecords_.isEmpty()) {
                if (buffRecordsBuilder_.isEmpty()) {
                  buffRecordsBuilder_.dispose();
                  buffRecordsBuilder_ = null;
                  buffRecords_ = other.buffRecords_;
                  bitField0_ = (bitField0_ & ~0x00000020);
                  buffRecordsBuilder_ = 
                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                       getBuffRecordsFieldBuilder() : null;
                } else {
                  buffRecordsBuilder_.addAllMessages(other.buffRecords_);
                }
              }
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int accountId_ ;
          /**
           * <code>optional uint32 account_id = 1;</code>
           */
          public boolean hasAccountId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional uint32 account_id = 1;</code>
           */
          public int getAccountId() {
            return accountId_;
          }
          /**
           * <code>optional uint32 account_id = 1;</code>
           */
          public Builder setAccountId(int value) {
            bitField0_ |= 0x00000001;
            accountId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 account_id = 1;</code>
           */
          public Builder clearAccountId() {
            bitField0_ = (bitField0_ & ~0x00000001);
            accountId_ = 0;
            onChanged();
            return this;
          }

          private int playerSlot_ ;
          /**
           * <code>optional uint32 player_slot = 2;</code>
           */
          public boolean hasPlayerSlot() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional uint32 player_slot = 2;</code>
           */
          public int getPlayerSlot() {
            return playerSlot_;
          }
          /**
           * <code>optional uint32 player_slot = 2;</code>
           */
          public Builder setPlayerSlot(int value) {
            bitField0_ |= 0x00000002;
            playerSlot_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 player_slot = 2;</code>
           */
          public Builder clearPlayerSlot() {
            bitField0_ = (bitField0_ & ~0x00000002);
            playerSlot_ = 0;
            onChanged();
            return this;
          }

          private com.google.protobuf.ByteString positionStream_ = com.google.protobuf.ByteString.EMPTY;
          /**
           * <code>optional bytes position_stream = 3;</code>
           */
          public boolean hasPositionStream() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional bytes position_stream = 3;</code>
           */
          public com.google.protobuf.ByteString getPositionStream() {
            return positionStream_;
          }
          /**
           * <code>optional bytes position_stream = 3;</code>
           */
          public Builder setPositionStream(com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
            positionStream_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bytes position_stream = 3;</code>
           */
          public Builder clearPositionStream() {
            bitField0_ = (bitField0_ & ~0x00000004);
            positionStream_ = getDefaultInstance().getPositionStream();
            onChanged();
            return this;
          }

          private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment> combatSegments_ =
            java.util.Collections.emptyList();
          private void ensureCombatSegmentsIsMutable() {
            if (!((bitField0_ & 0x00000008) == 0x00000008)) {
              combatSegments_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment>(combatSegments_);
              bitField0_ |= 0x00000008;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegmentOrBuilder> combatSegmentsBuilder_;

          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
           */
          public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment> getCombatSegmentsList() {
            if (combatSegmentsBuilder_ == null) {
              return java.util.Collections.unmodifiableList(combatSegments_);
            } else {
              return combatSegmentsBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
           */
          public int getCombatSegmentsCount() {
            if (combatSegmentsBuilder_ == null) {
              return combatSegments_.size();
            } else {
              return combatSegmentsBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment getCombatSegments(int index) {
            if (combatSegmentsBuilder_ == null) {
              return combatSegments_.get(index);
            } else {
              return combatSegmentsBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
           */
          public Builder setCombatSegments(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment value) {
            if (combatSegmentsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureCombatSegmentsIsMutable();
              combatSegments_.set(index, value);
              onChanged();
            } else {
              combatSegmentsBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
           */
          public Builder setCombatSegments(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.Builder builderForValue) {
            if (combatSegmentsBuilder_ == null) {
              ensureCombatSegmentsIsMutable();
              combatSegments_.set(index, builderForValue.build());
              onChanged();
            } else {
              combatSegmentsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
           */
          public Builder addCombatSegments(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment value) {
            if (combatSegmentsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureCombatSegmentsIsMutable();
              combatSegments_.add(value);
              onChanged();
            } else {
              combatSegmentsBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
           */
          public Builder addCombatSegments(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment value) {
            if (combatSegmentsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureCombatSegmentsIsMutable();
              combatSegments_.add(index, value);
              onChanged();
            } else {
              combatSegmentsBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
           */
          public Builder addCombatSegments(
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.Builder builderForValue) {
            if (combatSegmentsBuilder_ == null) {
              ensureCombatSegmentsIsMutable();
              combatSegments_.add(builderForValue.build());
              onChanged();
            } else {
              combatSegmentsBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
           */
          public Builder addCombatSegments(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.Builder builderForValue) {
            if (combatSegmentsBuilder_ == null) {
              ensureCombatSegmentsIsMutable();
              combatSegments_.add(index, builderForValue.build());
              onChanged();
            } else {
              combatSegmentsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
           */
          public Builder addAllCombatSegments(
              java.lang.Iterable<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment> values) {
            if (combatSegmentsBuilder_ == null) {
              ensureCombatSegmentsIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, combatSegments_);
              onChanged();
            } else {
              combatSegmentsBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
           */
          public Builder clearCombatSegments() {
            if (combatSegmentsBuilder_ == null) {
              combatSegments_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000008);
              onChanged();
            } else {
              combatSegmentsBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
           */
          public Builder removeCombatSegments(int index) {
            if (combatSegmentsBuilder_ == null) {
              ensureCombatSegmentsIsMutable();
              combatSegments_.remove(index);
              onChanged();
            } else {
              combatSegmentsBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.Builder getCombatSegmentsBuilder(
              int index) {
            return getCombatSegmentsFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegmentOrBuilder getCombatSegmentsOrBuilder(
              int index) {
            if (combatSegmentsBuilder_ == null) {
              return combatSegments_.get(index);  } else {
              return combatSegmentsBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
           */
          public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegmentOrBuilder> 
               getCombatSegmentsOrBuilderList() {
            if (combatSegmentsBuilder_ != null) {
              return combatSegmentsBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(combatSegments_);
            }
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.Builder addCombatSegmentsBuilder() {
            return getCombatSegmentsFieldBuilder().addBuilder(
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.getDefaultInstance());
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.Builder addCombatSegmentsBuilder(
              int index) {
            return getCombatSegmentsFieldBuilder().addBuilder(
                index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.getDefaultInstance());
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.CombatSegment combat_segments = 4;</code>
           */
          public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.Builder> 
               getCombatSegmentsBuilderList() {
            return getCombatSegmentsFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegmentOrBuilder> 
              getCombatSegmentsFieldBuilder() {
            if (combatSegmentsBuilder_ == null) {
              combatSegmentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegment.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.CombatSegmentOrBuilder>(
                      combatSegments_,
                      ((bitField0_ & 0x00000008) == 0x00000008),
                      getParentForChildren(),
                      isClean());
              combatSegments_ = null;
            }
            return combatSegmentsBuilder_;
          }

          private com.google.protobuf.LazyStringList damageUnitNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          private void ensureDamageUnitNamesIsMutable() {
            if (!((bitField0_ & 0x00000010) == 0x00000010)) {
              damageUnitNames_ = new com.google.protobuf.LazyStringArrayList(damageUnitNames_);
              bitField0_ |= 0x00000010;
             }
          }
          /**
           * <code>repeated string damage_unit_names = 5;</code>
           */
          public com.google.protobuf.ProtocolStringList
              getDamageUnitNamesList() {
            return damageUnitNames_.getUnmodifiableView();
          }
          /**
           * <code>repeated string damage_unit_names = 5;</code>
           */
          public int getDamageUnitNamesCount() {
            return damageUnitNames_.size();
          }
          /**
           * <code>repeated string damage_unit_names = 5;</code>
           */
          public java.lang.String getDamageUnitNames(int index) {
            return damageUnitNames_.get(index);
          }
          /**
           * <code>repeated string damage_unit_names = 5;</code>
           */
          public com.google.protobuf.ByteString
              getDamageUnitNamesBytes(int index) {
            return damageUnitNames_.getByteString(index);
          }
          /**
           * <code>repeated string damage_unit_names = 5;</code>
           */
          public Builder setDamageUnitNames(
              int index, java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureDamageUnitNamesIsMutable();
            damageUnitNames_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string damage_unit_names = 5;</code>
           */
          public Builder addDamageUnitNames(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureDamageUnitNamesIsMutable();
            damageUnitNames_.add(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string damage_unit_names = 5;</code>
           */
          public Builder addAllDamageUnitNames(
              java.lang.Iterable<java.lang.String> values) {
            ensureDamageUnitNamesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, damageUnitNames_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string damage_unit_names = 5;</code>
           */
          public Builder clearDamageUnitNames() {
            damageUnitNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000010);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string damage_unit_names = 5;</code>
           */
          public Builder addDamageUnitNamesBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureDamageUnitNamesIsMutable();
            damageUnitNames_.add(value);
            onChanged();
            return this;
          }

          private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord> buffRecords_ =
            java.util.Collections.emptyList();
          private void ensureBuffRecordsIsMutable() {
            if (!((bitField0_ & 0x00000020) == 0x00000020)) {
              buffRecords_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord>(buffRecords_);
              bitField0_ |= 0x00000020;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecordOrBuilder> buffRecordsBuilder_;

          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
           */
          public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord> getBuffRecordsList() {
            if (buffRecordsBuilder_ == null) {
              return java.util.Collections.unmodifiableList(buffRecords_);
            } else {
              return buffRecordsBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
           */
          public int getBuffRecordsCount() {
            if (buffRecordsBuilder_ == null) {
              return buffRecords_.size();
            } else {
              return buffRecordsBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord getBuffRecords(int index) {
            if (buffRecordsBuilder_ == null) {
              return buffRecords_.get(index);
            } else {
              return buffRecordsBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
           */
          public Builder setBuffRecords(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord value) {
            if (buffRecordsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureBuffRecordsIsMutable();
              buffRecords_.set(index, value);
              onChanged();
            } else {
              buffRecordsBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
           */
          public Builder setBuffRecords(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.Builder builderForValue) {
            if (buffRecordsBuilder_ == null) {
              ensureBuffRecordsIsMutable();
              buffRecords_.set(index, builderForValue.build());
              onChanged();
            } else {
              buffRecordsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
           */
          public Builder addBuffRecords(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord value) {
            if (buffRecordsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureBuffRecordsIsMutable();
              buffRecords_.add(value);
              onChanged();
            } else {
              buffRecordsBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
           */
          public Builder addBuffRecords(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord value) {
            if (buffRecordsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureBuffRecordsIsMutable();
              buffRecords_.add(index, value);
              onChanged();
            } else {
              buffRecordsBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
           */
          public Builder addBuffRecords(
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.Builder builderForValue) {
            if (buffRecordsBuilder_ == null) {
              ensureBuffRecordsIsMutable();
              buffRecords_.add(builderForValue.build());
              onChanged();
            } else {
              buffRecordsBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
           */
          public Builder addBuffRecords(
              int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.Builder builderForValue) {
            if (buffRecordsBuilder_ == null) {
              ensureBuffRecordsIsMutable();
              buffRecords_.add(index, builderForValue.build());
              onChanged();
            } else {
              buffRecordsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
           */
          public Builder addAllBuffRecords(
              java.lang.Iterable<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord> values) {
            if (buffRecordsBuilder_ == null) {
              ensureBuffRecordsIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, buffRecords_);
              onChanged();
            } else {
              buffRecordsBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
           */
          public Builder clearBuffRecords() {
            if (buffRecordsBuilder_ == null) {
              buffRecords_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000020);
              onChanged();
            } else {
              buffRecordsBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
           */
          public Builder removeBuffRecords(int index) {
            if (buffRecordsBuilder_ == null) {
              ensureBuffRecordsIsMutable();
              buffRecords_.remove(index);
              onChanged();
            } else {
              buffRecordsBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.Builder getBuffRecordsBuilder(
              int index) {
            return getBuffRecordsFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecordOrBuilder getBuffRecordsOrBuilder(
              int index) {
            if (buffRecordsBuilder_ == null) {
              return buffRecords_.get(index);  } else {
              return buffRecordsBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
           */
          public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecordOrBuilder> 
               getBuffRecordsOrBuilderList() {
            if (buffRecordsBuilder_ != null) {
              return buffRecordsBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(buffRecords_);
            }
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.Builder addBuffRecordsBuilder() {
            return getBuffRecordsFieldBuilder().addBuilder(
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.getDefaultInstance());
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
           */
          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.Builder addBuffRecordsBuilder(
              int index) {
            return getBuffRecordsFieldBuilder().addBuilder(
                index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.getDefaultInstance());
          }
          /**
           * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player.BuffRecord buff_records = 6;</code>
           */
          public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.Builder> 
               getBuffRecordsBuilderList() {
            return getBuffRecordsFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecordOrBuilder> 
              getBuffRecordsFieldBuilder() {
            if (buffRecordsBuilder_ == null) {
              buffRecordsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecord.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.BuffRecordOrBuilder>(
                      buffRecords_,
                      ((bitField0_ & 0x00000020) == 0x00000020),
                      getParentForChildren(),
                      isClean());
              buffRecords_ = null;
            }
            return buffRecordsBuilder_;
          }

          // @@protoc_insertion_point(builder_scope:CDOTAMatchPrivateMetadata.Team.Player)
        }

        static {
          defaultInstance = new Player(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:CDOTAMatchPrivateMetadata.Team.Player)
      }

      public interface BuildingOrBuilder extends
          // @@protoc_insertion_point(interface_extends:CDOTAMatchPrivateMetadata.Team.Building)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional string unit_name = 1;</code>
         */
        boolean hasUnitName();
        /**
         * <code>optional string unit_name = 1;</code>
         */
        java.lang.String getUnitName();
        /**
         * <code>optional string unit_name = 1;</code>
         */
        com.google.protobuf.ByteString
            getUnitNameBytes();

        /**
         * <code>optional uint32 position_quant_x = 2;</code>
         */
        boolean hasPositionQuantX();
        /**
         * <code>optional uint32 position_quant_x = 2;</code>
         */
        int getPositionQuantX();

        /**
         * <code>optional uint32 position_quant_y = 3;</code>
         */
        boolean hasPositionQuantY();
        /**
         * <code>optional uint32 position_quant_y = 3;</code>
         */
        int getPositionQuantY();

        /**
         * <code>optional float death_time = 4;</code>
         */
        boolean hasDeathTime();
        /**
         * <code>optional float death_time = 4;</code>
         */
        float getDeathTime();
      }
      /**
       * Protobuf type {@code CDOTAMatchPrivateMetadata.Team.Building}
       */
      public static final class Building extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:CDOTAMatchPrivateMetadata.Team.Building)
          BuildingOrBuilder {
        // Use Building.newBuilder() to construct.
        private Building(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Building(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Building defaultInstance;
        public static Building getDefaultInstance() {
          return defaultInstance;
        }

        public Building getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Building(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  bitField0_ |= 0x00000001;
                  unitName_ = bs;
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  positionQuantX_ = input.readUInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  positionQuantY_ = input.readUInt32();
                  break;
                }
                case 37: {
                  bitField0_ |= 0x00000008;
                  deathTime_ = input.readFloat();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Building_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Building_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building.Builder.class);
        }

        public static com.google.protobuf.Parser<Building> PARSER =
            new com.google.protobuf.AbstractParser<Building>() {
          public Building parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Building(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Building> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int UNIT_NAME_FIELD_NUMBER = 1;
        private java.lang.Object unitName_;
        /**
         * <code>optional string unit_name = 1;</code>
         */
        public boolean hasUnitName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string unit_name = 1;</code>
         */
        public java.lang.String getUnitName() {
          java.lang.Object ref = unitName_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              unitName_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string unit_name = 1;</code>
         */
        public com.google.protobuf.ByteString
            getUnitNameBytes() {
          java.lang.Object ref = unitName_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            unitName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int POSITION_QUANT_X_FIELD_NUMBER = 2;
        private int positionQuantX_;
        /**
         * <code>optional uint32 position_quant_x = 2;</code>
         */
        public boolean hasPositionQuantX() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 position_quant_x = 2;</code>
         */
        public int getPositionQuantX() {
          return positionQuantX_;
        }

        public static final int POSITION_QUANT_Y_FIELD_NUMBER = 3;
        private int positionQuantY_;
        /**
         * <code>optional uint32 position_quant_y = 3;</code>
         */
        public boolean hasPositionQuantY() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 position_quant_y = 3;</code>
         */
        public int getPositionQuantY() {
          return positionQuantY_;
        }

        public static final int DEATH_TIME_FIELD_NUMBER = 4;
        private float deathTime_;
        /**
         * <code>optional float death_time = 4;</code>
         */
        public boolean hasDeathTime() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional float death_time = 4;</code>
         */
        public float getDeathTime() {
          return deathTime_;
        }

        private void initFields() {
          unitName_ = "";
          positionQuantX_ = 0;
          positionQuantY_ = 0;
          deathTime_ = 0F;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeBytes(1, getUnitNameBytes());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeUInt32(2, positionQuantX_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeUInt32(3, positionQuantY_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            output.writeFloat(4, deathTime_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(1, getUnitNameBytes());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(2, positionQuantX_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(3, positionQuantY_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(4, deathTime_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CDOTAMatchPrivateMetadata.Team.Building}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:CDOTAMatchPrivateMetadata.Team.Building)
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.BuildingOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Building_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Building_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building.Builder.class);
          }

          // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            unitName_ = "";
            bitField0_ = (bitField0_ & ~0x00000001);
            positionQuantX_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            positionQuantY_ = 0;
            bitField0_ = (bitField0_ & ~0x00000004);
            deathTime_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000008);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_Building_descriptor;
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building getDefaultInstanceForType() {
            return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building.getDefaultInstance();
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building build() {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building buildPartial() {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.unitName_ = unitName_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.positionQuantX_ = positionQuantX_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            result.positionQuantY_ = positionQuantY_;
            if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
              to_bitField0_ |= 0x00000008;
            }
            result.deathTime_ = deathTime_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building) {
              return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building other) {
            if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building.getDefaultInstance()) return this;
            if (other.hasUnitName()) {
              bitField0_ |= 0x00000001;
              unitName_ = other.unitName_;
              onChanged();
            }
            if (other.hasPositionQuantX()) {
              setPositionQuantX(other.getPositionQuantX());
            }
            if (other.hasPositionQuantY()) {
              setPositionQuantY(other.getPositionQuantY());
            }
            if (other.hasDeathTime()) {
              setDeathTime(other.getDeathTime());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object unitName_ = "";
          /**
           * <code>optional string unit_name = 1;</code>
           */
          public boolean hasUnitName() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional string unit_name = 1;</code>
           */
          public java.lang.String getUnitName() {
            java.lang.Object ref = unitName_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                unitName_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string unit_name = 1;</code>
           */
          public com.google.protobuf.ByteString
              getUnitNameBytes() {
            java.lang.Object ref = unitName_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              unitName_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string unit_name = 1;</code>
           */
          public Builder setUnitName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            unitName_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string unit_name = 1;</code>
           */
          public Builder clearUnitName() {
            bitField0_ = (bitField0_ & ~0x00000001);
            unitName_ = getDefaultInstance().getUnitName();
            onChanged();
            return this;
          }
          /**
           * <code>optional string unit_name = 1;</code>
           */
          public Builder setUnitNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            unitName_ = value;
            onChanged();
            return this;
          }

          private int positionQuantX_ ;
          /**
           * <code>optional uint32 position_quant_x = 2;</code>
           */
          public boolean hasPositionQuantX() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional uint32 position_quant_x = 2;</code>
           */
          public int getPositionQuantX() {
            return positionQuantX_;
          }
          /**
           * <code>optional uint32 position_quant_x = 2;</code>
           */
          public Builder setPositionQuantX(int value) {
            bitField0_ |= 0x00000002;
            positionQuantX_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 position_quant_x = 2;</code>
           */
          public Builder clearPositionQuantX() {
            bitField0_ = (bitField0_ & ~0x00000002);
            positionQuantX_ = 0;
            onChanged();
            return this;
          }

          private int positionQuantY_ ;
          /**
           * <code>optional uint32 position_quant_y = 3;</code>
           */
          public boolean hasPositionQuantY() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional uint32 position_quant_y = 3;</code>
           */
          public int getPositionQuantY() {
            return positionQuantY_;
          }
          /**
           * <code>optional uint32 position_quant_y = 3;</code>
           */
          public Builder setPositionQuantY(int value) {
            bitField0_ |= 0x00000004;
            positionQuantY_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 position_quant_y = 3;</code>
           */
          public Builder clearPositionQuantY() {
            bitField0_ = (bitField0_ & ~0x00000004);
            positionQuantY_ = 0;
            onChanged();
            return this;
          }

          private float deathTime_ ;
          /**
           * <code>optional float death_time = 4;</code>
           */
          public boolean hasDeathTime() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          /**
           * <code>optional float death_time = 4;</code>
           */
          public float getDeathTime() {
            return deathTime_;
          }
          /**
           * <code>optional float death_time = 4;</code>
           */
          public Builder setDeathTime(float value) {
            bitField0_ |= 0x00000008;
            deathTime_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float death_time = 4;</code>
           */
          public Builder clearDeathTime() {
            bitField0_ = (bitField0_ & ~0x00000008);
            deathTime_ = 0F;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:CDOTAMatchPrivateMetadata.Team.Building)
        }

        static {
          defaultInstance = new Building(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:CDOTAMatchPrivateMetadata.Team.Building)
      }

      private int bitField0_;
      public static final int DOTA_TEAM_FIELD_NUMBER = 1;
      private int dotaTeam_;
      /**
       * <code>optional uint32 dota_team = 1;</code>
       */
      public boolean hasDotaTeam() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 dota_team = 1;</code>
       */
      public int getDotaTeam() {
        return dotaTeam_;
      }

      public static final int PLAYERS_FIELD_NUMBER = 2;
      private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player> players_;
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player> getPlayersList() {
        return players_;
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.PlayerOrBuilder> 
          getPlayersOrBuilderList() {
        return players_;
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
       */
      public int getPlayersCount() {
        return players_.size();
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player getPlayers(int index) {
        return players_.get(index);
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.PlayerOrBuilder getPlayersOrBuilder(
          int index) {
        return players_.get(index);
      }

      public static final int BUILDINGS_FIELD_NUMBER = 3;
      private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building> buildings_;
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
       */
      public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building> getBuildingsList() {
        return buildings_;
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.BuildingOrBuilder> 
          getBuildingsOrBuilderList() {
        return buildings_;
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
       */
      public int getBuildingsCount() {
        return buildings_.size();
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building getBuildings(int index) {
        return buildings_.get(index);
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.BuildingOrBuilder getBuildingsOrBuilder(
          int index) {
        return buildings_.get(index);
      }

      private void initFields() {
        dotaTeam_ = 0;
        players_ = java.util.Collections.emptyList();
        buildings_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, dotaTeam_);
        }
        for (int i = 0; i < players_.size(); i++) {
          output.writeMessage(2, players_.get(i));
        }
        for (int i = 0; i < buildings_.size(); i++) {
          output.writeMessage(3, buildings_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, dotaTeam_);
        }
        for (int i = 0; i < players_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, players_.get(i));
        }
        for (int i = 0; i < buildings_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, buildings_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTAMatchPrivateMetadata.Team}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDOTAMatchPrivateMetadata.Team)
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.TeamOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Builder.class);
        }

        // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPlayersFieldBuilder();
            getBuildingsFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          dotaTeam_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (playersBuilder_ == null) {
            players_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            playersBuilder_.clear();
          }
          if (buildingsBuilder_ == null) {
            buildings_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            buildingsBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_Team_descriptor;
        }

        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team getDefaultInstanceForType() {
          return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.getDefaultInstance();
        }

        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team build() {
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team buildPartial() {
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.dotaTeam_ = dotaTeam_;
          if (playersBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              players_ = java.util.Collections.unmodifiableList(players_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.players_ = players_;
          } else {
            result.players_ = playersBuilder_.build();
          }
          if (buildingsBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              buildings_ = java.util.Collections.unmodifiableList(buildings_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.buildings_ = buildings_;
          } else {
            result.buildings_ = buildingsBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team) {
            return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team other) {
          if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.getDefaultInstance()) return this;
          if (other.hasDotaTeam()) {
            setDotaTeam(other.getDotaTeam());
          }
          if (playersBuilder_ == null) {
            if (!other.players_.isEmpty()) {
              if (players_.isEmpty()) {
                players_ = other.players_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensurePlayersIsMutable();
                players_.addAll(other.players_);
              }
              onChanged();
            }
          } else {
            if (!other.players_.isEmpty()) {
              if (playersBuilder_.isEmpty()) {
                playersBuilder_.dispose();
                playersBuilder_ = null;
                players_ = other.players_;
                bitField0_ = (bitField0_ & ~0x00000002);
                playersBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getPlayersFieldBuilder() : null;
              } else {
                playersBuilder_.addAllMessages(other.players_);
              }
            }
          }
          if (buildingsBuilder_ == null) {
            if (!other.buildings_.isEmpty()) {
              if (buildings_.isEmpty()) {
                buildings_ = other.buildings_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureBuildingsIsMutable();
                buildings_.addAll(other.buildings_);
              }
              onChanged();
            }
          } else {
            if (!other.buildings_.isEmpty()) {
              if (buildingsBuilder_.isEmpty()) {
                buildingsBuilder_.dispose();
                buildingsBuilder_ = null;
                buildings_ = other.buildings_;
                bitField0_ = (bitField0_ & ~0x00000004);
                buildingsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getBuildingsFieldBuilder() : null;
              } else {
                buildingsBuilder_.addAllMessages(other.buildings_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int dotaTeam_ ;
        /**
         * <code>optional uint32 dota_team = 1;</code>
         */
        public boolean hasDotaTeam() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 dota_team = 1;</code>
         */
        public int getDotaTeam() {
          return dotaTeam_;
        }
        /**
         * <code>optional uint32 dota_team = 1;</code>
         */
        public Builder setDotaTeam(int value) {
          bitField0_ |= 0x00000001;
          dotaTeam_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 dota_team = 1;</code>
         */
        public Builder clearDotaTeam() {
          bitField0_ = (bitField0_ & ~0x00000001);
          dotaTeam_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player> players_ =
          java.util.Collections.emptyList();
        private void ensurePlayersIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            players_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player>(players_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.PlayerOrBuilder> playersBuilder_;

        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
         */
        public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player> getPlayersList() {
          if (playersBuilder_ == null) {
            return java.util.Collections.unmodifiableList(players_);
          } else {
            return playersBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
         */
        public int getPlayersCount() {
          if (playersBuilder_ == null) {
            return players_.size();
          } else {
            return playersBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player getPlayers(int index) {
          if (playersBuilder_ == null) {
            return players_.get(index);
          } else {
            return playersBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
         */
        public Builder setPlayers(
            int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player value) {
          if (playersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePlayersIsMutable();
            players_.set(index, value);
            onChanged();
          } else {
            playersBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
         */
        public Builder setPlayers(
            int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.Builder builderForValue) {
          if (playersBuilder_ == null) {
            ensurePlayersIsMutable();
            players_.set(index, builderForValue.build());
            onChanged();
          } else {
            playersBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
         */
        public Builder addPlayers(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player value) {
          if (playersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePlayersIsMutable();
            players_.add(value);
            onChanged();
          } else {
            playersBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
         */
        public Builder addPlayers(
            int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player value) {
          if (playersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePlayersIsMutable();
            players_.add(index, value);
            onChanged();
          } else {
            playersBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
         */
        public Builder addPlayers(
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.Builder builderForValue) {
          if (playersBuilder_ == null) {
            ensurePlayersIsMutable();
            players_.add(builderForValue.build());
            onChanged();
          } else {
            playersBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
         */
        public Builder addPlayers(
            int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.Builder builderForValue) {
          if (playersBuilder_ == null) {
            ensurePlayersIsMutable();
            players_.add(index, builderForValue.build());
            onChanged();
          } else {
            playersBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
         */
        public Builder addAllPlayers(
            java.lang.Iterable<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player> values) {
          if (playersBuilder_ == null) {
            ensurePlayersIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, players_);
            onChanged();
          } else {
            playersBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
         */
        public Builder clearPlayers() {
          if (playersBuilder_ == null) {
            players_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            playersBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
         */
        public Builder removePlayers(int index) {
          if (playersBuilder_ == null) {
            ensurePlayersIsMutable();
            players_.remove(index);
            onChanged();
          } else {
            playersBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.Builder getPlayersBuilder(
            int index) {
          return getPlayersFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.PlayerOrBuilder getPlayersOrBuilder(
            int index) {
          if (playersBuilder_ == null) {
            return players_.get(index);  } else {
            return playersBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
         */
        public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.PlayerOrBuilder> 
             getPlayersOrBuilderList() {
          if (playersBuilder_ != null) {
            return playersBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(players_);
          }
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.Builder addPlayersBuilder() {
          return getPlayersFieldBuilder().addBuilder(
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.getDefaultInstance());
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.Builder addPlayersBuilder(
            int index) {
          return getPlayersFieldBuilder().addBuilder(
              index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.getDefaultInstance());
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Player players = 2;</code>
         */
        public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.Builder> 
             getPlayersBuilderList() {
          return getPlayersFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.PlayerOrBuilder> 
            getPlayersFieldBuilder() {
          if (playersBuilder_ == null) {
            playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Player.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.PlayerOrBuilder>(
                    players_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            players_ = null;
          }
          return playersBuilder_;
        }

        private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building> buildings_ =
          java.util.Collections.emptyList();
        private void ensureBuildingsIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            buildings_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building>(buildings_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.BuildingOrBuilder> buildingsBuilder_;

        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
         */
        public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building> getBuildingsList() {
          if (buildingsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(buildings_);
          } else {
            return buildingsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
         */
        public int getBuildingsCount() {
          if (buildingsBuilder_ == null) {
            return buildings_.size();
          } else {
            return buildingsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building getBuildings(int index) {
          if (buildingsBuilder_ == null) {
            return buildings_.get(index);
          } else {
            return buildingsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
         */
        public Builder setBuildings(
            int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building value) {
          if (buildingsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBuildingsIsMutable();
            buildings_.set(index, value);
            onChanged();
          } else {
            buildingsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
         */
        public Builder setBuildings(
            int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building.Builder builderForValue) {
          if (buildingsBuilder_ == null) {
            ensureBuildingsIsMutable();
            buildings_.set(index, builderForValue.build());
            onChanged();
          } else {
            buildingsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
         */
        public Builder addBuildings(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building value) {
          if (buildingsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBuildingsIsMutable();
            buildings_.add(value);
            onChanged();
          } else {
            buildingsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
         */
        public Builder addBuildings(
            int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building value) {
          if (buildingsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBuildingsIsMutable();
            buildings_.add(index, value);
            onChanged();
          } else {
            buildingsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
         */
        public Builder addBuildings(
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building.Builder builderForValue) {
          if (buildingsBuilder_ == null) {
            ensureBuildingsIsMutable();
            buildings_.add(builderForValue.build());
            onChanged();
          } else {
            buildingsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
         */
        public Builder addBuildings(
            int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building.Builder builderForValue) {
          if (buildingsBuilder_ == null) {
            ensureBuildingsIsMutable();
            buildings_.add(index, builderForValue.build());
            onChanged();
          } else {
            buildingsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
         */
        public Builder addAllBuildings(
            java.lang.Iterable<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building> values) {
          if (buildingsBuilder_ == null) {
            ensureBuildingsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, buildings_);
            onChanged();
          } else {
            buildingsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
         */
        public Builder clearBuildings() {
          if (buildingsBuilder_ == null) {
            buildings_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            buildingsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
         */
        public Builder removeBuildings(int index) {
          if (buildingsBuilder_ == null) {
            ensureBuildingsIsMutable();
            buildings_.remove(index);
            onChanged();
          } else {
            buildingsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building.Builder getBuildingsBuilder(
            int index) {
          return getBuildingsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.BuildingOrBuilder getBuildingsOrBuilder(
            int index) {
          if (buildingsBuilder_ == null) {
            return buildings_.get(index);  } else {
            return buildingsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
         */
        public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.BuildingOrBuilder> 
             getBuildingsOrBuilderList() {
          if (buildingsBuilder_ != null) {
            return buildingsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(buildings_);
          }
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building.Builder addBuildingsBuilder() {
          return getBuildingsFieldBuilder().addBuilder(
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building.getDefaultInstance());
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
         */
        public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building.Builder addBuildingsBuilder(
            int index) {
          return getBuildingsFieldBuilder().addBuilder(
              index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building.getDefaultInstance());
        }
        /**
         * <code>repeated .CDOTAMatchPrivateMetadata.Team.Building buildings = 3;</code>
         */
        public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building.Builder> 
             getBuildingsBuilderList() {
          return getBuildingsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.BuildingOrBuilder> 
            getBuildingsFieldBuilder() {
          if (buildingsBuilder_ == null) {
            buildingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Building.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.BuildingOrBuilder>(
                    buildings_,
                    ((bitField0_ & 0x00000004) == 0x00000004),
                    getParentForChildren(),
                    isClean());
            buildings_ = null;
          }
          return buildingsBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:CDOTAMatchPrivateMetadata.Team)
      }

      static {
        defaultInstance = new Team(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTAMatchPrivateMetadata.Team)
    }

    public static final int TEAMS_FIELD_NUMBER = 1;
    private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team> teams_;
    /**
     * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
     */
    public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team> getTeamsList() {
      return teams_;
    }
    /**
     * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.TeamOrBuilder> 
        getTeamsOrBuilderList() {
      return teams_;
    }
    /**
     * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
     */
    public int getTeamsCount() {
      return teams_.size();
    }
    /**
     * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
     */
    public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team getTeams(int index) {
      return teams_.get(index);
    }
    /**
     * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
     */
    public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.TeamOrBuilder getTeamsOrBuilder(
        int index) {
      return teams_.get(index);
    }

    private void initFields() {
      teams_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < teams_.size(); i++) {
        output.writeMessage(1, teams_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < teams_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, teams_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTAMatchPrivateMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDOTAMatchPrivateMetadata)
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.class, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Builder.class);
      }

      // Construct using skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTeamsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (teamsBuilder_ == null) {
          teams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          teamsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.internal_static_CDOTAMatchPrivateMetadata_descriptor;
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata getDefaultInstanceForType() {
        return skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.getDefaultInstance();
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata build() {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata buildPartial() {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata result = new skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata(this);
        int from_bitField0_ = bitField0_;
        if (teamsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            teams_ = java.util.Collections.unmodifiableList(teams_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.teams_ = teams_;
        } else {
          result.teams_ = teamsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata) {
          return mergeFrom((skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata other) {
        if (other == skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.getDefaultInstance()) return this;
        if (teamsBuilder_ == null) {
          if (!other.teams_.isEmpty()) {
            if (teams_.isEmpty()) {
              teams_ = other.teams_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTeamsIsMutable();
              teams_.addAll(other.teams_);
            }
            onChanged();
          }
        } else {
          if (!other.teams_.isEmpty()) {
            if (teamsBuilder_.isEmpty()) {
              teamsBuilder_.dispose();
              teamsBuilder_ = null;
              teams_ = other.teams_;
              bitField0_ = (bitField0_ & ~0x00000001);
              teamsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTeamsFieldBuilder() : null;
            } else {
              teamsBuilder_.addAllMessages(other.teams_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team> teams_ =
        java.util.Collections.emptyList();
      private void ensureTeamsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          teams_ = new java.util.ArrayList<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team>(teams_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.TeamOrBuilder> teamsBuilder_;

      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team> getTeamsList() {
        if (teamsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(teams_);
        } else {
          return teamsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
       */
      public int getTeamsCount() {
        if (teamsBuilder_ == null) {
          return teams_.size();
        } else {
          return teamsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team getTeams(int index) {
        if (teamsBuilder_ == null) {
          return teams_.get(index);
        } else {
          return teamsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
       */
      public Builder setTeams(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.set(index, value);
          onChanged();
        } else {
          teamsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
       */
      public Builder setTeams(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.set(index, builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
       */
      public Builder addTeams(skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.add(value);
          onChanged();
        } else {
          teamsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
       */
      public Builder addTeams(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.add(index, value);
          onChanged();
        } else {
          teamsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
       */
      public Builder addTeams(
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.add(builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
       */
      public Builder addTeams(
          int index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.add(index, builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
       */
      public Builder addAllTeams(
          java.lang.Iterable<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team> values) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, teams_);
          onChanged();
        } else {
          teamsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
       */
      public Builder clearTeams() {
        if (teamsBuilder_ == null) {
          teams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          teamsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
       */
      public Builder removeTeams(int index) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.remove(index);
          onChanged();
        } else {
          teamsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Builder getTeamsBuilder(
          int index) {
        return getTeamsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.TeamOrBuilder getTeamsOrBuilder(
          int index) {
        if (teamsBuilder_ == null) {
          return teams_.get(index);  } else {
          return teamsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.TeamOrBuilder> 
           getTeamsOrBuilderList() {
        if (teamsBuilder_ != null) {
          return teamsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(teams_);
        }
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Builder addTeamsBuilder() {
        return getTeamsFieldBuilder().addBuilder(
            skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
       */
      public skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Builder addTeamsBuilder(
          int index) {
        return getTeamsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTAMatchPrivateMetadata.Team teams = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Builder> 
           getTeamsBuilderList() {
        return getTeamsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.TeamOrBuilder> 
          getTeamsFieldBuilder() {
        if (teamsBuilder_ == null) {
          teamsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.Team.Builder, skadistats.clarity.wire.s2.proto.S2DotaMatchMetadata.CDOTAMatchPrivateMetadata.TeamOrBuilder>(
                  teams_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          teams_ = null;
        }
        return teamsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CDOTAMatchPrivateMetadata)
    }

    static {
      defaultInstance = new CDOTAMatchPrivateMetadata(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTAMatchPrivateMetadata)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CLobbyTimedRewardDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CLobbyTimedRewardDetails_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchMetadataFile_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchMetadataFile_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchMetadata_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchMetadata_Team_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchMetadata_Team_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchMetadata_Team_PlayerKill_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchMetadata_Team_PlayerKill_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchMetadata_Team_ItemPurchase_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchMetadata_Team_ItemPurchase_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchMetadata_Team_InventorySnapshot_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchMetadata_Team_InventorySnapshot_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchMetadata_Team_AutoStyleCriteria_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchMetadata_Team_AutoStyleCriteria_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchMetadata_Team_Player_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchMetadata_Team_Player_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchPrivateMetadata_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchPrivateMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchPrivateMetadata_Team_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchPrivateMetadata_Team_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchPrivateMetadata_Team_Player_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchPrivateMetadata_Team_Player_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_DamageByAbility_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_DamageByAbility_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_DamageByAbility_ByHeroTarget_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_DamageByAbility_ByHeroTarget_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchPrivateMetadata_Team_Player_BuffRecord_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchPrivateMetadata_Team_Player_BuffRecord_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchPrivateMetadata_Team_Player_BuffRecord_ByHeroTarget_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchPrivateMetadata_Team_Player_BuffRecord_ByHeroTarget_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTAMatchPrivateMetadata_Team_Building_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTAMatchPrivateMetadata_Team_Building_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034s2_dota_match_metadata.proto\032\030s2_base_" +
      "gcmessages.proto\"\206\001\n\030CLobbyTimedRewardDe" +
      "tails\022\026\n\016item_def_index\030\002 \001(\r\022\027\n\017is_supp" +
      "ly_crate\030\003 \001(\010\022\025\n\ris_timed_drop\030\004 \001(\010\022\022\n" +
      "\naccount_id\030\005 \001(\r\022\016\n\006origin\030\006 \001(\r\"|\n\026CDO" +
      "TAMatchMetadataFile\022\017\n\007version\030\001 \002(\005\022\020\n\010" +
      "match_id\030\002 \002(\004\022%\n\010metadata\030\003 \001(\0132\023.CDOTA" +
      "MatchMetadata\022\030\n\020private_metadata\030\005 \001(\014\"" +
      "\261\014\n\022CDOTAMatchMetadata\022\'\n\005teams\030\001 \003(\0132\030." +
      "CDOTAMatchMetadata.Team\022/\n\014item_rewards\030",
      "\002 \003(\0132\031.CLobbyTimedRewardDetails\022\020\n\010lobb" +
      "y_id\030\003 \001(\006\022\031\n\021report_until_time\030\004 \001(\006\022\037\n" +
      "\027event_game_custom_table\030\005 \001(\014\032\362\n\n\004Team\022" +
      "\021\n\tdota_team\030\001 \001(\r\0220\n\007players\030\002 \003(\0132\037.CD" +
      "OTAMatchMetadata.Team.Player\022\030\n\020graph_ex" +
      "perience\030\003 \003(\002\022\031\n\021graph_gold_earned\030\004 \003(" +
      "\002\022\027\n\017graph_net_worth\030\005 \003(\002\022\025\n\rcm_first_p" +
      "ick\030\006 \001(\010\022\034\n\024cm_captain_player_id\030\007 \001(\r\022" +
      "\017\n\007cm_bans\030\010 \003(\r\022\020\n\010cm_picks\030\t \003(\r\022\022\n\ncm" +
      "_penalty\030\n \001(\r\0320\n\nPlayerKill\022\023\n\013victim_s",
      "lot\030\001 \001(\r\022\r\n\005count\030\002 \001(\r\0326\n\014ItemPurchase" +
      "\022\017\n\007item_id\030\001 \001(\r\022\025\n\rpurchase_time\030\002 \001(\005" +
      "\032v\n\021InventorySnapshot\022\017\n\007item_id\030\001 \003(\r\022\021" +
      "\n\tgame_time\030\002 \001(\005\022\r\n\005kills\030\003 \001(\r\022\016\n\006deat" +
      "hs\030\004 \001(\r\022\017\n\007assists\030\005 \001(\r\022\r\n\005level\030\006 \001(\r" +
      "\0326\n\021AutoStyleCriteria\022\022\n\nname_token\030\001 \001(" +
      "\r\022\r\n\005value\030\002 \001(\002\032\320\006\n\006Player\022\022\n\naccount_i" +
      "d\030\001 \001(\r\022\030\n\020ability_upgrades\030\002 \003(\r\022\023\n\013pla" +
      "yer_slot\030\003 \001(\r\022)\n\023equipped_econ_items\030\004 " +
      "\003(\0132\014.CSOEconItem\0222\n\005kills\030\005 \003(\0132#.CDOTA",
      "MatchMetadata.Team.PlayerKill\0224\n\005items\030\006" +
      " \003(\0132%.CDOTAMatchMetadata.Team.ItemPurch" +
      "ase\022\025\n\ravg_kills_x16\030\007 \001(\r\022\026\n\016avg_deaths" +
      "_x16\030\010 \001(\r\022\027\n\017avg_assists_x16\030\t \001(\r\022\023\n\013a" +
      "vg_gpm_x16\030\n \001(\r\022\023\n\013avg_xpm_x16\030\013 \001(\r\022\026\n" +
      "\016best_kills_x16\030\014 \001(\r\022\030\n\020best_assists_x1" +
      "6\030\r \001(\r\022\024\n\014best_gpm_x16\030\016 \001(\r\022\024\n\014best_xp" +
      "m_x16\030\017 \001(\r\022\022\n\nwin_streak\030\020 \001(\r\022\027\n\017best_" +
      "win_streak\030\021 \001(\r\022\023\n\013fight_score\030\022 \001(\002\022\022\n" +
      "\nfarm_score\030\023 \001(\002\022\025\n\rsupport_score\030\024 \001(\002",
      "\022\022\n\npush_score\030\025 \001(\002\022\026\n\016level_up_times\030\026" +
      " \003(\r\022\027\n\017graph_net_worth\030\027 \003(\002\022F\n\022invento" +
      "ry_snapshot\030\030 \003(\0132*.CDOTAMatchMetadata.T" +
      "eam.InventorySnapshot\022\034\n\024avg_stats_calib" +
      "rated\030\031 \001(\010\022G\n\023auto_style_criteria\030\032 \003(\013" +
      "2*.CDOTAMatchMetadata.Team.AutoStyleCrit" +
      "eria\022\020\n\010event_id\030\033 \001(\r\022\024\n\014event_points\030\034" +
      " \001(\r\022\025\n\rcamps_stacked\030  \001(\r\"\225\t\n\031CDOTAMat" +
      "chPrivateMetadata\022.\n\005teams\030\001 \003(\0132\037.CDOTA" +
      "MatchPrivateMetadata.Team\032\307\010\n\004Team\022\021\n\tdo",
      "ta_team\030\001 \001(\r\0227\n\007players\030\002 \003(\0132&.CDOTAMa" +
      "tchPrivateMetadata.Team.Player\022;\n\tbuildi" +
      "ngs\030\003 \003(\0132(.CDOTAMatchPrivateMetadata.Te" +
      "am.Building\032\316\006\n\006Player\022\022\n\naccount_id\030\001 \001" +
      "(\r\022\023\n\013player_slot\030\002 \001(\r\022\027\n\017position_stre" +
      "am\030\003 \001(\014\022M\n\017combat_segments\030\004 \003(\01324.CDOT" +
      "AMatchPrivateMetadata.Team.Player.Combat" +
      "Segment\022\031\n\021damage_unit_names\030\005 \003(\t\022G\n\014bu" +
      "ff_records\030\006 \003(\01321.CDOTAMatchPrivateMeta" +
      "data.Team.Player.BuffRecord\032\343\002\n\rCombatSe",
      "gment\022\021\n\tgame_time\030\001 \001(\005\022_\n\021damage_by_ab" +
      "ility\030\002 \003(\0132D.CDOTAMatchPrivateMetadata." +
      "Team.Player.CombatSegment.DamageByAbilit" +
      "y\032\335\001\n\017DamageByAbility\022\031\n\021source_unit_ind" +
      "ex\030\003 \001(\r\022\022\n\nability_id\030\001 \001(\r\022j\n\017by_hero_" +
      "targets\030\002 \003(\0132Q.CDOTAMatchPrivateMetadat" +
      "a.Team.Player.CombatSegment.DamageByAbil" +
      "ity.ByHeroTarget\032/\n\014ByHeroTarget\022\017\n\007hero" +
      "_id\030\001 \001(\r\022\016\n\006damage\030\002 \001(\r\032\350\001\n\nBuffRecord" +
      "\022\027\n\017buff_ability_id\030\001 \001(\r\022\032\n\022buff_modifi",
      "er_name\030\003 \001(\t\022W\n\017by_hero_targets\030\002 \003(\0132>" +
      ".CDOTAMatchPrivateMetadata.Team.Player.B" +
      "uffRecord.ByHeroTarget\032L\n\014ByHeroTarget\022\017" +
      "\n\007hero_id\030\001 \001(\r\022\030\n\020elapsed_duration\030\002 \001(" +
      "\002\022\021\n\tis_hidden\030\003 \001(\010\032e\n\010Building\022\021\n\tunit" +
      "_name\030\001 \001(\t\022\030\n\020position_quant_x\030\002 \001(\r\022\030\n" +
      "\020position_quant_y\030\003 \001(\r\022\022\n\ndeath_time\030\004 " +
      "\001(\002B:\n skadistats.clarity.wire.s2.protoB" +
      "\023S2DotaMatchMetadata\200\001\000"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          skadistats.clarity.wire.s2.proto.S2BaseGcMessages.getDescriptor(),
        }, assigner);
    internal_static_CLobbyTimedRewardDetails_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CLobbyTimedRewardDetails_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CLobbyTimedRewardDetails_descriptor,
        new java.lang.String[] { "ItemDefIndex", "IsSupplyCrate", "IsTimedDrop", "AccountId", "Origin", });
    internal_static_CDOTAMatchMetadataFile_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CDOTAMatchMetadataFile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchMetadataFile_descriptor,
        new java.lang.String[] { "Version", "MatchId", "Metadata", "PrivateMetadata", });
    internal_static_CDOTAMatchMetadata_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CDOTAMatchMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchMetadata_descriptor,
        new java.lang.String[] { "Teams", "ItemRewards", "LobbyId", "ReportUntilTime", "EventGameCustomTable", });
    internal_static_CDOTAMatchMetadata_Team_descriptor =
      internal_static_CDOTAMatchMetadata_descriptor.getNestedTypes().get(0);
    internal_static_CDOTAMatchMetadata_Team_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchMetadata_Team_descriptor,
        new java.lang.String[] { "DotaTeam", "Players", "GraphExperience", "GraphGoldEarned", "GraphNetWorth", "CmFirstPick", "CmCaptainPlayerId", "CmBans", "CmPicks", "CmPenalty", });
    internal_static_CDOTAMatchMetadata_Team_PlayerKill_descriptor =
      internal_static_CDOTAMatchMetadata_Team_descriptor.getNestedTypes().get(0);
    internal_static_CDOTAMatchMetadata_Team_PlayerKill_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchMetadata_Team_PlayerKill_descriptor,
        new java.lang.String[] { "VictimSlot", "Count", });
    internal_static_CDOTAMatchMetadata_Team_ItemPurchase_descriptor =
      internal_static_CDOTAMatchMetadata_Team_descriptor.getNestedTypes().get(1);
    internal_static_CDOTAMatchMetadata_Team_ItemPurchase_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchMetadata_Team_ItemPurchase_descriptor,
        new java.lang.String[] { "ItemId", "PurchaseTime", });
    internal_static_CDOTAMatchMetadata_Team_InventorySnapshot_descriptor =
      internal_static_CDOTAMatchMetadata_Team_descriptor.getNestedTypes().get(2);
    internal_static_CDOTAMatchMetadata_Team_InventorySnapshot_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchMetadata_Team_InventorySnapshot_descriptor,
        new java.lang.String[] { "ItemId", "GameTime", "Kills", "Deaths", "Assists", "Level", });
    internal_static_CDOTAMatchMetadata_Team_AutoStyleCriteria_descriptor =
      internal_static_CDOTAMatchMetadata_Team_descriptor.getNestedTypes().get(3);
    internal_static_CDOTAMatchMetadata_Team_AutoStyleCriteria_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchMetadata_Team_AutoStyleCriteria_descriptor,
        new java.lang.String[] { "NameToken", "Value", });
    internal_static_CDOTAMatchMetadata_Team_Player_descriptor =
      internal_static_CDOTAMatchMetadata_Team_descriptor.getNestedTypes().get(4);
    internal_static_CDOTAMatchMetadata_Team_Player_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchMetadata_Team_Player_descriptor,
        new java.lang.String[] { "AccountId", "AbilityUpgrades", "PlayerSlot", "EquippedEconItems", "Kills", "Items", "AvgKillsX16", "AvgDeathsX16", "AvgAssistsX16", "AvgGpmX16", "AvgXpmX16", "BestKillsX16", "BestAssistsX16", "BestGpmX16", "BestXpmX16", "WinStreak", "BestWinStreak", "FightScore", "FarmScore", "SupportScore", "PushScore", "LevelUpTimes", "GraphNetWorth", "InventorySnapshot", "AvgStatsCalibrated", "AutoStyleCriteria", "EventId", "EventPoints", "CampsStacked", });
    internal_static_CDOTAMatchPrivateMetadata_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_CDOTAMatchPrivateMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchPrivateMetadata_descriptor,
        new java.lang.String[] { "Teams", });
    internal_static_CDOTAMatchPrivateMetadata_Team_descriptor =
      internal_static_CDOTAMatchPrivateMetadata_descriptor.getNestedTypes().get(0);
    internal_static_CDOTAMatchPrivateMetadata_Team_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchPrivateMetadata_Team_descriptor,
        new java.lang.String[] { "DotaTeam", "Players", "Buildings", });
    internal_static_CDOTAMatchPrivateMetadata_Team_Player_descriptor =
      internal_static_CDOTAMatchPrivateMetadata_Team_descriptor.getNestedTypes().get(0);
    internal_static_CDOTAMatchPrivateMetadata_Team_Player_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchPrivateMetadata_Team_Player_descriptor,
        new java.lang.String[] { "AccountId", "PlayerSlot", "PositionStream", "CombatSegments", "DamageUnitNames", "BuffRecords", });
    internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_descriptor =
      internal_static_CDOTAMatchPrivateMetadata_Team_Player_descriptor.getNestedTypes().get(0);
    internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_descriptor,
        new java.lang.String[] { "GameTime", "DamageByAbility", });
    internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_DamageByAbility_descriptor =
      internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_descriptor.getNestedTypes().get(0);
    internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_DamageByAbility_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_DamageByAbility_descriptor,
        new java.lang.String[] { "SourceUnitIndex", "AbilityId", "ByHeroTargets", });
    internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_DamageByAbility_ByHeroTarget_descriptor =
      internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_DamageByAbility_descriptor.getNestedTypes().get(0);
    internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_DamageByAbility_ByHeroTarget_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchPrivateMetadata_Team_Player_CombatSegment_DamageByAbility_ByHeroTarget_descriptor,
        new java.lang.String[] { "HeroId", "Damage", });
    internal_static_CDOTAMatchPrivateMetadata_Team_Player_BuffRecord_descriptor =
      internal_static_CDOTAMatchPrivateMetadata_Team_Player_descriptor.getNestedTypes().get(1);
    internal_static_CDOTAMatchPrivateMetadata_Team_Player_BuffRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchPrivateMetadata_Team_Player_BuffRecord_descriptor,
        new java.lang.String[] { "BuffAbilityId", "BuffModifierName", "ByHeroTargets", });
    internal_static_CDOTAMatchPrivateMetadata_Team_Player_BuffRecord_ByHeroTarget_descriptor =
      internal_static_CDOTAMatchPrivateMetadata_Team_Player_BuffRecord_descriptor.getNestedTypes().get(0);
    internal_static_CDOTAMatchPrivateMetadata_Team_Player_BuffRecord_ByHeroTarget_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchPrivateMetadata_Team_Player_BuffRecord_ByHeroTarget_descriptor,
        new java.lang.String[] { "HeroId", "ElapsedDuration", "IsHidden", });
    internal_static_CDOTAMatchPrivateMetadata_Team_Building_descriptor =
      internal_static_CDOTAMatchPrivateMetadata_Team_descriptor.getNestedTypes().get(1);
    internal_static_CDOTAMatchPrivateMetadata_Team_Building_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDOTAMatchPrivateMetadata_Team_Building_descriptor,
        new java.lang.String[] { "UnitName", "PositionQuantX", "PositionQuantY", "DeathTime", });
    skadistats.clarity.wire.s2.proto.S2BaseGcMessages.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
